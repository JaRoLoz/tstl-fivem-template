/* Generated by https://github.com/JaRoLoz/tstl-fivem-natives */
export { };
interface CitizenExports {
    (exportKey: string | number, exportFunction: Function): void;
    [resourceName: string]: {
        [exportKey: string | number]: Function;
    };
}
declare global {
    var source: number;
    var QBCore: any;
    var MySQL: any;
    var Interval: any;
    var exports: CitizenExports;

    type Vector2 = {
        x: number;
        y: number;
    };
    function vector2(x: number, y: number): Vector2;
    type Vector3 = {
        x: number;
        y: number;
        z: number;
    };
    function vector3(x: number, y: number, z: number): Vector3;
    type Vector4 = {
        x: number;
        y: number;
        z: number;
        w: number;
    };
    function vector4(x: number, y: number, z: number, w: number): Vector4;
    function CreateThread(callback: () => void): void;
    function AddEventHandler(eventName: string, cb: (...args: any[]) => void): void;
    function RegisterNetEvent(eventName: string, cb: (...args: any[]) => void): void;
    function TriggerClientEvent(eventName: string, ...args: any[]): void;
    function TriggerServerEvent(eventName: string, ...args: any[]): void;
    function TriggerEvent(eventName: string, ...args: any[]): void;
    function SendNUIMessage(data: object): void;
    function Absf(value: number): number;
    function Absi(value: number): number;
    function Acos(p0: number): number;
    function ActivateAudioSlowmoMode(p0: string): void;
    function N_0xd01005d2ba2eb778(p0: string): void;
    function ActivateDamageTrackerOnNetworkId(netID: number, toggle: boolean): void;
    function ActivateDamageTrackerOnPlayer(player: number, toggle: boolean): void;
    function N_0xbec0816ff5acbcda(player: number, toggle: boolean): void;
    function ActivateFrontendMenu(menuhash: number, togglePause: boolean, component: number): void;
    function ActivateInteriorEntitySet(interior: number, entitySetName: string): void;
    function N_0x55e86af2712b36a1(interior: number, entitySetName: string): void;
    function EnableInteriorProp(interior: number, entitySetName: string): void;
    function ActivatePhysics(entity: number): void;
    function ActivateRockstarEditor(): void;
    function N_0x49da8145672b2725(): void;
    function ActivateTimecycleEditor(): void;
    function AddAmmoToPed(ped: number, weaponHash: number, ammo: number): void;
    function AddAmmoToPedByType(ped: number, ammoType: number, ammo: number): void;
    function N_0x2472622ce1f2d45f(ped: number, ammoType: number, ammo: number): void;
    function AddPedAmmo(ped: number, ammoType: number, ammo: number): void;
    function AddArmourToPed(ped: number, amount: number): void;
    function AddAudioSubmixOutput(submixId: number, outputSubmixId: number): void;
    function AddBlipForArea(x: number, y: number, z: number, width: number, height: number): number;
    function N_0xce5d0e5e315db238(x: number, y: number, z: number, width: number, height: number): number;
    function AddBlipForCoord(x: number, y: number, z: number): number;
    function AddBlipForEntity(entity: number): number;
    function AddBlipForPickup(pickup: number): number;
    function AddBlipForRadius(posX: number, posY: number, posZ: number, radius: number): number;
    function AddCamSplineNode(
        camera: number,
        x: number,
        y: number,
        z: number,
        xRot: number,
        yRot: number,
        zRot: number,
        length: number,
        p8: number,
        transitionType: number
    ): void;
    function AddCamSplineNodeUsingCamera(cam: number, cam2: number, length: number, p3: number): void;
    function N_0x0fb82563989cf4fb(cam: number, cam2: number, length: number, p3: number): void;
    function AddCamSplineNodeUsingCameraFrame(cam: number, cam2: number, p2: number, p3: number): void;
    function N_0x0a9f2a468b328e74(cam: number, cam2: number, p2: number, p3: number): void;
    function AddCamSplineNodeUsingGameplayFrame(cam: number, p1: number, p2: number): void;
    function N_0x609278246a29ca34(cam: number, p1: number, p2: number): void;
    function AddCoverBlockingArea(
        playerX: number,
        playerY: number,
        playerZ: number,
        radiusX: number,
        radiusY: number,
        radiusZ: number,
        p6: boolean,
        p7: boolean,
        p8: boolean,
        p9: boolean
    ): void;
    function AddCoverPoint(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: boolean
    ): number;
    function AddDecal(
        decalType: number,
        posX: number,
        posY: number,
        posZ: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        width: number,
        height: number,
        rCoef: number,
        gCoef: number,
        bCoef: number,
        opacity: number,
        timeout: number,
        p17: boolean,
        p18: boolean,
        p19: boolean
    ): number;
    function AddDispatchSpawnBlockingAngledArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number
    ): number;
    function N_0x918c7b2d2ff3928b(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number
    ): number;
    function AddDispatchSpawnBlockingArea(x1: number, y1: number, x2: number, y2: number): number;
    function N_0x2d4259f1feb81da9(x1: number, y1: number, x2: number, y2: number): number;
    function AddDoorToSystem(
        doorHash: number,
        modelHash: number,
        x: number,
        y: number,
        z: number,
        p5: boolean,
        scriptDoor: boolean,
        isLocal: boolean
    ): void;
    function AddEntityIcon(entity: number, icon: string): number;
    function AddEntityToAudioMixGroup(entity: number, groupName: string, p2: number): void;
    function N_0x153973ab99fe8980(entity: number, groupName: string, p2: number): void;
    function DynamicMixerRelatedFn(entity: number, groupName: string, p2: number): void;
    function AddExplosion(
        x: number,
        y: number,
        z: number,
        explosionType: number,
        damageScale: number,
        isAudible: boolean,
        isInvisible: boolean,
        cameraShake: number
    ): void;
    function AddExplosionWithUserVfx(
        x: number,
        y: number,
        z: number,
        explosionType: number,
        explosionFx: number,
        damageScale: number,
        isAudible: boolean,
        isInvisible: boolean,
        cameraShake: number
    ): void;
    function AddSpecfxExplosion(
        x: number,
        y: number,
        z: number,
        explosionType: number,
        explosionFx: number,
        damageScale: number,
        isAudible: boolean,
        isInvisible: boolean,
        cameraShake: number
    ): void;
    function AddExtraCalmingQuad(xLow: number, yLow: number, xHigh: number, yHigh: number, height: number): number;
    function N_0xfdbf4cdbc07e1706(xLow: number, yLow: number, xHigh: number, yHigh: number, height: number): number;
    function AddCurrentRise(xLow: number, yLow: number, xHigh: number, yHigh: number, height: number): number;
    function AddHospitalRestart(x: number, y: number, z: number, p3: number, p4: number): number;
    function AddLineToConversation(
        index: number,
        p1: string,
        p2: string,
        p3: number,
        p4: number,
        p5: boolean,
        p6: boolean,
        p7: boolean,
        p8: boolean,
        p9: number,
        p10: boolean,
        p11: boolean,
        p12: boolean
    ): void;
    function AddMinimapOverlay(name: string): number;
    function AddMinimapOverlayWithDepth(name: string, depth: number): number;
    function AddModelToCreatorBudget(modelHash: number): boolean;
    function N_0x0bc3144deb678666(modelHash: number): boolean;
    function AddNavmeshBlockingObject(
        x: number,
        y: number,
        z: number,
        width: number,
        length: number,
        height: number,
        heading: number,
        p7: boolean,
        p8: number
    ): number;
    function AddNavmeshRequiredRegion(x: number, y: number, radius: number): void;
    function AddNextMessageToPreviousBriefs(p0: boolean): void;
    function AddOilDecal(
        x: number,
        y: number,
        z: number,
        groundLvl: number,
        width: number,
        transparency: number
    ): number;
    function AddOwnedExplosion(
        ped: number,
        x: number,
        y: number,
        z: number,
        explosionType: number,
        damageScale: number,
        isAudible: boolean,
        isInvisible: boolean,
        cameraShake: number
    ): void;
    function AddPatrolRouteLink(id1: number, id2: number): void;
    function AddPatrolRouteNode(
        id: number,
        guardScenario: string,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        waitTime: number
    ): void;
    function AddPedDecorationFromHashes(ped: number, collection: number, overlay: number): void;
    function ApplyPedOverlay(ped: number, collection: number, overlay: number): void;
    function SetPedDecoration(ped: number, collection: number, overlay: number): void;
    function AddPedDecorationFromHashesInCorona(ped: number, collection: number, overlay: number): void;
    function N_0x5619bfa07cfd7833(ped: number, collection: number, overlay: number): void;
    function SetPedFacialDecoration(ped: number, collection: number, overlay: number): void;
    function AddPedToConversation(index: number, ped: number, p2: string): void;
    function AddPetrolDecal(
        x: number,
        y: number,
        z: number,
        groundLvl: number,
        width: number,
        transparency: number
    ): number;
    function AddPetrolTrailDecalInfo(x: number, y: number, z: number, p3: number): void;
    function N_0x967278682cb6967a(x: number, y: number, z: number, p3: number): void;
    function AddPickupToInteriorRoomByName(pickup: number, roomName: string): void;
    function AddPointToGpsCustomRoute(x: number, y: number, z: number): void;
    function N_0x311438a071dd9b1a(x: number, y: number, z: number): void;
    function AddPointToGpsMultiRoute(x: number, y: number, z: number): void;
    function N_0xa905192a6781c41b(x: number, y: number, z: number): void;
    function AddPoliceRestart(p0: number, p1: number, p2: number, p3: number, p4: number): number;
    function AddPopMultiplierArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        p6: number,
        p7: number,
        p8: boolean
    ): number;
    function N_0x67f6413d3220e18d(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        p6: number,
        p7: number,
        p8: boolean
    ): number;
    function AddPopMultiplierSphere(
        x: number,
        y: number,
        z: number,
        radius: number,
        pedMultiplier: number,
        vehicleMultiplier: number,
        p6: boolean,
        p7: boolean
    ): number;
    function N_0x32c7a7e8c43a1f80(
        x: number,
        y: number,
        z: number,
        radius: number,
        pedMultiplier: number,
        vehicleMultiplier: number,
        p6: boolean,
        p7: boolean
    ): number;
    function AddRelationshipGroup(name: string, groupHash: number): LuaMultiReturn<[number, number]>;
    function AddReplaceTexture(origTxd: string, origTxn: string, newTxd: string, newTxn: string): void;
    function AddReplayStatValue(value: number): void;
    function N_0x69fe6dc87bd2a5e9(value: number): void;
    function AddRoadNodeSpeedZone(x: number, y: number, z: number, radius: number, speed: number, p5: boolean): number;
    function N_0x2ce544c68fb812a0(x: number, y: number, z: number, radius: number, speed: number, p5: boolean): number;
    function AddSpeedZoneForCoord(x: number, y: number, z: number, radius: number, speed: number, p5: boolean): number;
    function AddRope(
        x: number,
        y: number,
        z: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        maxLength: number,
        ropeType: number,
        initLength: number,
        minLength: number,
        lengthChangeRate: number,
        onlyPPU: boolean,
        collisionOn: boolean,
        lockFromFront: boolean,
        timeMultiplier: number,
        breakable: boolean,
        unkPtr: number
    ): LuaMultiReturn<[number, number]>;
    function AddScenarioBlockingArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        p6: boolean,
        p7: boolean,
        p8: boolean,
        p9: boolean
    ): number;
    function AddScriptToRandomPed(name: string, model: number, p2: number, p3: number): void;
    function AddShockingEventAtPosition(eventType: number, x: number, y: number, z: number, duration: number): number;
    function AddShockingEventForEntity(eventType: number, entity: number, duration: number): number;
    function AddStateBagChangeHandler(keyFilter: string, bagFilter: string, handler: any): number;
    function AddStuntJump(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        x3: number,
        y3: number,
        z3: number,
        x4: number,
        y4: number,
        z4: number,
        camX: number,
        camY: number,
        camZ: number,
        unk1: number,
        unk2: number,
        unk3: number
    ): number;
    function AddStuntJumpAngled(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        radius1: number,
        x3: number,
        y3: number,
        z3: number,
        x4: number,
        y4: number,
        z4: number,
        radius2: number,
        camX: number,
        camY: number,
        camZ: number,
        unk1: number,
        unk2: number,
        unk3: number
    ): number;
    function AddTacticalAnalysisPoint(x: number, y: number, z: number): void;
    function N_0xb8721407ee9c3ff6(x: number, y: number, z: number): void;
    function AddTcmodifierOverride(modifierName1: string, modifierName2: string): void;
    function N_0x1a8e2c8b9cf4549c(modifierName1: string, modifierName2: string): void;
    function AddTextComponentFloat(value: number, decimalPlaces: number): void;
    function AddTextComponentFormattedInteger(value: number, commaSeparated: boolean): void;
    function N_0x0e4c749ff9de9cc4(value: number, commaSeparated: boolean): void;
    function AddTextComponentInteger(value: number): void;
    function AddTextComponentSubstringBlipName(blip: number): void;
    function N_0x80ead8e2e1d5d52e(blip: number): void;
    function AddTextComponentSubstringKeyboardDisplay(_string: string): void;
    function AddTextComponentString3(_string: string): void;
    function AddTextComponentScaleform(_string: string): void;
    function AddTextComponentSubstringPhoneNumber(p0: string, p1: number): void;
    function N_0x761b77454205a61d(p0: string, p1: number): void;
    function AddTextComponentAppTitle(p0: string, p1: number): void;
    function AddTextComponentSubstringPlayerName(text: string): void;
    function AddTextComponentString(text: string): void;
    function AddTextComponentSubstringTextLabel(labelName: string): void;
    function AddTextComponentItemString(labelName: string): void;
    function AddTextComponentSubstringTextLabelHashKey(gxtEntryHash: number): void;
    function N_0x17299b63c7683a2b(gxtEntryHash: number): void;
    function AddTextComponentSubstringTime(timestamp: number, flags: number): void;
    function AddTextComponentSubstringWebsite(website: string): void;
    function AddTextComponentString2(website: string): void;
    function AddTextEntry(entryKey: string, entryText: string): void;
    function AddTextEntryByHash(entryKey: number, entryText: string): void;
    function AddToClockTime(hours: number, minutes: number, seconds: number): void;
    function AddToItemset(p0: number, p1: number): boolean;
    function AddVehicleCombatAngledAvoidanceArea(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): number;
    function N_0x54b0f614960f4a5f(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): number;
    function AddVehicleCombatAvoidanceArea(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): number;
    function AddVehicleCrewEmblem(
        vehicle: number,
        ped: number,
        boneIndex: number,
        x1: number,
        x2: number,
        x3: number,
        y1: number,
        y2: number,
        y3: number,
        z1: number,
        z2: number,
        z3: number,
        scale: number,
        p13: number,
        alpha: number
    ): boolean;
    function AddClanDecalToVehicle(
        vehicle: number,
        ped: number,
        boneIndex: number,
        x1: number,
        x2: number,
        x3: number,
        y1: number,
        y2: number,
        y3: number,
        z1: number,
        z2: number,
        z3: number,
        scale: number,
        p13: number,
        alpha: number
    ): boolean;
    function AddVehiclePhoneExplosiveDevice(vehicle: number): void;
    function N_0x99ad4cccb128cbc9(vehicle: number): void;
    function AddVehicleStuckCheckWithWarp(
        p0: number,
        p1: number,
        p2: number,
        p3: boolean,
        p4: boolean,
        p5: boolean,
        p6: number
    ): void;
    function AddVehicleSubtaskAttackCoord(ped: number, x: number, y: number, z: number): void;
    function AddVehicleSubtaskAttackPed(ped: number, ped2: number): void;
    function AddVehicleUpsidedownCheck(vehicle: number): void;
    function AdvanceClockTimeTo(hour: number, minute: number, second: number): void;
    function AllowAmbientVehiclesToAvoidAdverseConditions(vehicle: number): void;
    function N_0xb264c4d2f2b0a78b(vehicle: number): void;
    function AllowMissionCreatorWarp(toggle: boolean): void;
    function N_0xdea36202fc3382df(toggle: boolean): void;
    function AllowPauseMenuWhenDeadThisFrame(): void;
    function N_0xcc3fdded67bcfc63(): void;
    function AllowPlayerSwitchAscent(): void;
    function N_0x8e2a065abdae6994(): void;
    function AllowPlayerSwitchDescent(): void;
    function N_0xad5fdf34b81bfe79(): void;
    function AllowPlayerSwitchOutro(): void;
    function N_0x74de2e8739086740(): void;
    function AllowPlayerSwitchPan(): void;
    function N_0x43d1680c6d19a8e9(): void;
    function AllowSonarBlips(toggle: boolean): void;
    function N_0x60734cc207c9833c(toggle: boolean): void;
    function AnimateGameplayCamZoom(p0: number, distance: number): void;
    function AnimatedShakeCam(cam: number, p1: string, p2: string, p3: string, amplitude: number): void;
    function AnimatedShakeScriptGlobal(p0: string, p1: string, p2: string, p3: number): void;
    function N_0xc2eae3fb8cdbed31(p0: string, p1: string, p2: string, p3: number): void;
    function AnimpostfxGetUnk(effectName: string): number;
    function N_0xe35b38a27e8e7179(effectName: string): number;
    function AnimpostfxIsRunning(effectName: string): boolean;
    function GetScreenEffectIsActive(effectName: string): boolean;
    function AnimpostfxPlay(effectName: string, duration: number, looped: boolean): void;
    function StartScreenEffect(effectName: string, duration: number, looped: boolean): void;
    function AnimpostfxStop(effectName: string): void;
    function StopScreenEffect(effectName: string): void;
    function AnimpostfxStopAll(): void;
    function StopAllScreenEffects(): void;
    function AnimpostfxStopAndDoUnk(effectName: string): void;
    function N_0xd2209be128b5418c(effectName: string): void;
    function AppClearBlock(): void;
    function AppCloseApp(): void;
    function AppCloseBlock(): void;
    function AppDataValid(): boolean;
    function AppDeleteAppData(appName: string): boolean;
    function AppGetDeletedFileStatus(): number;
    function AppGetFloat(property: string): number;
    function AppGetInt(property: string): number;
    function AppGetString(property: string): string;
    function AppHasLinkedSocialClubAccount(): boolean;
    function AppHasSyncedData(appName: string): boolean;
    function AppSaveData(): void;
    function AppSetApp(appName: string): void;
    function AppSetBlock(blockName: string): void;
    function AppSetFloat(property: string, value: number): void;
    function AppSetInt(property: string, value: number): void;
    function AppSetString(property: string, value: string): void;
    function ApplyDamageToPed(ped: number, damageAmount: number, armorFirst: boolean): void;
    function ApplyForceToEntity(
        entity: number,
        forceType: number,
        x: number,
        y: number,
        z: number,
        offX: number,
        offY: number,
        offZ: number,
        boneIndex: number,
        isDirectionRel: boolean,
        ignoreUpVec: boolean,
        isForceRel: boolean,
        p12: boolean,
        p13: boolean
    ): void;
    function ApplyForceToEntityCenterOfMass(
        entity: number,
        forceType: number,
        x: number,
        y: number,
        z: number,
        p5: boolean,
        isDirectionRel: boolean,
        isForceRel: boolean,
        p8: boolean
    ): void;
    function ApplyImpulseToCloth(
        posX: number,
        posY: number,
        posZ: number,
        vecX: number,
        vecY: number,
        vecZ: number,
        impulse: number
    ): void;
    function ApplyPedBlood(
        ped: number,
        boneIndex: number,
        xRot: number,
        yRot: number,
        zRot: number,
        woundType: string
    ): void;
    function ApplyPedBloodByZone(ped: number, p1: number, p2: number, p3: number, p4: number): number;
    function N_0x3311e47b91edcbbc(ped: number, p1: number, p2: number, p3: number, p4: number): number;
    function ApplyPedBloodDamageByZone(ped: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x816f6981c60bf53b(ped: number, p1: number, p2: number, p3: number, p4: number): void;
    function ApplyPedBloodSpecific(
        ped: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): number;
    function N_0xef0d582cbf2d9b0f(
        ped: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): number;
    function ApplyPedDamageDecal(
        ped: number,
        damageZone: number,
        xOffset: number,
        yOffset: number,
        heading: number,
        scale: number,
        alpha: number,
        variation: number,
        fadeIn: boolean,
        decalName: string
    ): void;
    function ApplyPedDamagePack(ped: number, damagePack: string, damage: number, mult: number): void;
    function AreAllNavmeshRegionsLoaded(): boolean;
    function AreAllVehicleWindowsIntact(vehicle: number): boolean;
    function AreAnyVehicleSeatsFree(vehicle: number): boolean;
    function IsAnyVehicleSeatEmpty(vehicle: number): boolean;
    function AreBombBayDoorsOpen(aircraft: number): boolean;
    function N_0xd0917a423314bba8(aircraft: number): boolean;
    function GetAreBombBayDoorsOpen(aircraft: number): boolean;
    function AreEntitiesEntirelyInsideGarage(
        garageHash: number,
        p1: boolean,
        p2: boolean,
        p3: boolean,
        p4: number
    ): boolean;
    function N_0x85b6c850546fdde2(garageHash: number, p1: boolean, p2: boolean, p3: boolean, p4: number): boolean;
    function AreHeliStubWingsDeployed(vehicle: number): boolean;
    function N_0xaef12960fa943792(vehicle: number): boolean;
    function AreNodesLoadedForArea(x1: number, y1: number, x2: number, y2: number): boolean;
    function N_0xf7b79a50b905a30d(x1: number, y1: number, x2: number, y2: number): boolean;
    function ArePathNodesLoadedInArea(x1: number, y1: number, x2: number, y2: number): boolean;
    function AreOutriggerLegsDeployed(vehicle: number): boolean;
    function N_0x3a9128352eac9e85(vehicle: number): boolean;
    function ArePlanePropellersIntact(plane: number): boolean;
    function N_0x755d6d5267cbbd7e(plane: number): boolean;
    function ArePropellersUndamaged(plane: number): boolean;
    function ArePlaneWingsIntact(plane: number): boolean;
    function N_0x5991a01434ce9677(plane: number): boolean;
    function AddAMarkerOverVehicle(plane: number): boolean;
    function AreVehicleWingsIntact(plane: number): boolean;
    function ArePlayerFlashingStarsAboutToDrop(player: number): boolean;
    function ArePlayerStarsGreyedOut(player: number): boolean;
    function AreProfileSettingsValid(): boolean;
    function N_0x5aa3befa29f03ad4(): boolean;
    function AreStringsEqual(string1: string, string2: string): boolean;
    function Asin(p0: number): number;
    function AssistedMovementCloseRoute(): void;
    function AssistedMovementFlushRoute(): void;
    function AssistedMovementIsRouteLoaded(route: string): boolean;
    function AssistedMovementOverrideLoadDistanceThisFrame(dist: number): void;
    function AssistedMovementRemoveRoute(route: string): void;
    function AssistedMovementRequestRoute(route: string): void;
    function AssistedMovementSetRouteProperties(route: string, props: number): void;
    function Atan(p0: number): number;
    function Atan2(p0: number, p1: number): number;
    function AttachCamToEntity(
        cam: number,
        entity: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        isRelative: boolean
    ): void;
    function AttachCamToPedBone(
        cam: number,
        ped: number,
        boneIndex: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        isRelative: boolean
    ): void;
    function AttachCamToPedBone_2(
        cam: number,
        ped: number,
        boneIndex: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: boolean
    ): void;
    function AttachCamToVehicleBone(
        cam: number,
        vehicle: number,
        boneIndex: number,
        relativeRotation: boolean,
        rotX: number,
        rotY: number,
        rotZ: number,
        offX: number,
        offY: number,
        offZ: number,
        fixedDirection: boolean
    ): void;
    function N_0x8db3f12a02caef72(
        cam: number,
        vehicle: number,
        boneIndex: number,
        relativeRotation: boolean,
        rotX: number,
        rotY: number,
        rotZ: number,
        offX: number,
        offY: number,
        offZ: number,
        fixedDirection: boolean
    ): void;
    function AttachContainerToHandlerFrame(handler: number, container: number): void;
    function AttachEntitiesToRope(
        ropeId: number,
        ent1: number,
        ent2: number,
        ent1_x: number,
        ent1_y: number,
        ent1_z: number,
        ent2_x: number,
        ent2_y: number,
        ent2_z: number,
        length: number,
        p10: boolean,
        p11: boolean,
        boneName1: string,
        boneName2: string
    ): void;
    function AttachEntityBoneToEntityBone(
        entity1: number,
        entity2: number,
        entityBone: number,
        entityBone2: number,
        p4: boolean,
        p5: boolean
    ): void;
    function N_0x5c48b75732c8456c(
        entity1: number,
        entity2: number,
        entityBone: number,
        entityBone2: number,
        p4: boolean,
        p5: boolean
    ): void;
    function AttachEntityBoneToEntityBonePhysically(
        entity1: number,
        entity2: number,
        entityBone: number,
        entityBone2: number,
        p4: boolean,
        p5: boolean
    ): void;
    function N_0xfd1695c5d3b05439(
        entity1: number,
        entity2: number,
        entityBone: number,
        entityBone2: number,
        p4: boolean,
        p5: boolean
    ): void;
    function AttachEntityToCargobob(vehicle: number, entity: number, p2: number, x: number, y: number, z: number): void;
    function N_0xa1dd82f3ccf9a01e(vehicle: number, entity: number, p2: number, x: number, y: number, z: number): void;
    function AttachEntityToEntity(
        entity1: number,
        entity2: number,
        boneIndex: number,
        xPos: number,
        yPos: number,
        zPos: number,
        xRot: number,
        yRot: number,
        zRot: number,
        p9: boolean,
        useSoftPinning: boolean,
        collision: boolean,
        isPed: boolean,
        rotationOrder: number,
        syncRot: boolean
    ): void;
    function AttachEntityToEntityPhysically(
        entity1: number,
        entity2: number,
        boneIndex1: number,
        boneIndex2: number,
        xPos1: number,
        yPos1: number,
        zPos1: number,
        xPos2: number,
        yPos2: number,
        zPos2: number,
        xRot: number,
        yRot: number,
        zRot: number,
        breakForce: number,
        fixedRot: boolean,
        p15: boolean,
        collision: boolean,
        teleport: boolean,
        p18: number
    ): void;
    function AttachPortablePickupToPed(pickupObject: number, ped: number): void;
    function AttachRopeToEntity(ropeId: number, entity: number, x: number, y: number, z: number, p5: boolean): void;
    function AttachSynchronizedSceneToEntity(sceneID: number, entity: number, boneIndex: number): void;
    function AttachTvAudioToEntity(entity: number): void;
    function AttachVehicleOnToTrailer(
        vehicle: number,
        trailer: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        coordsX: number,
        coordsY: number,
        coordsZ: number,
        rotationX: number,
        rotationY: number,
        rotationZ: number,
        disableColls: number
    ): void;
    function N_0x16b5e274bde402f8(
        vehicle: number,
        trailer: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        coordsX: number,
        coordsY: number,
        coordsZ: number,
        rotationX: number,
        rotationY: number,
        rotationZ: number,
        disableColls: number
    ): void;
    function AttachVehicleToCargobob(
        cargobob: number,
        vehicle: number,
        vehicleBoneIndex: number,
        x: number,
        y: number,
        z: number
    ): void;
    function AttachVehicleToTowTruck(
        towTruck: number,
        vehicle: number,
        rear: boolean,
        hookOffsetX: number,
        hookOffsetY: number,
        hookOffsetZ: number
    ): void;
    function AttachVehicleToTrailer(vehicle: number, trailer: number, radius: number): void;
    function AudioIsScriptedMusicPlaying(): boolean;
    function N_0x3d120012440e6683(): boolean;
    function BadSportPlayerLeftDetected(event: number, amountReceived: number): LuaMultiReturn<[boolean, number]>;
    function N_0xec5e3af5289dca81(event: number, amountReceived: number): LuaMultiReturn<[boolean, number]>;
    function BeginReplayStats(p0: number, p1: number): void;
    function BeginScaleformMovieMethod(scaleform: number, methodName: string): boolean;
    function PushScaleformMovieFunction(scaleform: number, methodName: string): boolean;
    function BeginScaleformMovieMethodOnFrontend(functionName: string): boolean;
    function N_0xab58c27c2e6123c6(functionName: string): boolean;
    function PushScaleformMovieFunctionN(functionName: string): boolean;
    function BeginScaleformMovieMethodN(functionName: string): boolean;
    function BeginScaleformMovieMethodOnFrontendHeader(functionName: string): boolean;
    function N_0xb9449845f73f5e9c(functionName: string): boolean;
    function BeginScaleformMovieMethodV(functionName: string): boolean;
    function BeginScaleformScriptHudMovieMethod(hudComponent: number, methodName: string): boolean;
    function PushScaleformMovieFunctionFromHudComponent(hudComponent: number, methodName: string): boolean;
    function BeginScaleformMovieMethodHudComponent(hudComponent: number, methodName: string): boolean;
    function BeginSrl(): void;
    function BeginTakeHighQualityPhoto(): boolean;
    function N_0xa67c35c56eb1bd9d(): boolean;
    function BeginTakeMissionCreatorPhoto(): boolean;
    function N_0x1dd2139a9a20dce8(): boolean;
    function BeginTextCommandBusyspinnerOn(_string: string): void;
    function N_0xaba17d7ce615adbf(_string: string): void;
    function SetLoadingPromptTextEntry(_string: string): void;
    function BeginTextCommandBusyString(_string: string): void;
    function BeginTextCommandClearPrint(text: string): void;
    function N_0xe124fa80a759019c(text: string): void;
    function BeginTextCommandDisplayHelp(inputType: string): void;
    function SetTextComponentFormat(inputType: string): void;
    function BeginTextCommandDisplayText(text: string): void;
    function SetTextEntry(text: string): void;
    function BeginTextCommandGetWidth(text: string): void;
    function SetTextEntryForWidth(text: string): void;
    function BeginTextCommandWidth(text: string): void;
    function BeginTextCommandIsMessageDisplayed(text: string): void;
    function N_0x853648fd1063a213(text: string): void;
    function BeginTextCommandIsThisHelpMessageBeingDisplayed(labelName: string): void;
    function N_0x0a24da3a41b718f5(labelName: string): void;
    function BeginTextCommandLineCount(entry: string): void;
    function SetTextGxtEntry(entry: string): void;
    function BeginTextCommandObjective(p0: string): void;
    function N_0x23d69e0465570028(p0: string): void;
    function BeginTextCommandOverrideButtonText(gxtEntry: string): void;
    function N_0x8f9ee5687f8eeccd(gxtEntry: string): void;
    function BeginTextCommandTimer(gxtEntry: string): void;
    function BeginTextCommandPrint(GxtEntry: string): void;
    function SetTextEntry_2(GxtEntry: string): void;
    function BeginTextCommandScaleformString(textLabel: string): void;
    function BeginTextComponent(textLabel: string): void;
    function BeginTextCommandSetBlipName(textLabel: string): void;
    function BeginTextCommandThefeedPost(text: string): void;
    function SetNotificationTextEntry(text: string): void;
    function BgEndContext(contextName: string): void;
    function BgEndContextHash(contextHash: number): void;
    function BgStartContext(contextName: string): void;
    function BgStartContextHash(contextHash: number): void;
    function BlipSiren(vehicle: number): void;
    function BlockDeathJingle(toggle: boolean): void;
    function N_0xf154b8d1775b2dec(toggle: boolean): void;
    function BlockDecisionMakerEvent(name: number, eventType: number): void;
    function BlockDispatchServiceResourceCreation(dispatchService: number, toggle: boolean): void;
    function N_0x9b2bd3773123ea2f(dispatchService: number, toggle: boolean): void;
    function BlockPedDeadBodyShockingEvents(ped: number, toggle: boolean): void;
    function N_0xe43a13c9e4cccbcf(ped: number, toggle: boolean): void;
    function BreakEntityGlass(
        entity: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: boolean
    ): void;
    function BreakObjectFragmentChild(p0: number, p1: number, p2: boolean): void;
    function N_0xe7e4c198b0185900(p0: number, p1: number, p2: boolean): void;
    function BreakOffVehicleWheel(
        vehicle: number,
        wheelIndex: number,
        leaveDebrisTrail: boolean,
        deleteWheel: boolean,
        unknownFlag: boolean,
        putOnFire: boolean
    ): void;
    function BringVehicleToHalt(
        vehicle: number,
        distance: number,
        duration: number,
        bControlVerticalVelocity: boolean
    ): void;
    function N_0x260be8f09e326a20(
        vehicle: number,
        distance: number,
        duration: number,
        bControlVerticalVelocity: boolean
    ): void;
    function SetVehicleHalt(
        vehicle: number,
        distance: number,
        duration: number,
        bControlVerticalVelocity: boolean
    ): void;
    function BusyspinnerIsDisplaying(): boolean;
    function N_0xb2a592b04648a9cb(): boolean;
    function BusyspinnerIsOn(): boolean;
    function N_0xd422fcc5f239a915(): boolean;
    function IsLoadingPromptBeingDisplayed(): boolean;
    function BusyspinnerOff(): void;
    function N_0x10d373323e5b9c0d(): void;
    function RemoveLoadingPrompt(): void;
    function CalculateTravelDistanceBetweenPoints(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number
    ): number;
    function CallMinimapScaleformFunction(miniMap: number, fnName: string): boolean;
    function CallScaleformMovieMethod(scaleform: number, method: string): void;
    function CallScaleformMovieFunctionVoid(scaleform: number, method: string): void;
    function CallScaleformMovieMethodWithNumber(
        scaleform: number,
        methodName: string,
        param1: number,
        param2: number,
        param3: number,
        param4: number,
        param5: number
    ): void;
    function CallScaleformMovieFunctionFloatParams(
        scaleform: number,
        methodName: string,
        param1: number,
        param2: number,
        param3: number,
        param4: number,
        param5: number
    ): void;
    function CallScaleformMovieMethodWithNumberAndString(
        scaleform: number,
        methodName: string,
        floatParam1: number,
        floatParam2: number,
        floatParam3: number,
        floatParam4: number,
        floatParam5: number,
        stringParam1: string,
        stringParam2: string,
        stringParam3: string,
        stringParam4: string,
        stringParam5: string
    ): void;
    function CallScaleformMovieFunctionMixedParams(
        scaleform: number,
        methodName: string,
        floatParam1: number,
        floatParam2: number,
        floatParam3: number,
        floatParam4: number,
        floatParam5: number,
        stringParam1: string,
        stringParam2: string,
        stringParam3: string,
        stringParam4: string,
        stringParam5: string
    ): void;
    function CallScaleformMovieMethodWithString(
        scaleform: number,
        methodName: string,
        param1: string,
        param2: string,
        param3: string,
        param4: string,
        param5: string
    ): void;
    function CallScaleformMovieFunctionStringParams(
        scaleform: number,
        methodName: string,
        param1: string,
        param2: string,
        param3: string,
        param4: string,
        param5: string
    ): void;
    function CanAnchorBoatHere(vehicle: number): boolean;
    function N_0x2467a2d807d37ca3(vehicle: number): boolean;
    function GetBoatAnchor(vehicle: number): boolean;
    function CanBoatBeAnchored(vehicle: number): boolean;
    function CanAnchorBoatHere_2(vehicle: number): boolean;
    function CanBoatBeAnchored_2(vehicle: number): boolean;
    function CanCreateRandomBikeRider(): boolean;
    function CanCreateRandomCops(): boolean;
    function CanCreateRandomDriver(): boolean;
    function CanCreateRandomPed(unk: boolean): boolean;
    function CanKnockPedOffVehicle(ped: number): boolean;
    function CanPayGoon(): boolean;
    function N_0x9777734dad16992f(): boolean;
    function CanPedHearPlayer(player: number, ped: number): boolean;
    function CanPedInCombatSeeTarget(ped: number, target: number): boolean;
    function CanPedRagdoll(ped: number): boolean;
    function CanPedSeeHatedPed(ped1: number, ped2: number): boolean;
    function N_0x6cd5a433374d4cfb(ped1: number, ped2: number): boolean;
    function CanPedSeePed(ped1: number, ped2: number): boolean;
    function CanPedSpeak(ped: number, speechName: string, unk: boolean): boolean;
    function N_0x49b99bf3fda89a7a(ped: number, speechName: string, unk: boolean): boolean;
    function CanPhoneBeSeenOnScreen(): boolean;
    function CanPlayerStartMission(player: number): boolean;
    function CanRegisterMissionEntities(
        ped_amt: number,
        vehicle_amt: number,
        object_amt: number,
        pickup_amt: number
    ): boolean;
    function CanRegisterMissionObjects(amount: number): boolean;
    function CanRegisterMissionPeds(amount: number): boolean;
    function CanRegisterMissionPickups(amount: number): boolean;
    function CanRegisterMissionVehicles(amount: number): boolean;
    function CanRequestAssetsForCutsceneEntity(): boolean;
    function N_0xb56bbbcc2955d9cb(): boolean;
    function CanSetEnterStateForRegisteredEntity(cutsceneEntName: string, modelHash: number): boolean;
    function CanSetExitStateForCamera(p0: boolean): boolean;
    function CanSetExitStateForRegisteredEntity(cutsceneEntName: string, modelHash: number): boolean;
    function CanShuffleSeat(vehicle: number, seatIndex: number): boolean;
    function CanUseWeaponOnParachute(weaponHash: number): boolean;
    function CancelCurrentPoliceReport(): void;
    function N_0xb4f90faf7670b16f(): void;
    function DisablePoliceReports(): void;
    function CancelEvent(): void;
    function CancelMusicEvent(eventName: string): boolean;
    function CancelOnscreenKeyboard(): void;
    function N_0x58a39be597ce99cd(): void;
    function CancelStuntJump(): void;
    function CapInterior(interiorID: number, toggle: boolean): void;
    function CascadeShadowsClearShadowSampleType(): void;
    function N_0x27cb772218215325(): void;
    function CascadeshadowsResetType(): void;
    function CascadeShadowsEnableEntityTracker(toggle: boolean): void;
    function SetFarShadowsSuppressed(toggle: boolean): void;
    function CascadeShadowsInitSession(): void;
    function N_0x03fc694ae06c5a20(): void;
    function CascadeShadowsSetAircraftMode(p0: boolean): void;
    function N_0x6ddbf9dffc4ac080(p0: boolean): void;
    function CascadeShadowsSetCascadeBounds(
        p0: number,
        p1: boolean,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: boolean,
        p7: number
    ): void;
    function N_0xd2936cab8b58fcbd(
        p0: number,
        p1: boolean,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: boolean,
        p7: number
    ): void;
    function CascadeShadowsSetCascadeBoundsScale(p0: number): void;
    function N_0x5f0f3f56635809ef(p0: number): void;
    function CascadeShadowsSetDynamicDepthMode(p0: boolean): void;
    function N_0xd39d13c9febf0511(p0: boolean): void;
    function CascadeShadowsSetDynamicDepthValue(p0: number): void;
    function N_0x02ac28f3a01fa04a(p0: number): void;
    function CascadeShadowsSetEntityTrackerScale(p0: number): void;
    function N_0x5e9daf5a20f15908(p0: number): void;
    function CascadeShadowsSetShadowSampleType(_type: string): void;
    function N_0xb11d94bc55f41932(_type: string): void;
    function CascadeshadowsSetType(_type: string): void;
    function Ceil(value: number): number;
    function CellCamActivate(p0: boolean, p1: boolean): void;
    function CellCamDisableThisFrame(toggle: boolean): void;
    function N_0x015c49a93e3e086e(toggle: boolean): void;
    function DisablePhoneThisFrame(toggle: boolean): void;
    function CellCamIsCharVisibleNoFaceCheck(entity: number): boolean;
    function CellCamMoveFinger(direction: number): void;
    function MoveFinger(direction: number): void;
    function CellCamSetDistance(p0: number): void;
    function N_0x53f4892d18ec90a4(p0: number): void;
    function CellCamSetHeadHeight(p0: number): void;
    function N_0x466da42c89865553(p0: number): void;
    function CellCamSetHeadPitch(p0: number): void;
    function N_0xd6ade981781fca09(p0: number): void;
    function CellCamSetHeadRoll(p0: number): void;
    function N_0xf1e22dc13f5eebad(p0: number): void;
    function CellCamSetHorizontalOffset(p0: number): void;
    function N_0x1b0b4aeed5b9b41c(p0: number): void;
    function CellCamSetLean(toggle: boolean): void;
    function SetPhoneLean(toggle: boolean): void;
    function CellCamSetRoll(p0: number): void;
    function N_0x15e69e2802c24b8d(p0: number): void;
    function CellCamSetVerticalOffset(p0: number): void;
    function N_0x3117d84efa60f77b(p0: number): void;
    function ChangeFakeMpCash(cash: number, bank: number): void;
    function SetSingleplayerHudCash(cash: number, bank: number): void;
    function SetPlayerCashChange(cash: number, bank: number): void;
    function ChangePlayerPed(player: number, ped: number, b2: boolean, resetDamage: boolean): void;
    function ClampGameplayCamPitch(minimum: number, maximum: number): void;
    function ClampGameplayCamYaw(minimum: number, maximum: number): void;
    function CleanItemset(p0: number): void;
    function CleanupAsyncInstall(): void;
    function N_0xc79ae21974b01fb2(): void;
    function ClearAdditionalText(p0: number, p1: boolean): void;
    function ClearAllBlipRoutes(): void;
    function N_0xd12882d3ff82bf11(): void;
    function ClearAllBrokenGlass(): void;
    function ClearAllHelpMessages(): void;
    function ClearAllPedProps(ped: number): void;
    function ClearAllPedVehicleForcedSeatUsage(ped: number): void;
    function N_0xe6ca85e7259ce16b(ped: number): void;
    function ClearAmbientZoneListState(p1: boolean): number;
    function ClearAmbientZoneState(zoneName: string, p1: boolean): void;
    function ClearAngledAreaOfVehicles(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number,
        p7: boolean,
        p8: boolean,
        p9: boolean,
        p10: boolean,
        p11: boolean
    ): void;
    function ClearArea(
        X: number,
        Y: number,
        Z: number,
        radius: number,
        p4: boolean,
        ignoreCopCars: boolean,
        ignoreObjects: boolean,
        p7: boolean
    ): void;
    function ClearAreaLeaveVehicleHealth(
        x: number,
        y: number,
        z: number,
        radius: number,
        p4: boolean,
        p5: boolean,
        p6: boolean,
        p7: boolean
    ): void;
    function N_0x957838aaf91bd12d(
        x: number,
        y: number,
        z: number,
        radius: number,
        p4: boolean,
        p5: boolean,
        p6: boolean,
        p7: boolean
    ): void;
    function ClearAreaOfEverything(
        x: number,
        y: number,
        z: number,
        radius: number,
        p4: boolean,
        p5: boolean,
        p6: boolean,
        p7: boolean
    ): void;
    function ClearAreaOfCops(x: number, y: number, z: number, radius: number, createNetEvent: boolean): void;
    function ClearAreaOfObjects(x: number, y: number, z: number, radius: number, flags: number): void;
    function ClearAreaOfPeds(x: number, y: number, z: number, radius: number, createNetEvent: boolean): void;
    function ClearAreaOfProjectiles(x: number, y: number, z: number, radius: number, createNetEvent: boolean): void;
    function ClearAreaOfVehicles(
        x: number,
        y: number,
        z: number,
        radius: number,
        p4: boolean,
        p5: boolean,
        p6: boolean,
        p7: boolean,
        p8: boolean
    ): void;
    function ClearBit(offset: number): number;
    function ClearBrief(): void;
    function ClearCloudHat(): void;
    function ClearCustomRadioTrackList(radioStation: string): void;
    function N_0x1654f24a88a8e3fe(radioStation: string): void;
    function ClearDecisionMakerEventResponse(name: number, eventType: number): void;
    function ClearDrawOrigin(): void;
    function ClearDrivebyTaskUnderneathDrivingTask(ped: number): void;
    function ClearDynamicPauseMenuErrorMessage(): void;
    function N_0x7792424aa0eac32e(): void;
    function ClearEntityLastDamageEntity(entity: number): void;
    function ClearEntityLastWeaponDamage(entity: number): void;
    function ClearExtraTimecycleModifier(): void;
    function N_0x92ccc17a7a2285da(): void;
    function ClearFacialClipsetOverride(ped: number): void;
    function N_0x637822dc2afeebf8(ped: number): void;
    function ClearFacialIdleAnimOverride(ped: number): void;
    function ClearFloatingHelp(hudIndex: number, p1: boolean): void;
    function ClearFocus(): void;
    function ClearGarageArea(garageHash: number, isNetwork: boolean): void;
    function N_0xda05194260cdcdf9(garageHash: number, isNetwork: boolean): void;
    function ClearGpsCustomRoute(): void;
    function N_0xe6de0561d9232a64(): void;
    function ClearGpsDisabledZoneAtIndex(index: number): void;
    function N_0x2801d0012266df07(index: number): void;
    function ClearGpsFlags(): void;
    function ClearGpsMultiRoute(): void;
    function N_0x67eedea1b9bafd94(): void;
    function ClearGpsPlayerWaypoint(): void;
    function ClearGpsRaceTrack(): void;
    function ClearHdArea(): void;
    function ClearHelp(toggle: boolean): void;
    function ClearInteriorForEntity(entity: number): void;
    function ClearLastDrivenVehicle(): void;
    function N_0xe01903c47c7ac89e(): void;
    function ClearLaunchParams(): void;
    function N_0x966dd84fb6a46017(): void;
    function ClearObjectsInsideGarage(
        garageHash: number,
        vehicles: boolean,
        peds: boolean,
        objects: boolean,
        isNetwork: boolean
    ): void;
    function N_0x190428512b240692(
        garageHash: number,
        vehicles: boolean,
        peds: boolean,
        objects: boolean,
        isNetwork: boolean
    ): void;
    function ClearOverrideWeather(): void;
    function ClearPedAlternateMovementAnim(ped: number, stance: number, p2: number): void;
    function ClearPedAlternateWalkAnim(ped: number, p1: number): void;
    function ClearPedBloodDamage(ped: number): void;
    function ClearPedBloodDamageByZone(ped: number, p1: number): void;
    function N_0x56e3b78c5408d9f4(ped: number, p1: number): void;
    function ClearPedCoverClipsetOverride(ped: number): void;
    function N_0xc79196dcb36f6121(ped: number): void;
    function ClearPedDamageDecalByZone(ped: number, p1: number, p2: string): void;
    function N_0x523c79aeefcc4a2a(ped: number, p1: number, p2: string): void;
    function ClearPedDecorations(ped: number): void;
    function ClearPedDecorationsLeaveScars(ped: number): void;
    function N_0xe3b27e70ceab9f0c(ped: number): void;
    function ClearPedFacialDecorations(ped: number): void;
    function ClearPedDriveByClipsetOverride(ped: number): void;
    function ClearPedEnvDirt(ped: number): void;
    function N_0x6585d955a68452a5(ped: number): void;
    function ClearPedInPauseMenu(): void;
    function ClearPedLastDamageBone(ped: number): void;
    function ClearPedLastWeaponDamage(ped: number): void;
    function ClearPedNonCreationArea(): void;
    function ClearPedParachutePackVariation(ped: number): void;
    function N_0x1280804f7cfd2d6c(ped: number): void;
    function ClearPedProp(ped: number, propId: number): void;
    function ClearPedScubaGearVariation(ped: number): void;
    function N_0xb50eb4ccb29704ac(ped: number): void;
    function RemovePedScubaGearNow(ped: number): void;
    function ClearPedSecondaryTask(ped: number): void;
    function ClearPedStoredHatProp(ped: number): void;
    function N_0x687c0b594907d2e8(ped: number): void;
    function ClearPedTasks(ped: number): void;
    function ClearPedTasksImmediately(ped: number): void;
    function ClearPedWetness(ped: number): void;
    function ClearPlayerHasDamagedAtLeastOneNonAnimalPed(player: number): void;
    function ClearPlayerHasDamagedAtLeastOnePed(player: number): void;
    function ClearPlayerParachuteModelOverride(player: number): void;
    function ClearPlayerParachutePackModelOverride(player: number): void;
    function ClearPlayerParachuteVariationOverride(player: number): void;
    function ClearPlayerReserveParachuteModelOverride(player: number): void;
    function ClearPlayerWantedLevel(player: number): void;
    function ClearPopscheduleOverrideVehicleModel(scheduleId: number): void;
    function ClearPrints(): void;
    function ClearRaceGalleryBlips(): void;
    function N_0x2708fc083123f9ff(): void;
    function ClearRagdollBlockingFlags(ped: number, flags: number): void;
    function N_0xd86d101fcfd00a4b(ped: number, flags: number): void;
    function ResetPedRagdollBlockingFlags(ped: number, flags: number): void;
    function ClearRelationshipBetweenGroups(relationship: number, group1: number, group2: number): void;
    function ClearReminderMessage(): void;
    function N_0xb57d8dd645cfa2cf(): void;
    function ClearReplayStats(): void;
    function ClearRestartCustomPosition(): void;
    function N_0xa2716d40842eaf79(): void;
    function SetNextRespawnToCustom(): void;
    function ClearRoomForEntity(entity: number): void;
    function ClearRoomForGameViewport(): void;
    function N_0x23b59d8912f94246(): void;
    function ClearSequenceTask(taskSequenceId: number): void;
    function ClearSmallPrints(): void;
    function ClearTacticalAnalysisPoints(): void;
    function N_0xb3cd58cca6cda852(): void;
    function ClearThisPrint(p0: string): void;
    function ClearTimecycleModifier(): void;
    function ClearTvChannelPlaylist(tvChannel: number): void;
    function N_0xbeb3d46bb7f043c0(tvChannel: number): void;
    function ClearVehicleCustomPrimaryColour(vehicle: number): void;
    function ClearVehicleCustomSecondaryColour(vehicle: number): void;
    function ClearVehiclePhoneExplosiveDevice(): void;
    function N_0xaa3f739abddcf21f(): void;
    function ClearVehicleRouteHistory(vehicle: number): void;
    function N_0x6d6af961b72728ae(vehicle: number): void;
    function ClearVehicleTasks(vehicle: number): void;
    function N_0xdbbc7a2432524127(vehicle: number): void;
    function ClearVehicleXenonLightsCustomColor(vehicle: number): void;
    function ClearWeatherTypeNowPersistNetwork(transitionTimeInMs: number): void;
    function N_0x0cf97f497fe7d048(transitionTimeInMs: number): void;
    function ClearWeatherTypePersist(): void;
    function ClonePed(ped: number, isNetwork: boolean, bScriptHostPed: boolean, copyHeadBlendFlag: boolean): number;
    function ClonePedEx(ped: number, heading: number, isNetwork: boolean, bScriptHostPed: boolean, p4: number): number;
    function N_0x668fd40bcba5de48(
        ped: number,
        heading: number,
        isNetwork: boolean,
        bScriptHostPed: boolean,
        p4: number
    ): number;
    function ClonePed_2(ped: number, heading: number, isNetwork: boolean, bScriptHostPed: boolean, p4: number): number;
    function ClonePedToTarget(ped: number, targetPed: number): void;
    function AssignPlayerToPed(ped: number, targetPed: number): void;
    function ClonePedToTargetEx(ped: number, targetPed: number, p2: number): void;
    function N_0x148b08c2d2acb884(ped: number, targetPed: number, p2: number): void;
    function CloneTimecycleModifier(sourceModifierName: string, clonedModifierName: string): number;
    function CloseBombBayDoors(vehicle: number): void;
    function N_0x3556041742a0dc74(vehicle: number): void;
    function CloseMultiplayerChat(): void;
    function AbortTextChat(): void;
    function ClosePatrolRoute(): void;
    function CloseSequenceTask(taskSequenceId: number): void;
    function CloseSocialClubMenu(): void;
    function N_0xd2b32be3fc1626c6(): void;
    function CloudCheckAvailability(): void;
    function N_0x4f18196c8d38768d(): void;
    function DownloadCheck(): void;
    function CloudDeleteMemberFile(p0: string): number;
    function N_0xc64ded7ef0d2fe37(p0: string): number;
    function CloudDidRequestSucceed(handle: number): boolean;
    function N_0x3a3d5568af297cd5(handle: number): boolean;
    function CloudGetAvailabilityCheckResult(): boolean;
    function NetworkEnableMotionDrugged(): boolean;
    function N_0x0b0cc10720653f3b(): boolean;
    function CloudHasRequestCompleted(handle: number): boolean;
    function N_0x4c61b39930d045da(handle: number): boolean;
    function CloudIsCheckingAvailability(): boolean;
    function N_0xc7abac5de675ee3b(): boolean;
    function CommitRuntimeTexture(tex: number): void;
    function CompareStrings(str1: string, str2: string, matchCase: boolean, maxLength: number): number;
    function ControlLandingGear(vehicle: number, state: number): void;
    function SetVehicleLandingGear(vehicle: number, state: number): void;
    function ControlMountedWeapon(ped: number): boolean;
    function ConvertPosixTime(posixTime: number, timeStructure: number): number;
    function GetDateAndTimeFromUnixEpoch(posixTime: number, timeStructure: number): number;
    function CopyMemory(src: number, size: number): number;
    function N_0x213aeb2b90cba7ac(src: number, size: number): number;
    function CopyVehicleDamages(sourceVehicle: number, targetVehicle: number): void;
    function N_0xe44a982368a4af23(sourceVehicle: number, targetVehicle: number): void;
    function Cos(value: number): number;
    function CreateAirDefenseArea(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        weaponHash: number
    ): number;
    function N_0x9da58cdbf6bdbc08(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        weaponHash: number
    ): number;
    function CreateAirDefenseSphere(
        x: number,
        y: number,
        z: number,
        radius: number,
        p4: number,
        p5: number,
        p6: number,
        weaponHash: number
    ): number;
    function N_0x91ef34584710be99(
        x: number,
        y: number,
        z: number,
        radius: number,
        p4: number,
        p5: number,
        p6: number,
        weaponHash: number
    ): number;
    function CreateAmbientPickup(
        pickupHash: number,
        posX: number,
        posY: number,
        posZ: number,
        flags: number,
        value: number,
        modelHash: number,
        returnHandle: boolean,
        p8: boolean
    ): number;
    function CreateAudioSubmix(name: string): number;
    function CreateCam(camName: string, active: boolean): number;
    function CreateCamWithParams(
        camName: string,
        posX: number,
        posY: number,
        posZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        fov: number,
        active: boolean,
        rotationOrder: number
    ): number;
    function CreateCamera(camHash: number, active: boolean): number;
    function CreateCameraWithParams(
        camHash: number,
        posX: number,
        posY: number,
        posZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        fov: number,
        active: boolean,
        rotationOrder: number
    ): number;
    function CreateCheckpoint(
        _type: number,
        posX1: number,
        posY1: number,
        posZ1: number,
        posX2: number,
        posY2: number,
        posZ2: number,
        diameter: number,
        red: number,
        green: number,
        blue: number,
        alpha: number,
        reserved: number
    ): number;
    function CreateCinematicShot(p0: number, p1: number, p2: number, entity: number): void;
    function CreateDryVolume(
        xMin: number,
        yMin: number,
        zMin: number,
        xMax: number,
        yMax: number,
        zMax: number
    ): number;
    function CreateDui(url: string, width: number, height: number): number;
    function CreateFakeMpGamerTag(
        ped: number,
        username: string,
        crewIsPrivate: boolean,
        crewIsRockstar: boolean,
        crewName: string,
        crewRank: number
    ): number;
    function N_0xbfefe3321a3f5015(
        ped: number,
        username: string,
        crewIsPrivate: boolean,
        crewIsRockstar: boolean,
        crewName: string,
        crewRank: number
    ): number;
    function CreateMpGamerTag(
        ped: number,
        username: string,
        crewIsPrivate: boolean,
        crewIsRockstar: boolean,
        crewName: string,
        crewRank: number
    ): number;
    function CreateForcedObject(x: number, y: number, z: number, p3: number, modelHash: number, p5: boolean): void;
    function CreateGroup(unused: number): number;
    function CreateIncident(
        dispatchService: number,
        x: number,
        y: number,
        z: number,
        numUnits: number,
        radius: number,
        outIncidentID: number
    ): LuaMultiReturn<[boolean, number]>;
    function CreateIncidentWithEntity(
        dispatchService: number,
        ped: number,
        numUnits: number,
        radius: number,
        outIncidentID: number
    ): LuaMultiReturn<[boolean, number]>;
    function CreateItemset(distri: boolean): number;
    function CreateMissionTrain(variation: number, x: number, y: number, z: number, direction: boolean): number;
    function CreateMobilePhone(phoneType: number): void;
    function CreateModelHide(x: number, y: number, z: number, radius: number, model: number, p5: boolean): void;
    function CreateModelHideExcludingScriptObjects(
        x: number,
        y: number,
        z: number,
        radius: number,
        model: number,
        p5: boolean
    ): void;
    function CreateModelSwap(
        x: number,
        y: number,
        z: number,
        radius: number,
        originalModel: number,
        newModel: number,
        p6: boolean
    ): void;
    function CreateMoneyPickups(x: number, y: number, z: number, value: number, amount: number, model: number): void;
    function CreateMpGamerTagWithCrewColor(
        player: number,
        username: string,
        crewIsPrivate: boolean,
        crewIsRockstar: boolean,
        crewName: string,
        crewRank: number,
        crewR: number,
        crewG: number,
        crewB: number
    ): void;
    function N_0x6dd05e9d83efa4c9(
        player: number,
        username: string,
        crewIsPrivate: boolean,
        crewIsRockstar: boolean,
        crewName: string,
        crewRank: number,
        crewR: number,
        crewG: number,
        crewB: number
    ): void;
    function CreateMpGamerTagColor(
        player: number,
        username: string,
        crewIsPrivate: boolean,
        crewIsRockstar: boolean,
        crewName: string,
        crewRank: number,
        crewR: number,
        crewG: number,
        crewB: number
    ): void;
    function SetMpGamerTagColor(
        player: number,
        username: string,
        crewIsPrivate: boolean,
        crewIsRockstar: boolean,
        crewName: string,
        crewRank: number,
        crewR: number,
        crewG: number,
        crewB: number
    ): void;
    function CreateMpGamerTagForNetPlayer(
        player: number,
        username: string,
        crewIsPrivate: boolean,
        crewIsRockstar: boolean,
        crewName: string,
        crewRank: number,
        crewR: number,
        crewG: number,
        crewB: number
    ): void;
    function CreateNewScriptedConversation(): void;
    function CreateNmMessage(startImmediately: boolean, messageId: number): void;
    function CreateNonNetworkedAmbientPickup(
        pickupHash: number,
        posX: number,
        posY: number,
        posZ: number,
        flags: number,
        value: number,
        modelHash: number,
        p7: boolean,
        p8: boolean
    ): number;
    function N_0x9c93764223e29c50(
        pickupHash: number,
        posX: number,
        posY: number,
        posZ: number,
        flags: number,
        value: number,
        modelHash: number,
        p7: boolean,
        p8: boolean
    ): number;
    function CreateNonNetworkedPortablePickup(
        pickupHash: number,
        x: number,
        y: number,
        z: number,
        placeOnGround: boolean,
        modelHash: number
    ): number;
    function N_0x125494b98a21aaf7(
        pickupHash: number,
        x: number,
        y: number,
        z: number,
        placeOnGround: boolean,
        modelHash: number
    ): number;
    function CreatePortablePickup_2(
        pickupHash: number,
        x: number,
        y: number,
        z: number,
        placeOnGround: boolean,
        modelHash: number
    ): number;
    function CreateObject(
        modelHash: number,
        x: number,
        y: number,
        z: number,
        isNetwork: boolean,
        netMissionEntity: boolean,
        doorFlag: boolean
    ): number;
    function CreateObjectNoOffset(
        modelHash: number,
        x: number,
        y: number,
        z: number,
        isNetwork: boolean,
        netMissionEntity: boolean,
        doorFlag: boolean
    ): number;
    function CreateParachuteBagObject(ped: number, p1: boolean, p2: boolean): number;
    function N_0x8c4f3bf23b6237db(ped: number, p1: boolean, p2: boolean): number;
    function CreateParachuteObject(ped: number, p1: boolean, p2: boolean): number;
    function CreatePatrolRoute(): void;
    function CreatePed(
        pedType: number,
        modelHash: number,
        x: number,
        y: number,
        z: number,
        heading: number,
        isNetwork: boolean,
        bScriptHostPed: boolean
    ): number;
    function CreatePedInsideVehicle(
        vehicle: number,
        pedType: number,
        modelHash: number,
        seat: number,
        isNetwork: boolean,
        bScriptHostPed: boolean
    ): number;
    function CreatePickUpRopeForCargobob(cargobob: number, state: number): void;
    function EnableCargobobHook(cargobob: number, state: number): void;
    function CreatePickup(
        pickupHash: number,
        posX: number,
        posY: number,
        posZ: number,
        p4: number,
        value: number,
        p6: boolean,
        modelHash: number
    ): number;
    function CreatePickupRotate(
        pickupHash: number,
        posX: number,
        posY: number,
        posZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        flag: number,
        amount: number,
        p9: number,
        p10: boolean,
        modelHash: number
    ): number;
    function CreatePortablePickup(
        pickupHash: number,
        x: number,
        y: number,
        z: number,
        placeOnGround: boolean,
        modelHash: number
    ): number;
    function CreateRandomPed(posX: number, posY: number, posZ: number): number;
    function CreateRandomPedAsDriver(vehicle: number, returnHandle: boolean): number;
    function CreateRuntimeTexture(txd: number, txn: string, width: number, height: number): number;
    function CreateRuntimeTextureFromDuiHandle(txd: number, txn: string, duiHandle: string): number;
    function CreateRuntimeTextureFromImage(txd: number, txn: string, fileName: string): number;
    function CreateRuntimeTxd(name: string): number;
    function CreateScriptVehicleGenerator(
        x: number,
        y: number,
        z: number,
        heading: number,
        p4: number,
        p5: number,
        modelHash: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number,
        p11: boolean,
        p12: boolean,
        p13: boolean,
        p14: boolean,
        p15: boolean,
        p16: number
    ): number;
    function CreateSynchronizedScene(
        x: number,
        y: number,
        z: number,
        roll: number,
        pitch: number,
        yaw: number,
        p6: number
    ): number;
    function CreateSynchronizedScene_2(x: number, y: number, z: number, radius: number, object: number): number;
    function N_0x62ec273d00187dca(x: number, y: number, z: number, radius: number, object: number): number;
    function CreateTimecycleModifier(modifierName: string): number;
    function CreateTrackedPoint(): number;
    function CreateVehicle(
        modelHash: number,
        x: number,
        y: number,
        z: number,
        heading: number,
        isNetwork: boolean,
        netMissionEntity: boolean
    ): number;
    function CreateWeaponObject(
        weaponHash: number,
        ammoCount: number,
        x: number,
        y: number,
        z: number,
        showWorldModel: boolean,
        scale: number,
        p7: number
    ): number;
    function CustomMenuCoordinates(p0: number): void;
    function N_0x487a82c650eb7799(p0: number): void;
    function DataarrayAddBool(value: boolean): number;
    function ArrayValueAddBoolean(value: boolean): number;
    function DataarrayAddDict(arrayData: number): LuaMultiReturn<[number, number]>;
    function ArrayValueAddObject(arrayData: number): LuaMultiReturn<[number, number]>;
    function DataarrayAddFloat(value: number): number;
    function ArrayValueAddFloat(value: number): number;
    function DataarrayAddInt(value: number): number;
    function ArrayValueAddInteger(value: number): number;
    function DataarrayAddString(value: string): number;
    function ArrayValueAddString(value: string): number;
    function DataarrayAddVector(valueX: number, valueY: number, valueZ: number): number;
    function ArrayValueAddVector3(valueX: number, valueY: number, valueZ: number): number;
    function DataarrayGetBool(arrayIndex: number): LuaMultiReturn<[boolean, number]>;
    function ArrayValueGetBoolean(arrayIndex: number): LuaMultiReturn<[boolean, number]>;
    function DataarrayGetCount(arrayData: number): LuaMultiReturn<[number, number]>;
    function ArrayValueGetSize(arrayData: number): LuaMultiReturn<[number, number]>;
    function DataarrayGetDict(arrayIndex: number): LuaMultiReturn<[number, number]>;
    function ArrayValueGetObject(arrayIndex: number): LuaMultiReturn<[number, number]>;
    function DataarrayGetFloat(arrayIndex: number): LuaMultiReturn<[number, number]>;
    function ArrayValueGetFloat(arrayIndex: number): LuaMultiReturn<[number, number]>;
    function DataarrayGetInt(arrayIndex: number): LuaMultiReturn<[number, number]>;
    function ArrayValueGetInteger(arrayIndex: number): LuaMultiReturn<[number, number]>;
    function DataarrayGetString(arrayIndex: number): LuaMultiReturn<[string, number]>;
    function ArrayValueGetString(arrayIndex: number): LuaMultiReturn<[string, number]>;
    function DataarrayGetType(arrayIndex: number): LuaMultiReturn<[number, number]>;
    function ArrayValueGetType(arrayIndex: number): LuaMultiReturn<[number, number]>;
    function DataarrayGetVector(arrayIndex: number): LuaMultiReturn<[number, number]>;
    function ArrayValueGetVector3(arrayIndex: number): LuaMultiReturn<[number, number]>;
    function DatadictCreateArray(key: string): LuaMultiReturn<[number, number]>;
    function ObjectValueAddArray(key: string): LuaMultiReturn<[number, number]>;
    function DatadictCreateDict(key: string): LuaMultiReturn<[number, number]>;
    function ObjectValueAddObject(key: string): LuaMultiReturn<[number, number]>;
    function DatadictGetArray(key: string): LuaMultiReturn<[number, number]>;
    function ObjectValueGetArray(key: string): LuaMultiReturn<[number, number]>;
    function DatadictGetBool(key: string): LuaMultiReturn<[boolean, number]>;
    function ObjectValueGetBoolean(key: string): LuaMultiReturn<[boolean, number]>;
    function DatadictGetDict(key: string): LuaMultiReturn<[number, number]>;
    function ObjectValueGetObject(key: string): LuaMultiReturn<[number, number]>;
    function DatadictGetFloat(key: string): LuaMultiReturn<[number, number]>;
    function ObjectValueGetFloat(key: string): LuaMultiReturn<[number, number]>;
    function DatadictGetInt(key: string): LuaMultiReturn<[number, number]>;
    function ObjectValueGetInteger(key: string): LuaMultiReturn<[number, number]>;
    function DatadictGetString(key: string): LuaMultiReturn<[string, number]>;
    function ObjectValueGetString(key: string): LuaMultiReturn<[string, number]>;
    function DatadictGetType(key: string): LuaMultiReturn<[number, number]>;
    function ObjectValueGetType(key: string): LuaMultiReturn<[number, number]>;
    function DatadictGetVector(key: string): LuaMultiReturn<[number, number]>;
    function ObjectValueGetVector3(key: string): LuaMultiReturn<[number, number]>;
    function DatadictSetBool(key: string, value: boolean): number;
    function ObjectValueAddBoolean(key: string, value: boolean): number;
    function DatadictSetFloat(key: string, value: number): number;
    function ObjectValueAddFloat(key: string, value: number): number;
    function DatadictSetInt(key: string, value: number): number;
    function ObjectValueAddInteger(key: string, value: number): number;
    function DatadictSetString(key: string, value: string): number;
    function ObjectValueAddString(key: string, value: string): number;
    function DatadictSetVector(key: string, valueX: number, valueY: number, valueZ: number): number;
    function ObjectValueAddVector3(key: string, valueX: number, valueY: number, valueZ: number): number;
    function DatafileClearWatchList(): void;
    function N_0x6cc86e78358d5119(): void;
    function DatafileCreate(): void;
    function DatafileDelete(): void;
    function DatafileDeleteRequestedFile(p0: number): boolean;
    function N_0x8f5ea1c01d65a100(p0: number): boolean;
    function DatafileFlushMissionHeader(): void;
    function N_0xc55854c7d7274882(): void;
    function DatafileGetFileDict(): string;
    function N_0x906b778ca1dc72b6(): string;
    function DatafileHasLoadedFileData(p0: number): boolean;
    function N_0x15ff52b809db2353(p0: number): boolean;
    function DatafileHasValidFileData(p0: number): boolean;
    function N_0xf8cc1ebe0b62e29f(p0: number): boolean;
    function DatafileIsSavePending(): boolean;
    function N_0xbedb96a7584aa8cf(): boolean;
    function DatafileIsValidRequestId(index: number): boolean;
    function N_0xfccae5b92a830878(index: number): boolean;
    function DatafileLoadOfflineUgc(filename: string): boolean;
    function LoadUgcFile(filename: string): boolean;
    function DatafileSelectActiveFile(p0: number): boolean;
    function N_0x22da66936e0fff37(p0: number): boolean;
    function DatafileSelectCreatorStats(p0: number): boolean;
    function N_0x01095c95cd46b624(p0: number): boolean;
    function DatafileSelectUgcData(p0: number): boolean;
    function N_0xa69ac4ade82b57a4(p0: number): boolean;
    function DatafileSelectUgcPlayerData(p0: number): boolean;
    function N_0x52818819057f2b40(p0: number): boolean;
    function DatafileSelectUgcStats(p0: number, p1: boolean): boolean;
    function N_0x9cb0bfa7a9342c3d(p0: number, p1: boolean): boolean;
    function DatafileStartSaveToCloud(filename: string): boolean;
    function N_0x83bcce3224735f05(filename: string): boolean;
    function DatafileStoreMissionHeader(): void;
    function N_0x2ed61456317b8178(): void;
    function DatafileUpdateSaveToCloud(): LuaMultiReturn<[boolean, boolean]>;
    function N_0x4dfdd9eb705f8140(): LuaMultiReturn<[boolean, boolean]>;
    function DatafileWatchRequestId(id: number): void;
    function N_0xad6875bbc0fc899c(id: number): void;
    function DeactivateAudioSlowmoMode(p0: string): void;
    function N_0xddc635d5b3262c56(p0: string): void;
    function DeactivateInteriorEntitySet(interior: number, entitySetName: string): void;
    function N_0x420bd37289eee162(interior: number, entitySetName: string): void;
    function DisableInteriorProp(interior: number, entitySetName: string): void;
    function DecorExistOn(entity: number, propertyName: string): boolean;
    function DecorGetBool(entity: number, propertyName: string): boolean;
    function DecorGetFloat(entity: number, propertyName: string): number;
    function DecorGetInt(entity: number, propertyName: string): number;
    function DecorIsRegisteredAsType(propertyName: string, _type: number): boolean;
    function DecorRegister(propertyName: string, _type: number): void;
    function DecorRegisterLock(): void;
    function DecorRemove(entity: number, propertyName: string): boolean;
    function DecorSetBool(entity: number, propertyName: string, value: boolean): boolean;
    function DecorSetFloat(entity: number, propertyName: string, value: number): boolean;
    function DecorSetInt(entity: number, propertyName: string, value: number): boolean;
    function DecorSetTime(entity: number, propertyName: string, timestamp: number): boolean;
    function DeleteAllTrains(): void;
    function DeleteCheckpoint(checkpoint: number): void;
    function DeleteChildRope(ropeId: number): void;
    function DeleteEntity(entity: number): void;
    function DeleteFunctionReference(referenceIdentity: string): void;
    function DeleteIncident(incidentId: number): void;
    function DeleteMissionTrain(train: number): void;
    function DeleteObject(object: number): void;
    function DeletePatrolRoute(patrolRoute: string): void;
    function DeletePed(ped: number): void;
    function DeleteResourceKvp(key: string): void;
    function DeleteRope(ropeId: number): void;
    function DeleteScriptVehicleGenerator(vehicleGenerator: number): void;
    function DeleteStuntJump(p0: number): void;
    function DeleteVehicle(vehicle: number): void;
    function DeleteWaypoint(): void;
    function N_0xd8e694757bcea8e9(): void;
    function DepositVc(amount: number): boolean;
    function N_0xe260e0bb9cd995ac(amount: number): boolean;
    function DestroyAllCams(bScriptHostCam: boolean): void;
    function DestroyCam(cam: number, bScriptHostCam: boolean): void;
    function DestroyDui(duiObject: number): void;
    function DestroyItemset(p0: number): void;
    function DestroyMobilePhone(): void;
    function DestroyTrackedPoint(point: number): void;
    function DetachCam(cam: number): void;
    function DetachContainerFromHandlerFrame(vehicle: number): void;
    function N_0x7c0043fdff6436bc(vehicle: number): void;
    function DetachEntity(entity: number, dynamic: boolean, collision: boolean): void;
    function DetachEntityFromCargobob(vehicle: number, entity: number): number;
    function N_0xaf03011701811146(vehicle: number, entity: number): number;
    function DetachPortablePickupFromPed(pickupObject: number): void;
    function DetachRopeFromEntity(ropeId: number, entity: number): void;
    function DetachSynchronizedScene(sceneID: number): void;
    function DetachVehicleFromAnyCargobob(vehicle: number): boolean;
    function DetachVehicleFromAnyTowTruck(vehicle: number): boolean;
    function DetachVehicleFromCargobob(cargobob: number, vehicle: number): void;
    function DetachVehicleFromTowTruck(towTruck: number, vehicle: number): void;
    function DetachVehicleFromTrailer(vehicle: number): void;
    function DetonateVehiclePhoneExplosiveDevice(): void;
    function N_0xef49cf0270307cbe(): void;
    function RequestVehiclePhoneExplosion(): void;
    function DisableAimCamThisUpdate(): void;
    function N_0x1a31fe0049e542f6(): void;
    function DisableAllControlActions(padIndex: number): void;
    function DisableCamCollisionForEntity(entity: number): void;
    function N_0x2aed6301f67007d5(entity: number): void;
    function DisableCamCollisionForObject(entity: number): void;
    function N_0x49482f9fcd825aaa(entity: number): void;
    function DisableControlAction(padIndex: number, control: number, disable: boolean): void;
    function DisableEditorRuntime(): void;
    function DisableFirstPersonCamThisFrame(): void;
    function DisableFrontendThisFrame(): void;
    function DisableHeadBlendPaletteColor(ped: number): void;
    function N_0xa21c118553bbdf02(ped: number): void;
    function DisableHospitalRestart(hospitalIndex: number, toggle: boolean): void;
    function DisableIdleCamera(state: boolean): void;
    function DisableIndividualPlanePropeller(vehicle: number, propeller: number): void;
    function N_0x500873a45724c863(vehicle: number, propeller: number): void;
    function DisablePlanePropeller(vehicle: number, propeller: number): void;
    function DisableInputGroup(padIndex: number): void;
    function N_0x7f4724035fdca1dd(padIndex: number): void;
    function DisableInterior(interiorID: number, toggle: boolean): void;
    function DisableMultiplayerChat(disable: boolean): void;
    function SetTextChatUnk(disable: boolean): void;
    function DisableNavmeshInArea(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function DisableOcclusionThisFrame(): void;
    function N_0x3669f1b198dcaa4f(): void;
    function DisablePedHeatscaleOverride(ped: number): void;
    function N_0x600048c60d5c2c51(ped: number): void;
    function DisablePedPainAudio(ped: number, toggle: boolean): void;
    function DisablePlaneAileron(vehicle: number, p1: boolean, p2: boolean): void;
    function DisablePlayerFiring(player: number, toggle: boolean): void;
    function DisablePlayerVehicleRewards(player: number): void;
    function DisablePoliceRestart(policeIndex: number, toggle: boolean): void;
    function DisableRockstarEditorCameraChanges(): void;
    function N_0xaf66dcee6609b148(): void;
    function DisableScreenblurFade(): void;
    function N_0xde81239437e8c5a8(): void;
    function PausedScreenblurLoaded(): void;
    function DisableScriptAmbientEffects(p0: number): void;
    function N_0xefd97ff47b745b8d(p0: number): void;
    function DisableScriptBrainSet(brainSet: number): void;
    function DisableStuntJumpSet(p0: number): void;
    function DisableSwitchOutroFx(): void;
    function N_0xbd605b8e0e18b3bb(): void;
    function DisableVehicleDistantlights(toggle: boolean): void;
    function DisableVehicleFirstPersonCamThisFrame(): void;
    function DisableVehicleNeonLights(vehicle: number, toggle: boolean): void;
    function N_0x83f813570ff519de(vehicle: number, toggle: boolean): void;
    function DisableVehiclePassengerIdleCamera(state: boolean): void;
    function DisableVehicleTurretMovementThisFrame(vehicle: number): void;
    function N_0x32caedf24a583345(vehicle: number): void;
    function DisableVehicleWeapon(disabled: boolean, weaponHash: number, vehicle: number, owner: number): void;
    function DisableVehicleWorldCollision(vehicle: number): void;
    function N_0x75627043c6aa90ad(vehicle: number): void;
    function DisableWorldhorizonRendering(state: boolean): void;
    function DisplayAmmoThisFrame(display: boolean): void;
    function DisplayAreaName(toggle: boolean): void;
    function DisplayCash(display: boolean): void;
    function DisplayHelpTextThisFrame(message: string, p1: boolean): void;
    function DisplayHud(toggle: boolean): void;
    function DisplayHudWhenDeadThisFrame(): void;
    function N_0x7669f9e39dc17063(): void;
    function DisplayHudWhenPausedThisFrame(): void;
    function N_0x402f9ed62087e898(): void;
    function DisplayOnscreenKeyboard(
        p0: number,
        windowTitle: string,
        p2: string,
        defaultText: string,
        defaultConcat1: string,
        defaultConcat2: string,
        defaultConcat3: string,
        maxInputLength: number
    ): void;
    function DisplayOnscreenKeyboardWithLongerInitialString(
        p0: number,
        windowTitle: string,
        defaultText: string,
        defaultConcat1: string,
        defaultConcat2: string,
        defaultConcat3: string,
        defaultConcat4: string,
        defaultConcat5: string,
        defaultConcat6: string,
        defaultConcat7: string,
        maxInputLength: number
    ): number;
    function N_0xca78cfa0366592fe(
        p0: number,
        windowTitle: string,
        defaultText: string,
        defaultConcat1: string,
        defaultConcat2: string,
        defaultConcat3: string,
        defaultConcat4: string,
        defaultConcat5: string,
        defaultConcat6: string,
        defaultConcat7: string,
        maxInputLength: number
    ): number;
    function DisplayOnscreenKeyboard_2(
        p0: number,
        windowTitle: string,
        defaultText: string,
        defaultConcat1: string,
        defaultConcat2: string,
        defaultConcat3: string,
        defaultConcat4: string,
        defaultConcat5: string,
        defaultConcat6: string,
        defaultConcat7: string,
        maxInputLength: number
    ): number;
    function DisplayPlayerNameTagsOnBlips(toggle: boolean): void;
    function N_0x82cedc33687e1f50(toggle: boolean): void;
    function DisplayRadar(toggle: boolean): void;
    function DisplaySniperScopeThisFrame(): void;
    function DisplaySystemSigninUi(unk: boolean): void;
    function DisposeSynchronizedScene(scene: number): void;
    function N_0xcd9cc7e200a52a6f(scene: number): void;
    function DistantCopCarSirens(value: boolean): void;
    function N_0x552369f549563ad5(value: boolean): void;
    function ForceAmbientSiren(value: boolean): void;
    function DoAutoSave(): void;
    function DoScreenFadeIn(duration: number): void;
    function DoScreenFadeOut(duration: number): void;
    function DoesAirDefenseZoneExist(zoneId: number): boolean;
    function N_0xcd79a550999d7d4f(zoneId: number): boolean;
    function DoesAnimDictExist(animDict: string): boolean;
    function DoesBlipExist(blip: number): boolean;
    function DoesBlipHaveGpsRoute(blip: number): boolean;
    function N_0xdd2238f57b977751(blip: number): boolean;
    function DoesCamExist(cam: number): boolean;
    function DoesCargobobHavePickUpRope(cargobob: number): boolean;
    function IsCargobobHookActive(cargobob: number): boolean;
    function DoesCargobobHavePickupMagnet(cargobob: number): boolean;
    function IsCargobobMagnetActive(cargobob: number): boolean;
    function DoesCutsceneEntityExist(cutsceneEntName: string, modelHash: number): boolean;
    function DoesEntityBelongToThisScript(entity: number, p2: boolean): boolean;
    function DoesEntityExist(entity: number): boolean;
    function DoesEntityHaveAnimDirector(entity: number): boolean;
    function DoesEntityHaveDrawable(entity: number): boolean;
    function DoesEntityHavePhysics(entity: number): boolean;
    function DoesEntityHaveSkeletonData(entity: number): boolean;
    function DoesExtraExist(vehicle: number, extraId: number): boolean;
    function DoesGroupExist(groupId: number): boolean;
    function DoesLatestBriefStringExist(briefValue: number): boolean;
    function N_0x5e657ef1099edd65(briefValue: number): boolean;
    function DoesNavmeshBlockingObjectExist(p0: number): boolean;
    function N_0x0eaeb0db4b132399(p0: number): boolean;
    function DoesObjectOfTypeExistAtCoords(
        x: number,
        y: number,
        z: number,
        radius: number,
        hash: number,
        p5: boolean
    ): boolean;
    function DoesParticleFxLoopedExist(ptfxHandle: number): boolean;
    function DoesPedHaveAiBlip(ped: number): boolean;
    function DoesPickupExist(pickup: number): boolean;
    function DoesPickupObjectExist(pickupObject: number): boolean;
    function DoesPickupOfTypeExistInArea(pickupHash: number, x: number, y: number, z: number, radius: number): boolean;
    function IsPickupWithinRadius(pickupHash: number, x: number, y: number, z: number, radius: number): boolean;
    function DoesPlayerVehHaveRadio(): boolean;
    function N_0x109697e2ffbac8a1(): boolean;
    function DoesPopMultiplierAreaExist(id: number): boolean;
    function N_0x1327e2fe9746baee(id: number): boolean;
    function DoesPopMultiplierSphereExist(id: number): boolean;
    function N_0x171bafb3c60389f4(id: number): boolean;
    function DoesRayfireMapObjectExist(object: number): boolean;
    function N_0x52af537a0c5b8aad(object: number): boolean;
    function DoesDesObjectExist(object: number): boolean;
    function DoesRelationshipGroupExist(groupHash: number): boolean;
    function N_0xcc6e3b6bb69501f1(groupHash: number): boolean;
    function DoesRopeBelongToThisScript(ropeId: number): boolean;
    function N_0x271c9d3aca5d6409(ropeId: number): boolean;
    function DoesRopeExist(ropeId: number): LuaMultiReturn<[boolean, number]>;
    function DoesScenarioBlockingAreaExist(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number
    ): boolean;
    function N_0x8a24b067d175a7bd(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    function DoesScenarioExistInArea(x: number, y: number, z: number, radius: number, b: boolean): boolean;
    function DoesScenarioGroupExist(scenarioGroup: string): boolean;
    function DoesScenarioOfTypeExistInArea(
        p0: number,
        p1: number,
        p2: number,
        p3: string,
        p4: number,
        p5: boolean
    ): boolean;
    function DoesScriptExist(scriptName: string): boolean;
    function DoesScriptVehicleGeneratorExist(vehicleGenerator: number): boolean;
    function DoesScriptWithNameHashExist(scriptHash: number): boolean;
    function N_0xf86aa3c56ba31381(scriptHash: number): boolean;
    function DoesScriptedCoverPointExistAtCoords(x: number, y: number, z: number): boolean;
    function DoesShopPedApparelHaveRestrictionTag(
        componentHash: number,
        restrictionTagHash: number,
        componentId: number
    ): boolean;
    function N_0x341de7ed1d2a1bfd(componentHash: number, restrictionTagHash: number, componentId: number): boolean;
    function DoesTextBlockExist(gxt: string): boolean;
    function DoesTextLabelExist(gxt: string): boolean;
    function DoesTimecycleModifierHasVar(modifierName: string, varName: string): boolean;
    function DoesVehicleAllowRappel(vehicle: number): boolean;
    function N_0x4e417c547182c84d(vehicle: number): boolean;
    function DoesVehicleExistWithDecorator(decorator: string): boolean;
    function DoesVehicleHaveCrewEmblem(vehicle: number, p1: number): boolean;
    function HasVehicleGotDecal(vehicle: number, p1: number): boolean;
    function DoesVehicleHaveDecal(vehicle: number, p1: number): boolean;
    function DoesVehicleHaveLandingGear(vehicle: number): boolean;
    function N_0xe43701c36caff1a4(vehicle: number): boolean;
    function GetVehicleHasLandingGear(vehicle: number): boolean;
    function DoesVehicleHaveRoof(vehicle: number): boolean;
    function DoesVehicleHaveSearchlight(vehicle: number): boolean;
    function DoesVehicleHaveStuckVehicleCheck(vehicle: number): boolean;
    function DoesVehicleHaveWeapons(vehicle: number): boolean;
    function DoesVehicleTyreExist(vehicle: number, tyreIndex: number): boolean;
    function N_0x534e36d4db9ecc5d(vehicle: number, tyreIndex: number): boolean;
    function DoesWeaponTakeWeaponComponent(weaponHash: number, componentHash: number): boolean;
    function DontRenderInGameUi(p0: boolean): void;
    function N_0x22a249a53034450a(p0: boolean): void;
    function DontTiltMinimapThisFrame(): void;
    function CenterPlayerOnRadarThisFrame(): void;
    function DoorControl(
        modelHash: number,
        x: number,
        y: number,
        z: number,
        locked: boolean,
        xRotMult: number,
        yRotMult: number,
        zRotMult: number
    ): void;
    function DoorSystemFindExistingDoor(
        x: number,
        y: number,
        z: number,
        modelHash: number,
        doorOutPointer: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x589f80b325cc82c5(
        x: number,
        y: number,
        z: number,
        modelHash: number,
        doorOutPointer: number
    ): LuaMultiReturn<[boolean, number]>;
    function DoorSystemGetActive(): any;
    function DoorSystemGetAutomaticDistance(doorHash: number): number;
    function DoorSystemGetDoorPendingState(doorHash: number): number;
    function N_0x4bc2854478f3a749(doorHash: number): number;
    function DoorSystemGetDoorState(doorHash: number): number;
    function N_0x160aa1b32f6139b8(doorHash: number): number;
    function DoorSystemGetIsPhysicsLoaded(doorHash: number): boolean;
    function N_0xdf97cdd4fc08fd34(doorHash: number): boolean;
    function DoorSystemGetOpenRatio(doorHash: number): number;
    function N_0x65499865fca6e5ec(doorHash: number): number;
    function DoorSystemGetSize(): number;
    function DoorSystemSetAutomaticDistance(
        doorHash: number,
        distance: number,
        requestDoor: boolean,
        forceUpdate: boolean
    ): void;
    function N_0x9ba001cb45cbf627(doorHash: number, distance: number, requestDoor: boolean, forceUpdate: boolean): void;
    function DoorSystemSetAutomaticRate(
        doorHash: number,
        rate: number,
        requestDoor: boolean,
        forceUpdate: boolean
    ): void;
    function N_0x03c27e13b42a0e82(doorHash: number, rate: number, requestDoor: boolean, forceUpdate: boolean): void;
    function DoorSystemSetDoorState(doorHash: number, state: number, requestDoor: boolean, forceUpdate: boolean): void;
    function N_0x6bab9442830c7f53(doorHash: number, state: number, requestDoor: boolean, forceUpdate: boolean): void;
    function SetDoorAccelerationLimit(
        doorHash: number,
        state: number,
        requestDoor: boolean,
        forceUpdate: boolean
    ): void;
    function DoorSystemSetHoldOpen(doorHash: number, toggle: boolean): void;
    function N_0xd9b71952f78a2640(doorHash: number, toggle: boolean): void;
    function DoorSystemSetOpenRatio(doorHash: number, ajar: number, requestDoor: boolean, forceUpdate: boolean): void;
    function N_0xb6e6fba95c7324ac(doorHash: number, ajar: number, requestDoor: boolean, forceUpdate: boolean): void;
    function SetDoorAjarAngle(doorHash: number, ajar: number, requestDoor: boolean, forceUpdate: boolean): void;
    function DoorSystemSetSpringRemoved(
        doorHash: number,
        removed: boolean,
        requestDoor: boolean,
        forceUpdate: boolean
    ): void;
    function N_0xc485e07e4f0b7958(doorHash: number, removed: boolean, requestDoor: boolean, forceUpdate: boolean): void;
    function DrawBinkMovie(
        binkMovie: number,
        posX: number,
        posY: number,
        scaleX: number,
        scaleY: number,
        rotation: number,
        r: number,
        g: number,
        b: number,
        a: number
    ): void;
    function DrawBox(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawDebugBox(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        r: number,
        g: number,
        b: number,
        a: number
    ): void;
    function DrawDebugCross(
        x: number,
        y: number,
        z: number,
        size: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawDebugLine(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        r: number,
        g: number,
        b: number,
        a: number
    ): void;
    function DrawDebugLineWithTwoColours(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        r1: number,
        g1: number,
        b1: number,
        r2: number,
        g2: number,
        b2: number,
        alpha1: number,
        alpha2: number
    ): void;
    function DrawDebugSphere(
        x: number,
        y: number,
        z: number,
        radius: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawDebugText(
        text: string,
        x: number,
        y: number,
        z: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawDebugText_2d(
        text: string,
        x: number,
        y: number,
        z: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawGizmo(matrixPtr: number, id: string): boolean;
    function DrawGlowSphere(
        posX: number,
        posY: number,
        posZ: number,
        radius: number,
        colorR: number,
        colorG: number,
        colorB: number,
        intensity: number,
        invert: boolean,
        marker: boolean
    ): void;
    function DrawInteractiveSprite(
        textureDict: string,
        textureName: string,
        screenX: number,
        screenY: number,
        width: number,
        height: number,
        heading: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function N_0x2bc54a8188768488(
        textureDict: string,
        textureName: string,
        screenX: number,
        screenY: number,
        width: number,
        height: number,
        heading: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawLightWithRange(
        posX: number,
        posY: number,
        posZ: number,
        colorR: number,
        colorG: number,
        colorB: number,
        range: number,
        intensity: number
    ): void;
    function DrawLightWithRangeAndShadow(
        x: number,
        y: number,
        z: number,
        r: number,
        g: number,
        b: number,
        range: number,
        intensity: number,
        shadow: number
    ): void;
    function DrawLightWithRangeWithShadow(
        x: number,
        y: number,
        z: number,
        r: number,
        g: number,
        b: number,
        range: number,
        intensity: number,
        shadow: number
    ): void;
    function DrawLine(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawLine_2d(
        x1: number,
        y1: number,
        x2: number,
        y2: number,
        width: number,
        r: number,
        g: number,
        b: number,
        a: number
    ): void;
    function DrawLowQualityPhotoToPhone(p0: boolean, p1: boolean): void;
    function N_0x1072f115dab0717e(p0: boolean, p1: boolean): void;
    function DrawMarker(
        _type: number,
        posX: number,
        posY: number,
        posZ: number,
        dirX: number,
        dirY: number,
        dirZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        scaleX: number,
        scaleY: number,
        scaleZ: number,
        red: number,
        green: number,
        blue: number,
        alpha: number,
        bobUpAndDown: boolean,
        faceCamera: boolean,
        p19: number,
        rotate: boolean,
        textureDict: string,
        textureName: string,
        drawOnEnts: boolean
    ): void;
    function DrawMarker_2(
        _type: number,
        posX: number,
        posY: number,
        posZ: number,
        dirX: number,
        dirY: number,
        dirZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        scaleX: number,
        scaleY: number,
        scaleZ: number,
        red: number,
        green: number,
        blue: number,
        alpha: number,
        bobUpAndDown: boolean,
        faceCamera: boolean,
        p19: number,
        rotate: boolean,
        textureDict: string,
        textureName: string,
        drawOnEnts: boolean,
        p24: boolean
    ): void;
    function N_0xe82728f0de75d13a(
        _type: number,
        posX: number,
        posY: number,
        posZ: number,
        dirX: number,
        dirY: number,
        dirZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        scaleX: number,
        scaleY: number,
        scaleZ: number,
        red: number,
        green: number,
        blue: number,
        alpha: number,
        bobUpAndDown: boolean,
        faceCamera: boolean,
        p19: number,
        rotate: boolean,
        textureDict: string,
        textureName: string,
        drawOnEnts: boolean,
        p24: boolean
    ): void;
    function DrawPoly(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        x3: number,
        y3: number,
        z3: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawRect(
        x: number,
        y: number,
        width: number,
        height: number,
        r: number,
        g: number,
        b: number,
        a: number
    ): void;
    function DrawRectRotated(
        x: number,
        y: number,
        width: number,
        height: number,
        rotation: number,
        r: number,
        g: number,
        b: number,
        a: number
    ): void;
    function DrawScaleformMovie(
        scaleformHandle: number,
        x: number,
        y: number,
        width: number,
        height: number,
        red: number,
        green: number,
        blue: number,
        alpha: number,
        unk: number
    ): void;
    function DrawScaleformMovieFullscreen(
        scaleform: number,
        red: number,
        green: number,
        blue: number,
        alpha: number,
        unk: number
    ): void;
    function DrawScaleformMovieFullscreenMasked(
        scaleform1: number,
        scaleform2: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawScaleformMovie_3d(
        scaleform: number,
        posX: number,
        posY: number,
        posZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        p7: number,
        sharpness: number,
        p9: number,
        scaleX: number,
        scaleY: number,
        scaleZ: number,
        p13: number
    ): void;
    function N_0x87d51d72255d4e78(
        scaleform: number,
        posX: number,
        posY: number,
        posZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        p7: number,
        sharpness: number,
        p9: number,
        scaleX: number,
        scaleY: number,
        scaleZ: number,
        p13: number
    ): void;
    function DrawScaleformMovie_3dSolid(
        scaleform: number,
        posX: number,
        posY: number,
        posZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        p7: number,
        p8: number,
        p9: number,
        scaleX: number,
        scaleY: number,
        scaleZ: number,
        p13: number
    ): void;
    function N_0x1ce592fdc749d6f5(
        scaleform: number,
        posX: number,
        posY: number,
        posZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        p7: number,
        p8: number,
        p9: number,
        scaleX: number,
        scaleY: number,
        scaleZ: number,
        p13: number
    ): void;
    function DrawScaleformMovie_3dNonAdditive(
        scaleform: number,
        posX: number,
        posY: number,
        posZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        p7: number,
        p8: number,
        p9: number,
        scaleX: number,
        scaleY: number,
        scaleZ: number,
        p13: number
    ): void;
    function DrawShowroom(p0: string, ped: number, p2: number, posX: number, posY: number, posZ: number): boolean;
    function N_0x98c4fe6ec34154ca(
        p0: string,
        ped: number,
        p2: number,
        posX: number,
        posY: number,
        posZ: number
    ): boolean;
    function DrawSphere(
        x: number,
        y: number,
        z: number,
        radius: number,
        r: number,
        g: number,
        b: number,
        opacity: number
    ): void;
    function N_0x799017f9e3b10112(
        x: number,
        y: number,
        z: number,
        radius: number,
        r: number,
        g: number,
        b: number,
        opacity: number
    ): void;
    function DrawSpotLight(
        posX: number,
        posY: number,
        posZ: number,
        dirX: number,
        dirY: number,
        dirZ: number,
        colorR: number,
        colorG: number,
        colorB: number,
        distance: number,
        brightness: number,
        hardness: number,
        radius: number,
        falloff: number
    ): void;
    function DrawSpotLightWithShadow(
        posX: number,
        posY: number,
        posZ: number,
        dirX: number,
        dirY: number,
        dirZ: number,
        colorR: number,
        colorG: number,
        colorB: number,
        distance: number,
        brightness: number,
        roundness: number,
        radius: number,
        falloff: number,
        shadowId: number
    ): void;
    function DrawSprite(
        textureDict: string,
        textureName: string,
        screenX: number,
        screenY: number,
        width: number,
        height: number,
        heading: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawSpritePoly(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        x3: number,
        y3: number,
        z3: number,
        red: number,
        green: number,
        blue: number,
        alpha: number,
        textureDict: string,
        textureName: string,
        u1: number,
        v1: number,
        w1: number,
        u2: number,
        v2: number,
        w2: number,
        u3: number,
        v3: number,
        w3: number
    ): void;
    function N_0x29280002282f1928(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        x3: number,
        y3: number,
        z3: number,
        red: number,
        green: number,
        blue: number,
        alpha: number,
        textureDict: string,
        textureName: string,
        u1: number,
        v1: number,
        w1: number,
        u2: number,
        v2: number,
        w2: number,
        u3: number,
        v3: number,
        w3: number
    ): void;
    function DrawSpritePoly_2(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        x3: number,
        y3: number,
        z3: number,
        red1: number,
        green1: number,
        blue1: number,
        alpha1: number,
        red2: number,
        green2: number,
        blue2: number,
        alpha2: number,
        red3: number,
        green3: number,
        blue3: number,
        alpha3: number,
        textureDict: string,
        textureName: string,
        u1: number,
        v1: number,
        w1: number,
        u2: number,
        v2: number,
        w2: number,
        u3: number,
        v3: number,
        w3: number
    ): void;
    function N_0x736d7aa1b750856b(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        x3: number,
        y3: number,
        z3: number,
        red1: number,
        green1: number,
        blue1: number,
        alpha1: number,
        red2: number,
        green2: number,
        blue2: number,
        alpha2: number,
        red3: number,
        green3: number,
        blue3: number,
        alpha3: number,
        textureDict: string,
        textureName: string,
        u1: number,
        v1: number,
        w1: number,
        u2: number,
        v2: number,
        w2: number,
        u3: number,
        v3: number,
        w3: number
    ): void;
    function DrawSpriteUv(
        textureDict: string,
        textureName: string,
        x: number,
        y: number,
        width: number,
        height: number,
        u1: number,
        v1: number,
        u2: number,
        v2: number,
        heading: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DrawTvChannel(
        xPos: number,
        yPos: number,
        xScale: number,
        yScale: number,
        rotation: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function DropAmbientProp(ped: number): void;
    function N_0xaff4710e2a0a6c12(ped: number): void;
    function DuplicateFunctionReference(referenceIdentity: string): string;
    function EjectJb700Roof(vehicle: number, x: number, y: number, z: number): void;
    function N_0xe38cb9d7d39fdbcc(vehicle: number, x: number, y: number, z: number): void;
    function EnableAircraftObstacleAvoidance(vehicle: number, avoidObstacles: boolean): void;
    function N_0x8aa9180de2fedd45(vehicle: number, avoidObstacles: boolean): void;
    function EnableAlienBloodVfx(toggle: boolean): void;
    function N_0x9dce1f0f78260875(toggle: boolean): void;
    function EnableAllControlActions(padIndex: number): void;
    function EnableClownBloodVfx(toggle: boolean): void;
    function SetCameraEndtime(toggle: boolean): void;
    function EnableControlAction(padIndex: number, control: number, enable: boolean): void;
    function EnableCrosshairThisFrame(): void;
    function EnableDispatchService(dispatchService: number, toggle: boolean): void;
    function N_0xdc0f817884cdd856(dispatchService: number, toggle: boolean): void;
    function EnableEditorRuntime(): void;
    function EnableEntityUnk(entity: number): void;
    function N_0x6ce177d014502e8a(entity: number): void;
    function EnableExteriorCullModelThisFrame(mapObjectHash: number): void;
    function N_0xa97f257d0151a6ab(mapObjectHash: number): void;
    function HideMapObjectThisFrame(mapObjectHash: number): void;
    function EnableLaserSightRendering(toggle: boolean): void;
    function EnableMovieKeyframeWait(toggle: boolean): void;
    function N_0x74c180030fde4b69(toggle: boolean): void;
    function EnableMovieSubtitles(toggle: boolean): void;
    function EnableSavingInGarage(garageHash: number, toggle: boolean): void;
    function N_0xf2e1a7133dd356a6(garageHash: number, toggle: boolean): void;
    function EnableScriptBrainSet(brainSet: number): void;
    function EnableScriptCullModelThisFrame(mapObjectHash: number): void;
    function N_0x50c375537449f369(mapObjectHash: number): void;
    function EnableSpecialAbility(player: number, toggle: boolean): void;
    function EnableStallWarningSounds(vehicle: number, toggle: boolean): void;
    function N_0xc15907d667f7cfb2(vehicle: number, toggle: boolean): void;
    function EnableStuntJumpSet(p0: number): void;
    function EnableSwitchPauseBeforeDescent(): void;
    function N_0xd4793dff3af2abcd(): void;
    function EnableTennisMode(ped: number, toggle: boolean, p2: boolean): void;
    function EnableVehicleExhaustPops(vehicle: number, toggle: boolean): void;
    function N_0x2be4bc731d039d5a(vehicle: number, toggle: boolean): void;
    function EndFindKvp(handle: number): void;
    function EndFindObject(findHandle: number): void;
    function EndFindPed(findHandle: number): void;
    function EndFindPickup(findHandle: number): void;
    function EndFindVehicle(findHandle: number): void;
    function EndPetrolTrailDecals(): void;
    function N_0x0a123435a26c36cd(): void;
    function EndReplayStats(): void;
    function EndScaleformMovieMethod(): void;
    function PopScaleformMovieFunctionVoid(): void;
    function EndScaleformMovieMethodReturnValue(): number;
    function PopScaleformMovieFunction(): number;
    function EndScaleformMovieMethodReturn(): number;
    function EndSrl(): void;
    function EndTextCommandBusyspinnerOn(busySpinnerType: number): void;
    function N_0xbd12f8228410d9b4(busySpinnerType: number): void;
    function ShowLoadingPrompt(busySpinnerType: number): void;
    function EndTextCommandBusyString(busySpinnerType: number): void;
    function EndTextCommandClearPrint(): void;
    function N_0xfcc75460aba29378(): void;
    function EndTextCommandDisplayHelp(shape: number, loop: boolean, beep: boolean, duration: number): void;
    function DisplayHelpTextFromStringLabel(shape: number, loop: boolean, beep: boolean, duration: number): void;
    function EndTextCommandDisplayText(x: number, y: number): void;
    function DrawText(x: number, y: number): void;
    function EndTextCommandGetWidth(p0: boolean): number;
    function GetTextScreenWidth(p0: boolean): number;
    function EndTextCommandIsMessageDisplayed(): boolean;
    function N_0x8a9ba1ab3e237613(): boolean;
    function EndTextCommandIsThisHelpMessageBeingDisplayed(hudIndex: number): boolean;
    function N_0x10bddbfc529428dd(hudIndex: number): boolean;
    function EndTextCommandLineCount(x: number, y: number): number;
    function N_0x9040dfb09be75706(x: number, y: number): number;
    function GetTextScreenLineCount(x: number, y: number): number;
    function EndTextCommandGetLineCount(x: number, y: number): number;
    function EndTextCommandObjective(p0: boolean): void;
    function N_0xcfdbdf5ae59ba0f4(p0: boolean): void;
    function EndTextCommandOverrideButtonText(buttonIndex: number): void;
    function N_0xa86911979638106f(buttonIndex: number): void;
    function EndTextCommandTimer(buttonIndex: number): void;
    function EndTextCommandPrint(duration: number, drawImmediately: boolean): void;
    function DrawSubtitleTimed(duration: number, drawImmediately: boolean): void;
    function EndTextCommandScaleformString(): void;
    function EndTextComponent(): void;
    function EndTextCommandScaleformString_2(): void;
    function N_0xae4e8157d9ecf087(): void;
    function EndTextCommandSetBlipName(blip: number): void;
    function EndTextCommandThefeedPostAward(
        textureDict: string,
        textureName: string,
        rpBonus: number,
        colorOverlay: number,
        titleLabel: string
    ): number;
    function N_0xaa295b6f28bd587d(
        textureDict: string,
        textureName: string,
        rpBonus: number,
        colorOverlay: number,
        titleLabel: string
    ): number;
    function DrawNotificationIcon(
        textureDict: string,
        textureName: string,
        rpBonus: number,
        colorOverlay: number,
        titleLabel: string
    ): number;
    function DrawNotificationAward(
        textureDict: string,
        textureName: string,
        rpBonus: number,
        colorOverlay: number,
        titleLabel: string
    ): number;
    function EndTextCommandThefeedPostCrewRankup(
        chTitle: string,
        clanTxd: string,
        clanTxn: string,
        isImportant: boolean,
        showSubtitle: boolean
    ): number;
    function N_0x8efccf6ec66d85e4(
        chTitle: string,
        clanTxd: string,
        clanTxn: string,
        isImportant: boolean,
        showSubtitle: boolean
    ): number;
    function EndTextCommandThefeedPostCrewtag(
        crewTypeIsPrivate: boolean,
        crewTagContainsRockstar: boolean,
        rank: number,
        hasFounderStatus: boolean,
        isImportant: boolean,
        clanHandle: number,
        r: number,
        g: number,
        b: number
    ): LuaMultiReturn<[number, number]>;
    function N_0x97c9e4e7024a8f2c(
        crewTypeIsPrivate: boolean,
        crewTagContainsRockstar: boolean,
        rank: number,
        hasFounderStatus: boolean,
        isImportant: boolean,
        clanHandle: number,
        r: number,
        g: number,
        b: number
    ): LuaMultiReturn<[number, number]>;
    function NotificationSendApartmentInvite(
        crewTypeIsPrivate: boolean,
        crewTagContainsRockstar: boolean,
        rank: number,
        hasFounderStatus: boolean,
        isImportant: boolean,
        clanHandle: number,
        r: number,
        g: number,
        b: number
    ): LuaMultiReturn<[number, number]>;
    function DrawNotificationApartmentInvite(
        crewTypeIsPrivate: boolean,
        crewTagContainsRockstar: boolean,
        rank: number,
        hasFounderStatus: boolean,
        isImportant: boolean,
        clanHandle: number,
        r: number,
        g: number,
        b: number
    ): LuaMultiReturn<[number, number]>;
    function EndTextCommandThefeedPostCrewtagWithGameName(
        crewTypeIsPrivate: boolean,
        crewTagContainsRockstar: boolean,
        rank: number,
        isLeader: boolean,
        isImportant: boolean,
        clanHandle: number,
        gamerStr: string,
        r: number,
        g: number,
        b: number
    ): LuaMultiReturn<[number, number]>;
    function N_0x137bc35589e34e1e(
        crewTypeIsPrivate: boolean,
        crewTagContainsRockstar: boolean,
        rank: number,
        isLeader: boolean,
        isImportant: boolean,
        clanHandle: number,
        gamerStr: string,
        r: number,
        g: number,
        b: number
    ): LuaMultiReturn<[number, number]>;
    function NotificationSendClanInvite(
        crewTypeIsPrivate: boolean,
        crewTagContainsRockstar: boolean,
        rank: number,
        isLeader: boolean,
        isImportant: boolean,
        clanHandle: number,
        gamerStr: string,
        r: number,
        g: number,
        b: number
    ): LuaMultiReturn<[number, number]>;
    function DrawNotificationClanInvite(
        crewTypeIsPrivate: boolean,
        crewTagContainsRockstar: boolean,
        rank: number,
        isLeader: boolean,
        isImportant: boolean,
        clanHandle: number,
        gamerStr: string,
        r: number,
        g: number,
        b: number
    ): LuaMultiReturn<[number, number]>;
    function EndTextCommandThefeedPostMessagetext(
        textureDict: string,
        textureName: string,
        flash: boolean,
        iconType: number,
        sender: string,
        subject: string
    ): number;
    function SetNotificationMessage(
        textureDict: string,
        textureName: string,
        flash: boolean,
        iconType: number,
        sender: string,
        subject: string
    ): number;
    function EndTextCommandThefeedPostMessagetextGxtEntry(
        txdName: string,
        textureName: string,
        flash: boolean,
        iconType: number,
        sender: string,
        subject: string
    ): number;
    function N_0xc6f580e4c94926ac(
        txdName: string,
        textureName: string,
        flash: boolean,
        iconType: number,
        sender: string,
        subject: string
    ): number;
    function SetNotificationMessage_3(
        txdName: string,
        textureName: string,
        flash: boolean,
        iconType: number,
        sender: string,
        subject: string
    ): number;
    function EndTextCommandThefeedPostMessagetextEntry(
        txdName: string,
        textureName: string,
        flash: boolean,
        iconType: number,
        sender: string,
        subject: string
    ): number;
    function EndTextCommandThefeedPostMessagetextTu(
        picTxd: string,
        picTxn: string,
        flash: boolean,
        iconType: number,
        nameStr: string,
        subtitleStr: string,
        durationMultiplier: number
    ): number;
    function N_0x1e6611149db3db6b(
        picTxd: string,
        picTxn: string,
        flash: boolean,
        iconType: number,
        nameStr: string,
        subtitleStr: string,
        durationMultiplier: number
    ): number;
    function SetNotificationMessage_4(
        picTxd: string,
        picTxn: string,
        flash: boolean,
        iconType: number,
        nameStr: string,
        subtitleStr: string,
        durationMultiplier: number
    ): number;
    function EndTextCommandThefeedPostMessagetextWithCrewTag(
        picTxd: string,
        picTxn: string,
        flash: boolean,
        iconType: number,
        nameStr: string,
        subtitleStr: string,
        duration: number,
        crewPackedStr: string
    ): number;
    function SetNotificationMessageClanTag(
        picTxd: string,
        picTxn: string,
        flash: boolean,
        iconType: number,
        nameStr: string,
        subtitleStr: string,
        duration: number,
        crewPackedStr: string
    ): number;
    function EndTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(
        picTxd: string,
        picTxn: string,
        flash: boolean,
        iconType1: number,
        nameStr: string,
        subtitleStr: string,
        duration: number,
        crewPackedStr: string,
        iconType2: number,
        textColor: number
    ): number;
    function SetNotificationMessageClanTag_2(
        picTxd: string,
        picTxn: string,
        flash: boolean,
        iconType1: number,
        nameStr: string,
        subtitleStr: string,
        duration: number,
        crewPackedStr: string,
        iconType2: number,
        textColor: number
    ): number;
    function EndTextCommandThefeedPostMpticker(blink: boolean, bHasTokens: boolean): number;
    function DrawNotification_4(blink: boolean, bHasTokens: boolean): number;
    function EndTextCommandThefeedPostReplayIcon(eType: number, iIcon: number, sTitle: string): number;
    function N_0xd202b92cbf1d816f(eType: number, iIcon: number, sTitle: string): number;
    function DrawNotificationWithIcon(eType: number, iIcon: number, sTitle: string): number;
    function EndTextCommandThefeedPostReplayInput(_type: number, button: string, text: string): number;
    function N_0xdd6cb2cce7c2735c(_type: number, button: string, text: string): number;
    function DrawNotificationWithButton(_type: number, button: string, text: string): number;
    function EndTextCommandThefeedPostStats(
        statTitle: string,
        iconEnum: number,
        stepVal: boolean,
        barValue: number,
        isImportant: boolean,
        picTxd: string,
        picTxn: string
    ): number;
    function N_0x2b7e9a4eaaa93c89(
        statTitle: string,
        iconEnum: number,
        stepVal: boolean,
        barValue: number,
        isImportant: boolean,
        picTxd: string,
        picTxn: string
    ): number;
    function SetNotificationMessage_2(
        statTitle: string,
        iconEnum: number,
        stepVal: boolean,
        barValue: number,
        isImportant: boolean,
        picTxd: string,
        picTxn: string
    ): number;
    function EndTextCommandThefeedPostTicker(isImportant: boolean, bHasTokens: boolean): number;
    function DrawNotification(isImportant: boolean, bHasTokens: boolean): number;
    function EndTextCommandThefeedPostTickerForced(blink: boolean, bHasTokens: boolean): number;
    function DrawNotification_2(blink: boolean, bHasTokens: boolean): number;
    function EndTextCommandThefeedPostTickerWithTokens(isImportant: boolean, bHasTokens: boolean): number;
    function DrawNotification_3(isImportant: boolean, bHasTokens: boolean): number;
    function EndTextCommandThefeedPostUnlock(chTitle: string, iconType: number, chSubtitle: string): number;
    function N_0x33ee12743ccd6343(chTitle: string, iconType: number, chSubtitle: string): number;
    function EndTextCommandThefeedPostUnlockTu(
        chTitle: string,
        iconType: number,
        chSubtitle: string,
        isImportant: boolean
    ): number;
    function N_0xc8f3aaf93d0600bf(chTitle: string, iconType: number, chSubtitle: string, isImportant: boolean): number;
    function EndTextCommandThefeedPostUnlockTuWithColor(
        chTitle: string,
        iconType: number,
        chSubtitle: string,
        isImportant: boolean,
        titleColor: number,
        p5: boolean
    ): number;
    function N_0x7ae0589093a2e088(
        chTitle: string,
        iconType: number,
        chSubtitle: string,
        isImportant: boolean,
        titleColor: number,
        p5: boolean
    ): number;
    function EndTextCommandThefeedPostVersusTu(
        ch1TXD: string,
        ch1TXN: string,
        val1: number,
        ch2TXD: string,
        ch2TXN: string,
        val2: number
    ): number;
    function N_0xb6871b0555b02996(
        ch1TXD: string,
        ch1TXN: string,
        val1: number,
        ch2TXD: string,
        ch2TXN: string,
        val2: number
    ): number;
    function EnsureEntityStateBag(entity: number): void;
    function EnterCursorMode(): void;
    function ExecuteCommand(commandString: string): void;
    function ExperimentalLoadCloneCreate(data: string, objectId: number, tree: string): number;
    function ExperimentalLoadCloneSync(entity: number, data: string): void;
    function ExperimentalSaveCloneCreate(entity: number): string;
    function ExperimentalSaveCloneSync(entity: number): string;
    function ExplodePedHead(ped: number, weaponHash: number): void;
    function ExplodeProjectiles(ped: number, weaponHash: number, p2: boolean): void;
    function ExplodeVehicle(vehicle: number, isAudible: boolean, isInvisible: boolean): void;
    function ExplodeVehicleInCutscene(vehicle: number, p1: boolean): void;
    function ExtendWorldBoundaryForPlayer(x: number, y: number, z: number): void;
    function N_0x5006d96c995a5827(x: number, y: number, z: number): void;
    function ExpandWorldLimits(x: number, y: number, z: number): void;
    function FacebookDoUnkCheck(): boolean;
    function N_0xa75e2b6733da5142(): boolean;
    function FacebookIsAvailable(): boolean;
    function N_0x43865688ae10f0d7(): boolean;
    function FacebookIsSendingData(): boolean;
    function N_0x62b9fec9a11f10ef(): boolean;
    function FacebookSetCreateCharacterComplete(): boolean;
    function N_0xdc48473142545431(): boolean;
    function FacebookSetHeistComplete(heistName: string, cashEarned: number, xpEarned: number): boolean;
    function N_0x098ab65b9ed9a9ec(heistName: string, cashEarned: number, xpEarned: number): boolean;
    function FacebookSetMilestoneComplete(milestoneId: number): boolean;
    function N_0x0ae1f1653b554ab9(milestoneId: number): boolean;
    function FadeDecalsInRange(x: number, y: number, z: number, radius: number, duration: number): void;
    function FadeOutLocalPlayer(p0: boolean): void;
    function FadeUpPedLight(p0: number): void;
    function N_0xc9b18b4619f48f7b(p0: number): void;
    function FilloutPmPlayerList(p1: number, p2: number): LuaMultiReturn<[boolean, number]>;
    function FilloutPmPlayerListWithNames(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
    function FinalizeHeadBlend(ped: number): void;
    function N_0x4668d80430d6c299(ped: number): void;
    function FindAnimEventPhase(
        animDictionary: string,
        animName: string,
        p2: string
    ): LuaMultiReturn<[boolean, number, number]>;
    function FindFirstObject(outEntity: number): LuaMultiReturn<[number, number]>;
    function FindFirstPed(outEntity: number): LuaMultiReturn<[number, number]>;
    function FindFirstPickup(outEntity: number): LuaMultiReturn<[number, number]>;
    function FindFirstVehicle(outEntity: number): LuaMultiReturn<[number, number]>;
    function FindKvp(handle: number): string;
    function FindNextObject(findHandle: number, outEntity: number): LuaMultiReturn<[boolean, number]>;
    function FindNextPed(findHandle: number, outEntity: number): LuaMultiReturn<[boolean, number]>;
    function FindNextPickup(findHandle: number, outEntity: number): LuaMultiReturn<[boolean, number]>;
    function FindNextVehicle(findHandle: number, outEntity: number): LuaMultiReturn<[boolean, number]>;
    function FindRadioStationIndex(stationNameHash: number): number;
    function FindRandomPointInSpace(ped: number): Vector3;
    function N_0x8dc9675797123522(ped: number): Vector3;
    function FindSpawnPointInDirection(
        posX: number,
        posY: number,
        posZ: number,
        dirX: number,
        dirY: number,
        dirZ: number,
        distance: number
    ): LuaMultiReturn<[boolean, Vector3]>;
    function FindVehicleCarryingThisEntity(entity: number): number;
    function N_0x375e7fc44f21c8ab(entity: number): number;
    function GetVehicleAttachedToEntity(entity: number): number;
    function FireAirDefenseWeapon(zoneId: number, x: number, y: number, z: number): void;
    function N_0x44f1012b69313374(zoneId: number, x: number, y: number, z: number): void;
    function FixObjectFragment(object: number): void;
    function N_0xf9c1681347c8bd15(object: number): void;
    function FixVehicleWindow(vehicle: number, windowIndex: number): void;
    function FlagPlayerContextInTournament(toggle: boolean): void;
    function N_0xcef214315d276fd1(toggle: boolean): void;
    function SetIsInTournament(toggle: boolean): void;
    function FlashAbilityBar(millisecondsToFlash: number): void;
    function FlashMinimapDisplay(): void;
    function FlashMinimapDisplayWithColor(hudColorIndex: number): void;
    function N_0x6b1de27ee78e6a19(hudColorIndex: number): void;
    function FlashWantedDisplay(p0: boolean): void;
    function Floor(value: number): number;
    function ForceCinematicRenderingThisUpdate(p0: boolean): void;
    function N_0xa41bcd7213805aac(p0: boolean): void;
    function ForceCleanup(cleanupFlags: number): void;
    function ForceCleanupForAllThreadsWithThisName(name: string, cleanupFlags: number): void;
    function ForceCleanupForThreadWithThisId(id: number, cleanupFlags: number): void;
    function ForceCloseReportugcMenu(): void;
    function N_0xee4c0e6dbc6f2c6f(): void;
    function ForceCloseTextInputBox(): void;
    function N_0x8817605c2ba76200(): void;
    function ForceEntityAiAndAnimationUpdate(entity: number): void;
    function ForceGameStatePlaying(): void;
    function ResetLocalplayerState(): void;
    function ForceLightningFlash(): void;
    function CreateLightningThunder(): void;
    function ForcePedAiAndAnimationUpdate(ped: number, p1: boolean, p2: boolean): void;
    function N_0x2208438012482a1a(ped: number, p1: boolean, p2: boolean): void;
    function ForcePedMotionState(ped: number, motionStateHash: number, p2: boolean, p3: number, p4: boolean): boolean;
    function ForcePedToOpenParachute(ped: number): void;
    function ForcePickupRegenerate(p0: number): void;
    function N_0x758a5c1b3b1e1990(p0: number): void;
    function ForcePlaybackRecordedVehicleUpdate(vehicle: number, p1: boolean): void;
    function N_0x1f2e4e06dea8992b(vehicle: number, p1: boolean): void;
    function ForceRadioTrackListPosition(radioStation: string, trackListName: string, milliseconds: number): void;
    function N_0x4e0af9114608257c(radioStation: string, trackListName: string, milliseconds: number): void;
    function ForceRenderInGameUi(toggle: boolean): void;
    function N_0xdc459cfa0cce245b(toggle: boolean): void;
    function ForceRoomForEntity(entity: number, interior: number, roomHashKey: number): void;
    function ForceRoomForGameViewport(interiorID: number, roomHashKey: number): void;
    function N_0x920d853f3e17f1da(interiorID: number, roomHashKey: number): void;
    function ForceSnowPass(enabled: boolean): void;
    function ForceSocialClubUpdate(): void;
    function ForceSonarBlipsThisFrame(): number;
    function N_0x1121bfa1a1a522a8(): number;
    function ForceSubmarineSurfaceMode(vehicle: number, toggle: boolean): void;
    function N_0x33506883545ac0df(vehicle: number, toggle: boolean): void;
    function ForceVehicleEngineAudio(vehicle: number, audioName: string): void;
    function N_0x4f0c413926060b38(vehicle: number, audioName: string): void;
    function SetVehicleAudio(vehicle: number, audioName: string): void;
    function FreeMemoryForHighQualityPhoto(): void;
    function N_0xd801cc02177fa3f1(): void;
    function FreeMemoryForLowQualityPhoto(): void;
    function N_0x6a12d88881435dca(): void;
    function FreeMemoryForMissionCreatorPhoto(): void;
    function N_0x0a46af8a78dc5e0a(): void;
    function FreezeEntityPosition(entity: number, toggle: boolean): void;
    function FreezeMicrophone(): void;
    function N_0xd57aaae0e2214d11(): void;
    function FreezePedCameraRotation(ped: number): void;
    function N_0xff287323b0e2c69a(ped: number): void;
    function FreezeRadioStation(radioStation: string): void;
    function GenerateDirectionsToCoord(
        x: number,
        y: number,
        z: number,
        p3: boolean
    ): LuaMultiReturn<[number, number, number, number]>;
    function GetAchievementProgress(achievement: number): number;
    function N_0x1c186837d0619335(achievement: number): number;
    function GetAchievementProgression(achievement: number): number;
    function GetActivePlayers(): any;
    function GetActiveScreenResolution(): LuaMultiReturn<[number, number]>;
    function GetScreenActiveResolution(): LuaMultiReturn<[number, number]>;
    function GetActiveVehicleMissionType(vehicle: number): number;
    function GetAiBlip(ped: number): number;
    function N_0x56176892826a4fe8(ped: number): number;
    function GetAiBlip_2(ped: number): number;
    function N_0x7cd934010e115c2c(ped: number): number;
    function GetAllRopes(): any;
    function GetAllVehicleModels(): any;
    function GetAllVehicles(vehArray: number): LuaMultiReturn<[number, number]>;
    function GetAllocatedStackSize(): number;
    function GetAllowMovementWhileZoomed(): boolean;
    function N_0xfc859e2374407556(): boolean;
    function GetAmbientPedRangeMultiplier(): number;
    function GetAmbientVehicleRangeMultiplier(): number;
    function GetAmbientVoiceNameHash(ped: number): number;
    function N_0x5e203da2ba15d436(ped: number): number;
    function GetAmmoInClip(ped: number, weaponHash: number, ammo: number): LuaMultiReturn<[boolean, number]>;
    function GetAmmoInPedWeapon(ped: number, weaponhash: number): number;
    function GetAngleBetween_2dVectors(x1: number, y1: number, x2: number, y2: number): number;
    function GetAnimDuration(animDict: string, animName: string): number;
    function GetAnimInitialOffsetPosition(
        animDict: string,
        animName: string,
        x: number,
        y: number,
        z: number,
        xRot: number,
        yRot: number,
        zRot: number,
        p8: number,
        p9: number
    ): Vector3;
    function GetAnimInitialOffsetRotation(
        animDict: string,
        animName: string,
        x: number,
        y: number,
        z: number,
        xRot: number,
        yRot: number,
        zRot: number,
        p8: number,
        p9: number
    ): Vector3;
    function GetAspectRatio(b: boolean): number;
    function GetScreenAspectRatio(b: boolean): number;
    function GetAudibleMusicTrackTextId(): number;
    function GetBaseElementMetadata(p3: number, p4: boolean): LuaMultiReturn<[boolean, number, number]>;
    function N_0xb335f761606db47c(p3: number, p4: boolean): LuaMultiReturn<[boolean, number, number]>;
    function GetBenchmarkIterationsFromCommandLine(): number;
    function N_0x4750fc27570311ec(): number;
    function GetBenchmarkPassFromCommandLine(): number;
    function N_0x1b2366c3f2a5c8df(): number;
    function GetBenchmarkTime(): number;
    function N_0xe599a503b3837e1b(): number;
    function GetBestPedWeapon(ped: number, p1: boolean): number;
    function GetBinkMovieTime(binkMovie: number): number;
    function GetBitsInRange(_var: number, rangeStart: number, rangeEnd: number): number;
    function GetBlipAlpha(blip: number): number;
    function GetBlipColour(blip: number): number;
    function GetBlipCoords(blip: number): Vector3;
    function GetBlipFromEntity(entity: number): number;
    function GetBlipHudColour(blip: number): number;
    function GetBlipInfoIdCoord(blip: number): Vector3;
    function GetBlipInfoIdDisplay(blip: number): number;
    function GetBlipInfoIdEntityIndex(blip: number): number;
    function GetBlipInfoIdPickupIndex(blip: number): number;
    function GetBlipInfoIdType(blip: number): number;
    function GetBlipRotation(blip: number): number;
    function N_0x003e92ba477f9d7f(blip: number): number;
    function GetBlipSprite(blip: number): number;
    function GetBoatBoomPositionRatio(vehicle: number): number;
    function N_0x6636c535f6cc2725(vehicle: number): number;
    function GetBoatBoomPositionRatio_2(vehicle: number, p1: boolean): void;
    function N_0xc1f981a6f74f0c23(vehicle: number, p1: boolean): void;
    function GetBoatBoomPositionRatio_3(vehicle: number, p1: boolean): void;
    function N_0x0f3b4d4e43177236(vehicle: number, p1: boolean): void;
    function GetBoatVehicleModelAgility(modelHash: number): number;
    function N_0x5aa3f878a178c4fc(modelHash: number): number;
    function GetVehicleModelMoveResistance(modelHash: number): number;
    function GetCalmingQuadAtCoords(x: number, y: number): number;
    function GetCalmingQuadBounds(waterQuad: number): LuaMultiReturn<[boolean, number, number, number, number]>;
    function GetCalmingQuadCount(): number;
    function GetCalmingQuadDampening(
        waterQuad: number,
        calmingQuadDampening: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetCamActiveViewModeContext(): number;
    function N_0x19cafa3c87f7c2ff(): number;
    function GetCamAnimCurrentPhase(cam: number): number;
    function GetCamCoord(cam: number): Vector3;
    function GetCamDofStrength(cam: number): number;
    function GetCamFarClip(cam: number): number;
    function GetCamFarDof(cam: number): number;
    function GetCamFov(cam: number): number;
    function GetCamMatrix(camera: number): LuaMultiReturn<[number, Vector3, Vector3, Vector3]>;
    function GetCamNearClip(cam: number): number;
    function GetCamNearDof(cam: number): number;
    function GetCamRot(cam: number, rotationOrder: number): Vector3;
    function GetCamSplineNodeIndex(cam: number): number;
    function GetCamSplineNodePhase(cam: number): number;
    function GetCamSplinePhase(cam: number): number;
    function GetCamViewModeForContext(context: number): number;
    function N_0xee778f8c7e1142e2(context: number): number;
    function GetCanVehicleJump(vehicle: number): boolean;
    function HasVehicleJumpingAbility(vehicle: number): boolean;
    function DoesVehicleHaveJumpingAbility(vehicle: number): boolean;
    function GetCargobobHookPosition(cargobob: number): Vector3;
    function N_0xcbdb9b923cacc92d(cargobob: number): Vector3;
    function GetCauseOfMostRecentForceCleanup(): number;
    function GetCgoffset(entity: number): Vector3;
    function GetClipSetForScriptedGunTask(p0: number): string;
    function GetClockDayOfMonth(): number;
    function GetClockDayOfWeek(): number;
    function GetClockHours(): number;
    function GetClockMinutes(): number;
    function GetClockMonth(): number;
    function GetClockSeconds(): number;
    function GetClockYear(): number;
    function GetClosestBlipOfType(blipSprite: number): number;
    function N_0xd484bf71050ca1ee(blipSprite: number): number;
    function GetClosestFirePos(x: number, y: number, z: number): LuaMultiReturn<[boolean, Vector3]>;
    function GetClosestMajorVehicleNode(
        x: number,
        y: number,
        z: number,
        unknown1: number,
        unknown2: number
    ): LuaMultiReturn<[boolean, Vector3]>;
    function GetClosestObjectOfType(
        x: number,
        y: number,
        z: number,
        radius: number,
        modelHash: number,
        isMission: boolean,
        p6: boolean,
        p7: boolean
    ): number;
    function GetClosestPed(
        x: number,
        y: number,
        z: number,
        radius: number,
        p4: boolean,
        p5: boolean,
        p7: boolean,
        p8: boolean,
        pedType: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetClosestRoad(
        x: number,
        y: number,
        z: number,
        p3: number,
        p4: number,
        p10: boolean
    ): LuaMultiReturn<[number, number, Vector3, number, number, number]>;
    function GetClosestVehicle(
        x: number,
        y: number,
        z: number,
        radius: number,
        modelHash: number,
        flags: number
    ): number;
    function GetClosestVehicleNode(
        x: number,
        y: number,
        z: number,
        nodeType: number,
        p5: number,
        p6: number
    ): LuaMultiReturn<[boolean, Vector3]>;
    function GetClosestVehicleNodeWithHeading(
        x: number,
        y: number,
        z: number,
        nodeType: number,
        p6: number,
        p7: number
    ): LuaMultiReturn<[boolean, number, number]>;
    function GetCloudHatOpacity(): number;
    function N_0x20ac25e781ae4a84(): number;
    function GetCloudTimeAsInt(): number;
    function N_0x9a73240b49945c76(): number;
    function GetCloudTimeAsString(): string;
    function N_0xf12e6cd06c73d69e(): string;
    function GetCollisionNormalOfLastHitForEntity(entity: number): Vector3;
    function GetCombatFloat(ped: number, p1: number): number;
    function GetCommerceItemCat(index: number, index2: number): string;
    function N_0x6f44cbf56d79fac0(index: number, index2: number): string;
    function GetCommerceItemId(index: number): string;
    function N_0x662635855957c411(index: number): string;
    function GetCommerceItemName(index: number): string;
    function N_0xb4271092ca7edf48(index: number): string;
    function GetCommerceItemNumCats(index: number): number;
    function N_0x2a7776c709904ab0(index: number): number;
    function GetCommerceItemTexturename(index: number): string;
    function N_0x722f5d28b61c5ea8(index: number): string;
    function GetCommerceProductPrice(index: number): string;
    function N_0xca94551b50b4932c(index: number): string;
    function GetControlGroupInstructionalButton(padIndex: number, controlGroup: number, p2: boolean): string;
    function N_0x80c2fd58d720c801(padIndex: number, controlGroup: number, p2: boolean): string;
    function GetControlInstructionalButton(padIndex: number, control: number, p2: boolean): string;
    function N_0x0499d7b09fc9b407(padIndex: number, control: number, p2: boolean): string;
    function GetControlNormal(padIndex: number, control: number): number;
    function GetControlUnboundNormal(padIndex: number, control: number): number;
    function N_0x5b84d09cec5209c5(padIndex: number, control: number): number;
    function GetControlValue(padIndex: number, control: number): number;
    function GetConvar(varName: string, default_: string): string;
    function GetConvarInt(varName: string, default_: number): number;
    function GetConvertibleRoofState(vehicle: number): number;
    function GetCoordsAndRotationOfClosestObjectOfType(
        x: number,
        y: number,
        z: number,
        radius: number,
        modelHash: number,
        rotationOrder: number
    ): LuaMultiReturn<[number, number, Vector3]>;
    function N_0x163f8b586bc95f2a(
        x: number,
        y: number,
        z: number,
        radius: number,
        modelHash: number,
        rotationOrder: number
    ): LuaMultiReturn<[number, number, Vector3]>;
    function GetCoordsOfProjectileTypeInArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        projectileHash: number,
        ownedByPlayer: boolean
    ): LuaMultiReturn<[boolean, Vector3]>;
    function N_0x8d7a43ec6a5fea45(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        projectileHash: number,
        ownedByPlayer: boolean
    ): LuaMultiReturn<[boolean, Vector3]>;
    function GetIsProjectileTypeInArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        projectileHash: number,
        ownedByPlayer: boolean
    ): LuaMultiReturn<[boolean, Vector3]>;
    function GetCoordsOfProjectileTypeWithinDistance(
        ped: number,
        weaponHash: number,
        distance: number,
        ownedByPlayer: boolean
    ): LuaMultiReturn<[boolean, Vector3]>;
    function N_0xdfb4138eefed7b81(
        ped: number,
        weaponHash: number,
        distance: number,
        ownedByPlayer: boolean
    ): LuaMultiReturn<[boolean, Vector3]>;
    function GetProjectileNearPedCoords(
        ped: number,
        weaponHash: number,
        distance: number,
        ownedByPlayer: boolean
    ): LuaMultiReturn<[boolean, Vector3]>;
    function GetCurrentFrontendMenuVersion(): number;
    function N_0x2309595ad6145265(): number;
    function GetCurrentFrontendMenu(): number;
    function GetCurrentGameName(): string;
    function GetCurrentLanguage(): number;
    function GetUiLanguageId(): number;
    function GetCurrentLanguageId(): number;
    function GetCurrentNumberOfCloudPhotos(): number;
    function N_0x473151ebc762c6da(): number;
    function GetNumberOfPhotos(): number;
    function GetCurrentNumberOfPhotos(): number;
    function GetCurrentPedVehicleWeapon(ped: number, weaponHash: number): LuaMultiReturn<[boolean, number]>;
    function GetCurrentPedWeapon(ped: number, p2: boolean): LuaMultiReturn<[boolean, number]>;
    function GetCurrentPedWeaponEntityIndex(ped: number): number;
    function GetCurrentPlaybackForVehicle(vehicle: number): number;
    function GetCurrentRadioTrackName(radioStationName: string): number;
    function N_0x34d66bc058019ce0(radioStationName: string): number;
    function GetCurrentRadioTrackPlaybackTime(radioStationName: string): number;
    function N_0x3e65cde5215832c1(radioStationName: string): number;
    function GetCurrentRadioStationHash(radioStationName: string): number;
    function GetCurrentResourceName(): string;
    function GetCurrentScriptedConversationLine(): number;
    function GetCurrentServerEndpoint(): string;
    function GetCurrentWebpageId(): number;
    function N_0x01a358d9128b7a86(): number;
    function GetActiveWebsiteId(): number;
    function GetCurrentWebsiteId(): number;
    function GetCutFileNumSections(cutsceneName: string): number;
    function N_0x0abc54de641dc0fc(cutsceneName: string): number;
    function GetCutsceneEndTime(): number;
    function N_0x971d7b15bcdbef99(): number;
    function GetCutsceneSectionPlaying(): number;
    function GetCutsceneTime(): number;
    function GetCutsceneTotalDuration(): number;
    function GetDeadPedPickupCoords(ped: number, p1: number, p2: number): Vector3;
    function GetDebugCamera(): number;
    function N_0x77c3cec46be286f6(): number;
    function GetDecalWashLevel(decal: number): number;
    function GetDeepOceanScaler(): number;
    function N_0x2b2a2cc86778b619(): number;
    function GetWavesIntensity(): number;
    function GetCurrentIntensity(): number;
    function GetDefaultScriptRendertargetRenderId(): number;
    function GetDisabledControlNormal(padIndex: number, control: number): number;
    function GetDisabledControlUnboundNormal(padIndex: number, control: number): number;
    function N_0x4f8a26a890fd62fb(padIndex: number, control: number): number;
    function GetDisplayNameFromVehicleModel(modelHash: number): string;
    function GetDistanceBetweenCoords(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        useZ: boolean
    ): number;
    function GetDlcVehicleData(dlcVehicleIndex: number, outData: number): LuaMultiReturn<[boolean, number]>;
    function GetDlcVehicleFlags(dlcVehicleIndex: number): number;
    function GetDlcVehicleModLockHash(hash: number): number;
    function N_0xc098810437312fff(hash: number): number;
    function GetDlcVehicleModel(dlcVehicleIndex: number): number;
    function GetDlcWeaponComponentData(
        dlcWeaponIndex: number,
        dlcWeapCompIndex: number,
        ComponentDataPtr: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetDlcWeaponComponentDataSp(
        dlcWeaponIndex: number,
        dlcWeapCompIndex: number,
        ComponentDataPtr: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetDlcWeaponData(dlcWeaponIndex: number, outData: number): LuaMultiReturn<[boolean, number]>;
    function GetDlcWeaponDataSp(dlcWeaponIndex: number, outData: number): LuaMultiReturn<[boolean, number]>;
    function GetDoesVehicleHaveTombstone(vehicle: number): boolean;
    function GetDriftTyresEnabled(vehicle: number): boolean;
    function GetDuiHandle(duiObject: number): string;
    function GetEntityAlpha(entity: number): number;
    function GetEntityAnimCurrentTime(entity: number, animDict: string, animName: string): number;
    function GetEntityAnimTotalTime(entity: number, animDict: string, animName: string): number;
    function GetEntityArchetypeName(entity: number): string;
    function GetEntityAttachedTo(entity: number): number;
    function GetEntityAttachedToCargobob(vehicle: number): number;
    function N_0x99093f60746708ca(vehicle: number): number;
    function GetEntityAttachedToTowTruck(towTruck: number): number;
    function GetEntityBoneCount(entity: number): number;
    function N_0xb328dcc3a3aa401b(entity: number): number;
    function GetEntityBoneIndexByName(entity: number, boneName: string): number;
    function GetEntityBonePosition_2(entity: number, boneIndex: number): Vector3;
    function N_0x46f8696933a63c9b(entity: number, boneIndex: number): Vector3;
    function GetWorldPositionOfEntityBone_2(entity: number, boneIndex: number): Vector3;
    function GetEntityBoneRotation(entity: number, boneIndex: number): Vector3;
    function N_0xce6294a232d03786(entity: number, boneIndex: number): Vector3;
    function GetWorldRotationOfEntityBone(entity: number, boneIndex: number): Vector3;
    function GetEntityBoneRotationLocal(entity: number, boneIndex: number): Vector3;
    function GetEntityCanBeDamaged(entity: number): boolean;
    function N_0xd95cc5d2ab15a09f(entity: number): boolean;
    function GetEntityCollisionDisabled(entity: number): boolean;
    function N_0xccf1e97befdae480(entity: number): boolean;
    function GetEntityCollisonDisabled(entity: number): boolean;
    function GetEntityCoords(entity: number, alive: boolean): Vector3;
    function GetEntityForwardVector(entity: number): Vector3;
    function GetEntityForwardX(entity: number): number;
    function GetEntityForwardY(entity: number): number;
    function GetEntityFromStateBagName(bagName: string): number;
    function GetEntityHeading(entity: number): number;
    function GetEntityHealth(entity: number): number;
    function GetEntityHeight(
        entity: number,
        X: number,
        Y: number,
        Z: number,
        atTop: boolean,
        inWorldCoords: boolean
    ): number;
    function GetEntityHeightAboveGround(entity: number): number;
    function GetEntityIndexFromMapdata(mapdata: number, entity: number): number;
    function GetEntityIndexOfCutsceneEntity(cutsceneEntName: string, modelHash: number): number;
    function GetEntityIndexOfRegisteredEntity(cutsceneEntName: string, modelHash: number): number;
    function GetEntityInsideExplosionArea(
        explosionType: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        radius: number
    ): number;
    function GetPedInsideExplosionArea(
        explosionType: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        radius: number
    ): number;
    function GetEntityInsideExplosionSphere(
        explosionType: number,
        x: number,
        y: number,
        z: number,
        radius: number
    ): number;
    function GetEntityLodDist(entity: number): number;
    function GetEntityMapdataOwner(entity: number): LuaMultiReturn<[boolean, number, number]>;
    function GetEntityMatrix(entity: number): LuaMultiReturn<[number, Vector3, Vector3, Vector3]>;
    function GetEntityMaxHealth(entity: number): number;
    function GetEntityModel(entity: number): number;
    function GetEntityPhysicsHeading(entity: number): number;
    function N_0x846bf6291198a71e(entity: number): number;
    function GetEntityPickup(entity: number, modelHash: number): number;
    function GetEntityPitch(entity: number): number;
    function GetEntityPlayerIsFreeAimingAt(player: number, entity: number): LuaMultiReturn<[boolean, number]>;
    function GetEntityPopulationType(entity: number): number;
    function GetEntityProofs(
        entity: number
    ): LuaMultiReturn<[boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean]>;
    function GetEntityQuaternion(entity: number): LuaMultiReturn<[number, number, number, number]>;
    function GetEntityRoll(entity: number): number;
    function GetEntityRotation(entity: number, rotationOrder: number): Vector3;
    function GetEntityRotationVelocity(entity: number): Vector3;
    function GetEntityScript(entity: number, script: number): LuaMultiReturn<[string, number]>;
    function GetEntitySpeed(entity: number): number;
    function GetEntitySpeedVector(entity: number, relative: boolean): Vector3;
    function GetEntitySubmergedLevel(entity: number): number;
    function GetEntityType(entity: number): number;
    function GetEntityUprightValue(entity: number): number;
    function GetEntityVelocity(entity: number): Vector3;
    function GetEntryPositionOfDoor(vehicle: number, doorIndex: number): Vector3;
    function GetEventAtIndex(eventGroup: number, eventIndex: number): number;
    function GetEventData(
        eventGroup: number,
        eventIndex: number,
        eventDataSize: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetEventExists(eventGroup: number, eventIndex: number): boolean;
    function GetExternalKvpFloat(resource: string, key: string): number;
    function GetExternalKvpInt(resource: string, key: string): number;
    function GetExternalKvpString(resource: string, key: string): string;
    function GetExtraContentPackHasBeenInstalled(): boolean;
    function N_0x8d30f648014a92b5(): boolean;
    function GetExtraTimecycleModifierIndex(): number;
    function N_0xbb0527ec6341496d(): number;
    function GetFakeWantedLevel(): number;
    function N_0x4c9296cbcd1b971e(): number;
    function GetFinalRenderedCamCoord(): Vector3;
    function GetGameplayCamCoords(): Vector3;
    function GetFinalRenderedCamFarClip(): number;
    function N_0xdfc8cbc606fdb0fc(): number;
    function GetGameplayCamFarClip(): number;
    function GetFinalRenderedCamFarDof(): number;
    function N_0x9780f32bcaf72431(): number;
    function GetGameplayCamFarDof(): number;
    function GetFinalRenderedCamFov(): number;
    function N_0x80ec114669daeff4(): number;
    function GetFinalRenderedCamMotionBlurStrength(): number;
    function N_0x162f9d995753dc19(): number;
    function GetGameplayCamFarClip_2(): number;
    function GetFinalRenderedCamNearClip(): number;
    function N_0xd0082607100d7193(): number;
    function GetGameplayCamNearClip(): number;
    function GetFinalRenderedCamNearDof(): number;
    function N_0xa03502fc581f7d9b(): number;
    function GetGameplayCamNearDof(): number;
    function GetFinalRenderedCamRot(rotationOrder: number): Vector3;
    function GetGameplayCamRot_2(rotationOrder: number): Vector3;
    function GetFinalRenderedInWhenFriendlyFov(player: number): number;
    function N_0x5f35f6732c3fbba0(player: number): number;
    function GetFinalRenderedInWhenFriendlyRot(player: number, rotationOrder: number): Vector3;
    function N_0x26903d9cd1175f2c(player: number, rotationOrder: number): Vector3;
    function GetFirstBlipInfoId(blipSprite: number): number;
    function GetFirstPersonAimCamZoomFactor(): number;
    function GetGameplayCamZoom(): number;
    function GetFocusPedOnScreen(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): number;
    function N_0x89215ec747df244a(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): number;
    function GetFollowPedCamViewMode(): number;
    function GetFollowPedCamZoomLevel(): number;
    function GetFollowVehicleCamViewMode(): number;
    function GetFollowVehicleCamZoomLevel(): number;
    function GetForcedComponent(
        componentHash: number,
        forcedComponentIndex: number
    ): LuaMultiReturn<[number, number, number]>;
    function GetForcedProp(componentHash: number, forcedPropIndex: number): LuaMultiReturn<[number, number, number]>;
    function N_0xe1ca84ebf72e691d(
        componentHash: number,
        forcedPropIndex: number
    ): LuaMultiReturn<[number, number, number]>;
    function GetFrameCount(): number;
    function GetFrameTime(): number;
    function GetGameBuildNumber(): number;
    function GetGameName(): string;
    function GetGamePool(poolName: string): any;
    function GetGameTimer(): number;
    function GetGameplayCamCoord(): Vector3;
    function GetGameplayCamFov(): number;
    function GetGameplayCamRelativeHeading(): number;
    function GetGameplayCamRelativePitch(): number;
    function GetGameplayCamRot(rotationOrder: number): Vector3;
    function GetGlobalActionscriptFlag(flagIndex: number): number;
    function N_0xe3b05614dce1d014(flagIndex: number): number;
    function GetGlobalCharBuffer(): string;
    function N_0x24da7d7667fd7b09(): string;
    function GetGlobalWaterType(): number;
    function GetGpsBlipRouteFound(): boolean;
    function N_0x869daacbbe9fa006(): boolean;
    function GetGpsBlipRouteLength(): number;
    function N_0xbbb45c3cf5c8aa85(): number;
    function GetGpsWaypointRouteEnd(p1: boolean, p2: number, p3: number): LuaMultiReturn<[boolean, Vector3]>;
    function N_0xf3162836c28f9da5(p1: boolean, p2: number, p3: number): LuaMultiReturn<[boolean, Vector3]>;
    function GetGroundZAndNormalFor_3dCoord(
        x: number,
        y: number,
        z: number
    ): LuaMultiReturn<[boolean, number, Vector3]>;
    function N_0x8bdc7bfc57a81e76(x: number, y: number, z: number): LuaMultiReturn<[boolean, number, Vector3]>;
    function GetGroundZCoordWithOffsets(x: number, y: number, z: number): LuaMultiReturn<[boolean, number, Vector3]>;
    function GetGroundZFor_3dCoord(
        x: number,
        y: number,
        z: number,
        ignoreWater: boolean
    ): LuaMultiReturn<[boolean, number]>;
    function GetGroundZFor_3dCoord_2(x: number, y: number, z: number, p4: boolean): LuaMultiReturn<[boolean, number]>;
    function N_0x9e82f0f362881b29(x: number, y: number, z: number, p4: boolean): LuaMultiReturn<[boolean, number]>;
    function GetGroupSize(groupID: number): LuaMultiReturn<[number, number]>;
    function GetHasObjectFragInst(object: number): boolean;
    function N_0x0c112765300c7e1e(object: number): boolean;
    function DoesEntityHaveFragInst(object: number): boolean;
    function GetHasRetractableWheels(vehicle: number): boolean;
    function GetHasLowerableWheels(vehicle: number): boolean;
    function DoesVehicleHaveRetractableWheels(vehicle: number): boolean;
    function GetHasRocketBoost(vehicle: number): boolean;
    function HasVehicleRocketBoost(vehicle: number): boolean;
    function DoesVehicleHaveRocketBoost(vehicle: number): boolean;
    function GetHashKey(_string: string): number;
    function GetHashNameForComponent(
        entity: number,
        componentId: number,
        drawableVariant: number,
        textureVariant: number
    ): number;
    function GetHashNameForProp(
        entity: number,
        componentId: number,
        propIndex: number,
        propTextureIndex: number
    ): number;
    function GetHashOfMapAreaAtCoords(x: number, y: number, z: number): number;
    function GetHashOfThisScriptName(): number;
    function GetThisScriptHash(): number;
    function GetHeadingFromVector_2d(dx: number, dy: number): number;
    function GetHeightmapBottomZForArea(x1: number, y1: number, x2: number, y2: number): number;
    function N_0x3599d741c9ac6310(x1: number, y1: number, x2: number, y2: number): number;
    function GetHeightmapBottomZForPosition(x: number, y: number): number;
    function N_0x336511a34f2e5185(x: number, y: number): number;
    function GetHeightmapTopZForArea(x1: number, y1: number, x2: number, y2: number): number;
    function N_0x8abe8608576d9ce3(x1: number, y1: number, x2: number, y2: number): number;
    function GetHeightmapTopZForPosition(x: number, y: number): number;
    function N_0x29c24bfbed8ab8fb(x: number, y: number): number;
    function GetHeliMainRotorHealth(vehicle: number): number;
    function GetHeliTailBoomHealth(vehicle: number): number;
    function GetHeliEngineHealth(vehicle: number): number;
    function GetHeliTailRotorHealth(vehicle: number): number;
    function GetHudColour(hudColorIndex: number): LuaMultiReturn<[number, number, number, number]>;
    function GetHudComponentAlign(id: number): LuaMultiReturn<[number, number]>;
    function GetHudComponentName(id: number): string;
    function GetHudComponentPosition(id: number): Vector3;
    function GetHudComponentSize(id: number): Vector3;
    function GetHudScreenPositionFromWorldPosition(
        worldX: number,
        worldY: number,
        worldZ: number
    ): LuaMultiReturn<[boolean, number, number]>;
    function N_0xf9904d11f1acbec3(
        worldX: number,
        worldY: number,
        worldZ: number
    ): LuaMultiReturn<[boolean, number, number]>;
    function Get_2dCoordFrom_3dCoord(
        worldX: number,
        worldY: number,
        worldZ: number
    ): LuaMultiReturn<[boolean, number, number]>;
    function GetHydraulicWheelValue(vehicle: number, wheelId: number): number;
    function GetIdOfThisThread(): number;
    function GetIdealPlayerSwitchType(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    function GetIndexOfCurrentLevel(): number;
    function GetIndexedItemInItemset(p0: number, p1: number): number;
    function GetInstanceId(): number;
    function GetInteriorAtCoords(x: number, y: number, z: number): number;
    function GetInteriorAtCoordsWithType(x: number, y: number, z: number, interiorType: string): number;
    function N_0x05b7a89bd78797fc(x: number, y: number, z: number, interiorType: string): number;
    function GetInteriorAtCoordsWithTypehash(x: number, y: number, z: number, typeHash: number): number;
    function N_0xf0f77adb9f67e79d(x: number, y: number, z: number, typeHash: number): number;
    function UnkGetInteriorAtCoords(x: number, y: number, z: number, typeHash: number): number;
    function GetInteriorEntitiesExtents(
        interiorId: number
    ): LuaMultiReturn<[number, number, number, number, number, number]>;
    function GetInteriorFromCollision(x: number, y: number, z: number): number;
    function GetInteriorFromEntity(entity: number): number;
    function GetInteriorFromPrimaryView(): number;
    function N_0xe7d267ec6ca966c3(): number;
    function GetInteriorFromGameplayCam(): number;
    function GetInteriorGroupId(interior: number): number;
    function GetInteriorHeading(interior: number): number;
    function GetInteriorLocationAndNamehash(interior: number): LuaMultiReturn<[number, number]>;
    function N_0x252bdc06b73fa6ea(interior: number): LuaMultiReturn<[number, number]>;
    function GetInteriorInfo(interior: number): LuaMultiReturn<[number, number]>;
    function GetInteriorPortalCornerPosition(
        interiorId: number,
        portalIndex: number,
        cornerIndex: number
    ): LuaMultiReturn<[number, number, number]>;
    function GetInteriorPortalCount(interiorId: number): number;
    function GetInteriorPortalEntityArchetype(interiorId: number, portalIndex: number, entityIndex: number): number;
    function GetInteriorPortalEntityCount(interiorId: number, portalIndex: number): number;
    function GetInteriorPortalEntityFlag(interiorId: number, portalIndex: number, entityIndex: number): number;
    function GetInteriorPortalEntityPosition(
        interiorId: number,
        portalIndex: number,
        entityIndex: number
    ): LuaMultiReturn<[number, number, number]>;
    function GetInteriorPortalEntityRotation(
        interiorId: number,
        portalIndex: number,
        entityIndex: number
    ): LuaMultiReturn<[number, number, number, number]>;
    function GetInteriorPortalFlag(interiorId: number, portalIndex: number): number;
    function GetInteriorPortalRoomFrom(interiorId: number, portalIndex: number): number;
    function GetInteriorPortalRoomTo(interiorId: number, portalIndex: number): number;
    function GetInteriorPosition(interiorId: number): LuaMultiReturn<[number, number, number]>;
    function GetInteriorRoomCount(interiorId: number): number;
    function GetInteriorRoomExtents(
        interiorId: number,
        roomIndex: number
    ): LuaMultiReturn<[number, number, number, number, number, number]>;
    function GetInteriorRoomFlag(interiorId: number, roomIndex: number): number;
    function GetInteriorRoomIndexByHash(interiorId: number, roomHash: number): number;
    function GetInteriorRoomName(interiorId: number, roomIndex: number): string;
    function GetInteriorRoomTimecycle(interiorId: number, roomIndex: number): number;
    function GetInteriorRotation(interiorId: number): LuaMultiReturn<[number, number, number, number]>;
    function GetInvokingResource(): string;
    function GetIsArenaPropPhysicsDisabled(entity: number, p1: number): boolean;
    function N_0x43c677f1e1158005(entity: number, p1: number): boolean;
    function GetIsAutoSaveOff(): boolean;
    function N_0x6e04f06094c87047(): boolean;
    function GetIsBoatCapsized(vehicle: number): boolean;
    function N_0xba91d045575699ad(vehicle: number): boolean;
    function GetIsDoorValid(vehicle: number, doorIndex: number): boolean;
    function DoesVehicleHaveDoor(vehicle: number, doorIndex: number): boolean;
    function GetIsHidef(): boolean;
    function GetIsLeftVehicleHeadlightDamaged(vehicle: number): boolean;
    function IsHeadlightLBroken(vehicle: number): boolean;
    function GetIsLoadingScreenActive(): boolean;
    function GetIsPedGadgetEquipped(ped: number, gadgetHash: number): boolean;
    function GetIsPetrolDecalInRange(xCoord: number, yCoord: number, zCoord: number, radius: number): boolean;
    function N_0x2f09f7976c512404(xCoord: number, yCoord: number, zCoord: number, radius: number): boolean;
    function GetIsPlayerInAnimalForm(): boolean;
    function N_0x9689123e3f213aa5(): boolean;
    function GetIsPreloadedConversationReady(): boolean;
    function N_0xe73364db90778ffa(): boolean;
    function GetIsRightVehicleHeadlightDamaged(vehicle: number): boolean;
    function IsHeadlightRBroken(vehicle: number): boolean;
    function GetIsTaskActive(ped: number, taskIndex: number): boolean;
    function GetIsUsingAlternateDriveby(): boolean;
    function N_0x0f70731baccfbb96(): boolean;
    function GetIsVehicleEmpDisabled(vehicle: number): boolean;
    function GetIsVehicleEngineRunning(vehicle: number): boolean;
    function IsVehicleEngineOn(vehicle: number): boolean;
    function GetIsVehiclePrimaryColourCustom(vehicle: number): boolean;
    function GetIsVehicleSecondaryColourCustom(vehicle: number): boolean;
    function GetIsVehicleShuntBoostActive(vehicle: number): boolean;
    function GetIsWaypointRecordingLoaded(name: string): boolean;
    function GetIsWheelsLoweredStateActive(vehicle: number): boolean;
    function N_0x1da0da9cb3f0c8bf(vehicle: number): boolean;
    function GetIsWidescreen(): boolean;
    function GetItemsetSize(x: number): number;
    function GetJackTarget(ped: number): number;
    function GetKeyForEntityInRoom(entity: number): number;
    function GetLabelText(labelName: string): string;
    function GetLandingGearState(vehicle: number): number;
    function GetVehicleLandingGear(vehicle: number): number;
    function GetLastDrivenVehicle(): number;
    function N_0xb2d06faede65b577(): number;
    function GetLastMaterialHitByEntity(entity: number): number;
    function GetLastPedInVehicleSeat(vehicle: number, seatIndex: number): number;
    function GetLastRammedVehicle(vehicle: number): number;
    function GetLengthOfLiteralString(_string: string): number;
    function GetLengthOfLiteralStringInBytes(_string: string): number;
    function N_0x43e4111189e54f0e(_string: string): number;
    function GetLengthOfString(_string: string): number;
    function GetLengthOfStringWithThisTextLabel(gxt: string): number;
    function GetLiveryName(vehicle: number, liveryIndex: number): string;
    function GetLocalPlayerAimState(): number;
    function GetLocalPlayerAimState_2(): number;
    function N_0x59b9a7af4c95133c(): number;
    function GetLocalTime(): LuaMultiReturn<[number, number, number, number, number, number]>;
    function GetLockonDistanceOfCurrentPedWeapon(ped: number): number;
    function N_0x840f03e9041e2c9c(ped: number): number;
    function GetLockonRangeOfCurrentPedWeapon(ped: number): number;
    function GetLodscale(): number;
    function N_0x0c15b0e443b2349d(): number;
    function GetMainPlayerBlipId(): number;
    function GetMakeNameFromVehicleModel(modelHash: number): string;
    function GetMapZoomDataLevel(index: number): LuaMultiReturn<[boolean, number, number, number, number, number]>;
    function GetMapdataEntityHandle(
        mapDataHash: number,
        entityInternalIdx: number,
        entityHandle: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetMapdataEntityMatrix(mapDataHash: number, entityInternalIdx: number, matrixPtr: number): boolean;
    function GetMapdataFromHashKey(mapdataHandle: number): number;
    function GetMaxAmmo(ped: number, weaponHash: number, ammo: number): LuaMultiReturn<[boolean, number]>;
    function GetMaxAmmoByType(ped: number, ammoType: number, ammo: number): LuaMultiReturn<[boolean, number]>;
    function N_0x585847c5e4e11709(ped: number, ammoType: number, ammo: number): LuaMultiReturn<[boolean, number]>;
    function GetMaxAmmo_2(ped: number, ammoType: number, ammo: number): LuaMultiReturn<[boolean, number]>;
    function GetMaxAmmoInClip(ped: number, weaponHash: number, p2: boolean): number;
    function GetMaxNumNetworkObjects(): number;
    function N_0xc7be335216b5ec7c(): number;
    function GetMaxNumNetworkPeds(): number;
    function N_0x0c1f7d49c39d2289(): number;
    function GetMaxNumNetworkPickups(): number;
    function N_0xa72835064dd63e4c(): number;
    function GetMaxNumNetworkVehicles(): number;
    function N_0x0afce529f69b21ff(): number;
    function GetMaxRangeOfCurrentPedWeapon(ped: number): number;
    function GetMaxWantedLevel(): number;
    function GetMaximumNumberOfCloudPhotos(): number;
    function N_0xdc54a7af8b3a14ef(): number;
    function GetMaximumNumberOfPhotos_2(): number;
    function GetMaximumNumberOfPhotos(): number;
    function GetMeleeTargetForPed(ped: number): number;
    function GetMenuPedBoolStat(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0x052991e59076e4e4(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function GetMenuPedFloatStat(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0x5fbd7095fe7ae57f(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function GetMenuPedIntStat(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function SetUseridsUihidden(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0xef4ced81cebedc6d(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function GetMenuPedMaskedIntStat(p0: number, p2: number, p3: number): LuaMultiReturn<[boolean, number]>;
    function N_0x90a6526cf0381030(p0: number, p2: number, p3: number): LuaMultiReturn<[boolean, number]>;
    function GetMillisecondsPerGameMinute(): number;
    function GetMinimapFowCoordinateIsRevealed(x: number, y: number, z: number): boolean;
    function N_0x6e31b91145873922(x: number, y: number, z: number): boolean;
    function IsMinimapAreaRevealed(x: number, y: number, z: number): boolean;
    function GetMinimapFowDiscoveryRatio(): number;
    function N_0xe0130b41d3cf4574(): number;
    function GetMinimapRevealPercentage(): number;
    function GetMissionFlag(): boolean;
    function GetMobilePhonePosition(): Vector3;
    function GetMobilePhoneRenderId(renderId: number): void;
    function GetMobilePhoneRotation(p1: number): Vector3;
    function GetModSlotName(vehicle: number, modType: number): string;
    function GetModTextLabel(vehicle: number, modType: number, modValue: number): string;
    function GetModelDimensions(modelHash: number): LuaMultiReturn<[number, Vector3]>;
    function GetMount(ped: number): number;
    function GetMusicPlaytime(): number;
    function GetNameOfThread(threadId: number): string;
    function GetThreadName(threadId: number): string;
    function GetNameOfZone(x: number, y: number, z: number): string;
    function GetNamedRendertargetRenderId(name: string): number;
    function GetNavmeshRouteDistanceRemaining(ped: number): LuaMultiReturn<[number, number, boolean]>;
    function GetNavmeshRouteResult(ped: number): number;
    function GetNearestPlayerToEntity(entity: number): number;
    function GetNearestPlayerToEntityOnTeam(entity: number, team: number): number;
    function GetNetworkIdFromSoundId(soundId: number): number;
    function GetNetworkTime(): number;
    function GetNetworkTimeAccurate(): number;
    function N_0x89023fbbf9200e9f(): number;
    function GetNewSelectedMissionCreatorBlip(): number;
    function DisableBlipNameForVar(): number;
    function N_0x5c90988e7c8e1af4(): number;
    function GetNextBlipInfoId(blipSprite: number): number;
    function GetNextGpsDisabledZoneIndex(index: number): number;
    function N_0xd3a6a0ef48823a8c(index: number): number;
    function GetNextWeatherTypeHashName(): number;
    function GetNextWeatherType(): number;
    function GetNgstatBoolHash(
        index: number,
        spStat: boolean,
        charStat: boolean,
        character: number,
        section: string
    ): number;
    function N_0xba52ff538ed2bc71(
        index: number,
        spStat: boolean,
        charStat: boolean,
        character: number,
        section: string
    ): number;
    function GetNgstatIntHash(
        index: number,
        spStat: boolean,
        charStat: boolean,
        character: number,
        section: string
    ): number;
    function N_0x2b4cdca6f07ff3da(
        index: number,
        spStat: boolean,
        charStat: boolean,
        character: number,
        section: string
    ): number;
    function GetNoLoadingScreen(): boolean;
    function GetNorthRadarBlip(): number;
    function N_0x3f0cf9cb7e589b88(): number;
    function GetNthClosestVehicleNode(
        x: number,
        y: number,
        z: number,
        nthClosest: number,
        unknown1: number,
        unknown2: number,
        unknown3: number
    ): LuaMultiReturn<[boolean, Vector3]>;
    function GetNthClosestVehicleNodeFavourDirection(
        x: number,
        y: number,
        z: number,
        desiredX: number,
        desiredY: number,
        desiredZ: number,
        nthClosest: number,
        nodetype: number,
        p10: number,
        p11: number
    ): LuaMultiReturn<[boolean, number, number]>;
    function GetNthClosestVehicleNodeId(
        x: number,
        y: number,
        z: number,
        nth: number,
        nodetype: number,
        p5: number,
        p6: number
    ): number;
    function GetNthClosestVehicleNodeIdWithHeading(
        x: number,
        y: number,
        z: number,
        nthClosest: number,
        p6: number,
        p7: number,
        p8: number
    ): LuaMultiReturn<[number, number, number]>;
    function GetNthClosestVehicleNodeWithHeading(
        x: number,
        y: number,
        z: number,
        nthClosest: number,
        unknown2: number,
        unknown3: number,
        unknown4: number
    ): LuaMultiReturn<[boolean, number, number, number]>;
    function GetNuiCursorPosition(): LuaMultiReturn<[number, number]>;
    function GetNumCommerceItems(): number;
    function N_0xf2eac213d5ea0623(): number;
    function GetNumCreatedMissionObjects(p0: boolean): number;
    function N_0x12b6281b6c6706c0(p0: boolean): number;
    function GetNumCreatedMissionPeds(p0: boolean): number;
    function N_0xcb215c4b56a7fae7(p0: boolean): number;
    function GetNumCreatedMissionVehicles(p0: boolean): number;
    function N_0x0cd9ab83489430ea(p0: boolean): number;
    function GetNumDispatchedUnitsForPlayer(dispatchService: number): number;
    function N_0xeb4a0c2d56441717(dispatchService: number): number;
    function GetNumberOfDispatchedUnitsForPlayer(dispatchService: number): number;
    function GetNumDlcVehicles(): number;
    function GetNumDlcWeaponComponents(dlcWeaponIndex: number): number;
    function GetNumDlcWeaponComponentsSp(dlcWeaponIndex: number): number;
    function GetNumDlcWeapons(): number;
    function GetNumDlcWeaponsSp(): number;
    function GetNumHairColors(): number;
    function GetNumMakeupColors(): number;
    function N_0xd1f7ca1535d22818(): number;
    function GetNumModColors(paintType: number, p1: boolean): number;
    function GetNumModKits(vehicle: number): number;
    function GetNumNavmeshesExistingInArea(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number
    ): number;
    function N_0x01708e8dd3ff8c65(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): number;
    function GetNumReservedMissionObjects(p0: boolean): number;
    function GetNumReservedMissionPeds(p0: boolean): number;
    function GetNumReservedMissionVehicles(p0: boolean): number;
    function GetNumResourceMetadata(resourceName: string, metadataKey: string): number;
    function GetNumResources(): number;
    function GetNumSuccessfulStuntJumps(): number;
    function N_0x996dd1e1e02f1008(): number;
    function GetNumTattooShopDlcItems(character: number): number;
    function N_0x278f76c3b0a8f109(character: number): number;
    function GetNumDecorations(character: number): number;
    function GetNumUnlockedRadioStations(): number;
    function MaxRadioStationIndex(): number;
    function GetNumVehicleMods(vehicle: number, modType: number): number;
    function GetNumVehicleWindowTints(): number;
    function GetNumberOfActiveBlips(): number;
    function GetNumberOfEvents(eventGroup: number): number;
    function GetNumberOfFiresInRange(x: number, y: number, z: number, radius: number): number;
    function GetNumberOfFreeStacksOfThisSize(stackSize: number): number;
    function GetFreeStackSlotsCount(stackSize: number): number;
    function GetNumberOfPedDrawableVariations(ped: number, componentId: number): number;
    function GetNumberOfPedPropDrawableVariations(ped: number, propId: number): number;
    function GetNumberOfPedPropTextureVariations(ped: number, propId: number, drawableId: number): number;
    function GetNumberOfPedTextureVariations(ped: number, componentId: number, drawableId: number): number;
    function GetNumberOfPlayers(): number;
    function GetNumberOfPlayersInTeam(team: number): number;
    function GetNumberOfReferencesOfScriptWithNameHash(scriptHash: number): number;
    function GetNumberOfInstancesOfStreamedScript(scriptHash: number): number;
    function GetNumberOfInstancesOfScriptWithNameHash(scriptHash: number): number;
    function GetNumberOfStreamingRequests(): number;
    function GetNumberOfVehicleColours(vehicle: number): number;
    function GetNumberOfVehicleDoors(vehicle: number): number;
    function GetNumberOfVehicleNumberPlates(): number;
    function GetObjectFragmentDamageHealth(p0: number, p1: boolean): number;
    function GetObjectIndexFromEntityIndex(entity: number): number;
    function GetObjectOffsetFromCoords(
        xPos: number,
        yPos: number,
        zPos: number,
        heading: number,
        xOffset: number,
        yOffset: number,
        zOffset: number
    ): Vector3;
    function GetObjectTextureVariation(object: number): number;
    function N_0xe84eb93729c5f36a(object: number): number;
    function GetOffsetFromEntityGivenWorldCoords(entity: number, posX: number, posY: number, posZ: number): Vector3;
    function GetOffsetFromEntityInWorldCoords(
        entity: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number
    ): Vector3;
    function GetOffsetFromInteriorInWorldCoords(interior: number, x: number, y: number, z: number): Vector3;
    function GetOnlineVersion(): string;
    function GetGameVersion(): string;
    function GetOnscreenKeyboardResult(): string;
    function GetPackedBoolStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function N_0x80c75307b1c42837(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function GetPstatBoolHash(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function GetPackedIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function N_0x61e111e323419e07(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function GetPstatIntHash(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function GetPackedTuBoolStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function N_0xc4bb08ee7907471e(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function GetTupstatBoolHash(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function GetPackedTitleUpdateBoolStatKey(
        index: number,
        spStat: boolean,
        charStat: boolean,
        character: number
    ): number;
    function GetPackedTuIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function N_0xd16c2ad6b8e32854(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function GetTupstatIntHash(index: number, spStat: boolean, charStat: boolean, character: number): number;
    function GetPackedTitleUpdateIntStatKey(
        index: number,
        spStat: boolean,
        charStat: boolean,
        character: number
    ): number;
    function GetParkedVehicleDensityMultiplier(): number;
    function GetPauseMapPointerWorldPosition(): Vector3;
    function GetPauseMenuCursorPosition(): Vector3;
    function N_0x5bff36d6ed83e0ae(): Vector3;
    function GetPauseMenuSelection(): LuaMultiReturn<[number, number]>;
    function N_0x36c1451a88a09630(): LuaMultiReturn<[number, number]>;
    function GetPauseMenuSelectionData(): LuaMultiReturn<[number, number, number]>;
    function N_0x7e17be53e1aaabaf(): LuaMultiReturn<[number, number, number]>;
    function GetPauseMenuState(): number;
    function GetPedAccuracy(ped: number): number;
    function GetPedAlertness(ped: number): number;
    function GetPedAmmoByType(ped: number, ammoType: number): number;
    function GetPedAmmoTypeFromWeapon(ped: number, weaponHash: number): number;
    function GetPedAmmoType(ped: number, weaponHash: number): number;
    function GetPedAmmoTypeFromWeapon_2(ped: number, weaponHash: number): number;
    function GetPedArmour(ped: number): number;
    function GetPedAsGroupLeader(groupID: number): number;
    function GetPedAsGroupMember(groupID: number, memberNumber: number): number;
    function GetPedBoneCoords(ped: number, boneId: number, offsetX: number, offsetY: number, offsetZ: number): Vector3;
    function GetPedBoneIndex(ped: number, boneId: number): number;
    function GetPedCauseOfDeath(ped: number): number;
    function GetPedCombatMovement(ped: number): number;
    function GetPedCombatRange(ped: number): number;
    function GetPedConfigFlag(ped: number, flagId: number, p2: boolean): boolean;
    function GetPedCurrentMovementSpeed(ped: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0xf60165e1d2c5370b(ped: number): LuaMultiReturn<[boolean, number, number]>;
    function GetPedDecorationZoneFromHashes(collection: number, overlay: number): number;
    function GetTattooZone(collection: number, overlay: number): number;
    function GetPedDecorations(ped: number): any;
    function GetPedDecorationsState(ped: number): number;
    function N_0x71eab450d86954a1(ped: number): number;
    function GetPedDefensiveAreaPosition(ped: number, p1: boolean): Vector3;
    function GetPedDensityMultiplier(): number;
    function GetPedDesiredMoveBlendRatio(ped: number): number;
    function GetPedDiesInWater(ped: number): boolean;
    function GetPedDrawableVariation(ped: number, componentId: number): number;
    function GetPedEmissiveIntensity(ped: number): number;
    function N_0x1461b28a06717d68(ped: number): number;
    function GetPedIlluminatedClothingGlowIntensity(ped: number): number;
    function GetPedEnveffScale(ped: number): number;
    function GetPedEventData(ped: number, eventType: number, outData: number): LuaMultiReturn<[boolean, number]>;
    function GetPedExtractedDisplacement(ped: number, worldSpace: boolean): Vector3;
    function GetPedEyeColor(ped: number): number;
    function N_0x76bba2cee66d47e9(ped: number): number;
    function GetPedFaceFeature(ped: number, index: number): number;
    function GetPedGroupIndex(ped: number): number;
    function GetPedHairColor(ped: number): number;
    function GetPedHairHighlightColor(ped: number): number;
    function GetPedHairRgbColor(hairColorIndex: number): LuaMultiReturn<[number, number, number]>;
    function N_0x4852fc386e2e1bb5(hairColorIndex: number): LuaMultiReturn<[number, number, number]>;
    function GetHairRgbColor(hairColorIndex: number): LuaMultiReturn<[number, number, number]>;
    function GetPedHeadBlendData(ped: number, headBlendData: number): LuaMultiReturn<[boolean, number]>;
    function GetPedHeadBlendFirstIndex(_type: number): number;
    function GetFirstParentIdForPedType(_type: number): number;
    function GetPedHeadBlendNumHeads(_type: number): number;
    function GetNumParentPedsOfType(_type: number): number;
    function GetPedHeadOverlayData(
        ped: number,
        index: number
    ): LuaMultiReturn<[boolean, number, number, number, number, number]>;
    function GetPedHeadOverlayNum(overlayID: number): number;
    function GetNumHeadOverlayValues(overlayID: number): number;
    function GetPedHeadOverlayValue(ped: number, overlayID: number): number;
    function GetPedHelmetStoredHatPropIndex(ped: number): number;
    function N_0x451294e859ecc018(ped: number): number;
    function GetPedHelmetStoredHatTexIndex(ped: number): number;
    function N_0x9d728c1e12bf5518(ped: number): number;
    function GetPedInVehicleSeat(vehicle: number, seatIndex: number): number;
    function GetPedIndexFromEntityIndex(entity: number): number;
    function GetPedLastDamageBone(ped: number, outBone: number): LuaMultiReturn<[boolean, number]>;
    function GetPedLastWeaponImpactCoord(ped: number): LuaMultiReturn<[boolean, Vector3]>;
    function GetPedMakeupRgbColor(makeupColorIndex: number): LuaMultiReturn<[number, number, number]>;
    function N_0x013e5cfc38cd5387(makeupColorIndex: number): LuaMultiReturn<[number, number, number]>;
    function GetMakeupRgbColor(makeupColorIndex: number): LuaMultiReturn<[number, number, number]>;
    function GetPedMaxHealth(ped: number): number;
    function GetPedModelPersonality(modelHash: number): number;
    function GetPedMoney(ped: number): number;
    function GetPedMovementClipset(ped: number): number;
    function GetPedNearbyPeds(ped: number, ignore: number): LuaMultiReturn<[number, number]>;
    function GetPedNearbyVehicles(ped: number, sizeAndVehs: number): LuaMultiReturn<[number, number]>;
    function GetPedPaletteVariation(ped: number, componentId: number): number;
    function GetPedParachuteLandingType(ped: number): number;
    function GetPedParachuteState(ped: number): number;
    function GetPedParachuteTintIndex(ped: number, outTintIndex: number): number;
    function GetPedPropIndex(ped: number, componentId: number): number;
    function GetPedPropTextureIndex(ped: number, componentId: number): number;
    function GetPedRagdollBoneIndex(ped: number, bone: number): number;
    function GetPedRelationshipGroupDefaultHash(ped: number): number;
    function GetPedRelationshipGroupHash(ped: number): number;
    function GetPedResetFlag(ped: number, flagId: number): boolean;
    function GetPedSourceOfDeath(ped: number): number;
    function GetPedKiller(ped: number): number;
    function GetPedStealthMovement(ped: number): boolean;
    function GetPedSweat(ped: number): number;
    function GetPedTaskCombatTarget(ped: number, p1: number): number;
    function N_0x32c27a11307b01cc(ped: number, p1: number): number;
    function GetPedTextureVariation(ped: number, componentId: number): number;
    function GetPedTimeOfDeath(ped: number): number;
    function N_0x1e98817b311ae98a(ped: number): number;
    function GetPedType(ped: number): number;
    function GetPedUsingVehicleDoor(vehicle: number, doorIndex: number): number;
    function N_0x218297bf0cfd853b(vehicle: number, doorIndex: number): number;
    function GetPedVisualFieldCenterAngle(ped: number): number;
    function GetPedWaypointDistance(p0: number): number;
    function GetPedWaypointProgress(ped: number): number;
    function GetPedWeaponLiveryColor(ped: number, weaponHash: number, camoComponentHash: number): number;
    function N_0xf0a60040be558f2d(ped: number, weaponHash: number, camoComponentHash: number): number;
    function GetPedWeaponTintIndex(ped: number, weaponHash: number): number;
    function GetPedWeapontypeInSlot(ped: number, weaponSlot: number): number;
    function GetPedheadshotTxdString(id: number): string;
    function GetPedsJacker(ped: number): number;
    function GetPhoneGestureAnimCurrentTime(ped: number): number;
    function GetPhoneGestureAnimTotalTime(ped: number): number;
    function GetPickupCoords(pickup: number): Vector3;
    function GetPickupGenerationRangeMultiplier(): number;
    function N_0xb3eca65c7317f174(): number;
    function GetPickupHash(pickupHash: number): number;
    function N_0x5eaad83f8cfb4575(pickupHash: number): number;
    function GetPickupHashFromWeapon(weapon: number): number;
    function N_0xd6429a016084f1a5(weapon: number): number;
    function GetPickupObject(pickup: number): number;
    function N_0x5099bc55630b25ae(pickup: number): number;
    function GetPlayerCurrentStealthNoise(player: number): number;
    function GetPlayerFakeWantedLevel(player: number): number;
    function N_0x56105e599cab0efa(player: number): number;
    function GetPlayerFromServerId(serverId: number): number;
    function GetPlayerFromStateBagName(bagName: string): number;
    function GetPlayerGroup(player: number): number;
    function GetPlayerHasReserveParachute(player: number): boolean;
    function GetPlayerHealthRechargeLimit(player: number): number;
    function N_0x8bc515bae4aaf8ff(player: number): number;
    function GetPlayerIndex(): number;
    function GetPlayerInvincible(player: number): boolean;
    function GetPlayerInvincible_2(player: number): boolean;
    function GetPlayerMaxArmour(player: number): number;
    function GetPlayerMaxStamina(playerId: number): number;
    function GetPlayerMeleeWeaponDamageModifier(playerId: number): number;
    function GetPlayerMeleeWeaponDefenseModifier(playerId: number): number;
    function GetPlayerName(player: number): string;
    function GetPlayerParachuteModelOverride(player: number): number;
    function GetPlayerParachutePackTintIndex(player: number, tintIndex: number): number;
    function GetPlayerParachuteSmokeTrailColor(player: number): LuaMultiReturn<[number, number, number]>;
    function GetPlayerParachuteTintIndex(player: number, tintIndex: number): number;
    function GetPlayerPed(playerId: number): number;
    function GetPlayerPedIsFollowing(ped: number): number;
    function GetPlayerPedScriptIndex(player: number): number;
    function GetPlayerRadioStationGenre(): number;
    function GetPlayerRadioStationIndex(): number;
    function GetPlayerRadioStationName(): string;
    function GetPlayerReserveParachuteModelOverride(player: number): number;
    function GetPlayerReserveParachuteTintIndex(player: number, index: number): number;
    function GetPlayerRgbColour(player: number): LuaMultiReturn<[number, number, number]>;
    function GetPlayerServerId(player: number): number;
    function GetPlayerShortSwitchState(): number;
    function GetPlayerSprintStaminaRemaining(player: number): number;
    function GetPlayerSprintTimeRemaining(player: number): number;
    function GetPlayerStamina(playerId: number): number;
    function GetPlayerSwitchInterpOutCurrentTime(): number;
    function N_0x5b48a06dd0e792a5(): number;
    function GetPlayerSwitchInterpOutDuration(): number;
    function SetPlayerInvertedUp(): number;
    function N_0x08c2d6c52a3104bb(): number;
    function GetPlayerSwitchJumpCutIndex(): number;
    function N_0x78c0d93253149435(): number;
    function GetPlayerSwitchState(): number;
    function GetPlayerSwitchType(): number;
    function GetPlayerTargetEntity(player: number, entity: number): LuaMultiReturn<[boolean, number]>;
    function GetPlayerTeam(player: number): number;
    function GetPlayerUnderwaterTimeRemaining(player: number): number;
    function GetPlayerVehicleDamageModifier(playerId: number): number;
    function GetPlayerVehicleDefenseModifier(playerId: number): number;
    function GetPlayerWantedCentrePosition(player: number): Vector3;
    function GetPlayerWantedLevel(player: number): number;
    function GetPlayerWeaponDamageModifier(playerId: number): number;
    function GetPlayerWeaponDefenseModifier(playerId: number): number;
    function GetPlayerWeaponDefenseModifier_2(playerId: number): number;
    function GetPlayersLastVehicle(): number;
    function GetPointOnRoadSide(x: number, y: number, z: number, p3: number): LuaMultiReturn<[boolean, Vector3]>;
    function N_0x16f46fb18c8009e4(x: number, y: number, z: number, p3: number): LuaMultiReturn<[boolean, Vector3]>;
    function GetPositionInRecording(vehicle: number): number;
    function GetPositionOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
    function GetPositionOfVehicleRecordingIdAtTime(id: number, time: number): Vector3;
    function N_0x92523b76657a517d(id: number, time: number): Vector3;
    function GetPosixTime(): LuaMultiReturn<[number, number, number, number, number, number]>;
    function GetPowerSavingModeDuration(): number;
    function N_0xabb2fa71c83a1b72(): number;
    function GetPrevWeatherTypeHashName(): number;
    function GetPrevWeatherType(): number;
    function GetProfileSetting(profileSetting: number): number;
    function GetProjectileNearPed(
        ped: number,
        weaponHash: number,
        distance: number,
        ownedByPlayer: boolean
    ): LuaMultiReturn<[boolean, number, number]>;
    function N_0x82fde6a57ee4ee44(
        ped: number,
        weaponHash: number,
        distance: number,
        ownedByPlayer: boolean
    ): LuaMultiReturn<[boolean, number, number]>;
    function GetRadioStationName(radioStation: number): string;
    function GetRainLevel(): number;
    function GetRandomEventFlag(): boolean;
    function GetRandomFloatInRange(startRange: number, endRange: number): number;
    function GetRandomIntInRange(startRange: number, endRange: number): number;
    function GetRandomIntInRange_2(startRange: number, endRange: number): number;
    function GetRandomPedAtCoord(
        x: number,
        y: number,
        z: number,
        xRadius: number,
        yRadius: number,
        zRadius: number,
        pedType: number
    ): number;
    function GetRandomVehicleBackBumperInSphere(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): number;
    function GetRandomVehicleDensityMultiplier(): number;
    function GetRandomVehicleFrontBumperInSphere(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): number;
    function GetRandomVehicleInSphere(
        x: number,
        y: number,
        z: number,
        radius: number,
        modelHash: number,
        flags: number
    ): number;
    function GetRandomVehicleModelInMemory(p0: boolean): LuaMultiReturn<[number, number]>;
    function GetRandomVehicleNode(
        x: number,
        y: number,
        z: number,
        radius: number,
        p4: boolean,
        p5: boolean,
        p6: boolean
    ): LuaMultiReturn<[boolean, number, number]>;
    function GetRayfireMapObject(x: number, y: number, z: number, radius: number, name: string): number;
    function N_0xb48fced898292e52(x: number, y: number, z: number, radius: number, name: string): number;
    function GetDesObject(x: number, y: number, z: number, radius: number, name: string): number;
    function GetRayfireMapObjectAnimPhase(object: number): number;
    function N_0x260ee4fdbdf4db01(object: number): number;
    function GetDesObjectAnimProgress(object: number): number;
    function GetRegisteredCommands(): any;
    function GetRelationshipBetweenGroups(group1: number, group2: number): number;
    function GetRelationshipBetweenPeds(ped1: number, ped2: number): number;
    function GetRenderedCharacterHeight(size: number, font: number): number;
    function N_0xdb88a37483346780(size: number, font: number): number;
    function GetTextScaleHeight(size: number, font: number): number;
    function GetRenderingCam(): number;
    function GetReplayStatAtIndex(index: number): number;
    function N_0x8098c8d6597aae18(index: number): number;
    function GetReplayStatCount(): number;
    function N_0xdc9274a7ef6b2867(): number;
    function GetReplayStatMissionType(): number;
    function N_0x2b626a0150e4d449(): number;
    function GetRequestingnightvision(): boolean;
    function N_0x35fb78dc42b7bd21(): boolean;
    function GetResourceByFindIndex(findIndex: number): string;
    function GetResourceKvpFloat(key: string): number;
    function GetResourceKvpInt(key: string): number;
    function GetResourceKvpString(key: string): string;
    function GetResourceMetadata(resourceName: string, metadataKey: string, index: number): string;
    function GetResourceState(resourceName: string): string;
    function GetRoadBoundaryUsingHeading(
        x: number,
        y: number,
        z: number,
        heading: number
    ): LuaMultiReturn<[boolean, Vector3]>;
    function N_0xa0f8a7517a273c05(x: number, y: number, z: number, heading: number): LuaMultiReturn<[boolean, Vector3]>;
    function GetRoadSidePointWithHeading(
        x: number,
        y: number,
        z: number,
        heading: number
    ): LuaMultiReturn<[boolean, Vector3]>;
    function GetRoomKeyForGameViewport(): number;
    function N_0xa6575914d2a0b450(): number;
    function GetRoomKeyFromGameplayCam(): number;
    function GetRoomKeyFromEntity(entity: number): number;
    function GetRopeFlags(rope: number): number;
    function GetRopeLastVertexCoord(ropeId: number): Vector3;
    function GetRopeLengthChangeRate(rope: number): number;
    function GetRopeTimeMultiplier(rope: number): number;
    function GetRopeUpdateOrder(rope: number): number;
    function GetRopeVertexCoord(ropeId: number, vertex: number): Vector3;
    function GetRopeVertexCount(ropeId: number): number;
    function GetRotationOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
    function GetRotationOfVehicleRecordingIdAtTime(id: number, time: number): Vector3;
    function N_0xf0f2103efaf8cba7(id: number, time: number): Vector3;
    function GetRuntimeTextureHeight(tex: number): number;
    function GetRuntimeTexturePitch(tex: number): number;
    function GetRuntimeTextureWidth(tex: number): number;
    function GetSafeCoordForPed(
        x: number,
        y: number,
        z: number,
        onGround: boolean,
        flags: number
    ): LuaMultiReturn<[boolean, Vector3]>;
    function GetSafePickupCoords(x: number, y: number, z: number, p3: number, p4: number): Vector3;
    function GetSafeZoneSize(): number;
    function GetScaleformMovieCursorSelection(
        scaleformHandle: number
    ): LuaMultiReturn<[boolean, boolean, number, number, number]>;
    function N_0x632b2940c67f4ea9(scaleformHandle: number): LuaMultiReturn<[boolean, boolean, number, number, number]>;
    function GetScaleformMovieMethodReturnValueBool(methodReturn: number): boolean;
    function N_0xd80a80346a45d761(methodReturn: number): boolean;
    function GetScaleformMovieMethodReturnValueInt(method_return: number): number;
    function N_0x2de7efa66b906036(method_return: number): number;
    function GetScaleformMovieFunctionReturnInt(method_return: number): number;
    function GetScaleformMovieMethodReturnValueString(method_return: number): string;
    function SittingTv(method_return: number): string;
    function GetScaleformMovieFunctionReturnString(method_return: number): string;
    function GetScenarioPedDensityMultiplier(): number;
    function GetScreenCoordFromWorldCoord(
        worldX: number,
        worldY: number,
        worldZ: number
    ): LuaMultiReturn<[boolean, number, number]>;
    function World3dToScreen2d(
        worldX: number,
        worldY: number,
        worldZ: number
    ): LuaMultiReturn<[boolean, number, number]>;
    function GetScreenResolution(): LuaMultiReturn<[number, number]>;
    function GetScreenblurFadeCurrentTime(): number;
    function IsParticleFxDelayedBlink(): number;
    function GetScriptGfxPosition(x: number, y: number): LuaMultiReturn<[number, number]>;
    function N_0x6dd8f5aa635eb4b2(x: number, y: number): LuaMultiReturn<[number, number]>;
    function GetScriptTaskStatus(ped: number, taskHash: number): number;
    function GetScriptedCoverPointCoords(coverpoint: number): Vector3;
    function GetSeatPedIsTryingToEnter(ped: number): number;
    function GetSelectedPedWeapon(ped: number): number;
    function GetSequenceProgress(ped: number): number;
    function GetShapeTestResult(shapeTestHandle: number): LuaMultiReturn<[number, boolean, number, Vector3, number]>;
    function GetRaycastResult(shapeTestHandle: number): LuaMultiReturn<[number, boolean, number, Vector3, number]>;
    function GetShapeTestResultIncludingMaterial(
        shapeTestHandle: number
    ): LuaMultiReturn<[number, boolean, number, Vector3, number, number]>;
    function N_0x65287525d951f6be(
        shapeTestHandle: number
    ): LuaMultiReturn<[number, boolean, number, Vector3, number, number]>;
    function GetShapeTestResultEx(
        shapeTestHandle: number
    ): LuaMultiReturn<[number, boolean, number, Vector3, number, number]>;
    function GetShopPedApparelForcedComponentCount(componentHash: number): number;
    function GetNumForcedComponents(componentHash: number): number;
    function GetShopPedApparelForcedPropCount(componentHash: number): number;
    function N_0x017568a8182d98a6(componentHash: number): number;
    function GetShopPedApparelVariantComponentCount(componentHash: number): number;
    function N_0xc17ad0e5752becda(componentHash: number): number;
    function GetShopPedApparelVariantPropCount(propHash: number): number;
    function N_0xd40aac51e8e4c663(propHash: number): number;
    function GetShopPedComponent(componentHash: number, outComponent: number): number;
    function GetShopPedOutfit(p0: number, p1: number): number;
    function GetShopPedOutfitComponentVariant(
        outfit: number,
        slot: number,
        outComponentVariant: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetPropFromOutfit(
        outfit: number,
        slot: number,
        outComponentVariant: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetShopPedOutfitLocate(p0: number): number;
    function N_0x073ca26b079f956e(p0: number): number;
    function GetShopPedOutfitPropVariant(
        outfitHash: number,
        variantIndex: number,
        outPropVariant: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0xa9f9c2e0fde11cbb(
        outfitHash: number,
        variantIndex: number,
        outPropVariant: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetShopPedProp(componentHash: number, outProp: number): number;
    function N_0x5d5caff661ddf6fc(componentHash: number, outProp: number): number;
    function GetShopPedQueryComponent(componentId: number, outComponent: number): number;
    function GetShopPedQueryOutfit(outfitIndex: number, outfit: number): number;
    function GetShopPedQueryProp(componentId: number, outProp: number): number;
    function GetSizeOfSaveData(p0: boolean): number;
    function N_0xa09f896ce912481f(p0: boolean): number;
    function GetSnowLevel(): number;
    function GetSoundId(): number;
    function GetSoundIdFromNetworkId(netId: number): number;
    function N_0x75262fd12d0a1c84(netId: number): number;
    function GetStandardBlipEnumId(): number;
    function N_0x4a9923385bdb9dad(): number;
    function GetLevelBlipSprite(): number;
    function GetStateBagValue(bagName: string, key: string): any;
    function GetStateOfClosestDoorOfType(
        _type: number,
        x: number,
        y: number,
        z: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetStateOfRayfireMapObject(object: number): number;
    function N_0x899ba936634a322e(object: number): number;
    function GetDesObjectState(object: number): number;
    function GetStatusOfLoadMissionCreatorPhoto(p0: string): number;
    function N_0x1670f8d05056f257(p0: string): number;
    function GetStatusOfMissionRepeatSave(): number;
    function N_0x2b5e102e4a42f2bf(): number;
    function GetStatusOfSaveHighQualityPhoto(): number;
    function N_0x0c0c4e81e1ac60a0(): number;
    function GetStatusOfSortedListOperation(p0: boolean): number;
    function N_0xf5bed327cea362b1(p0: boolean): number;
    function GetStatusOfTakeHighQualityPhoto(): number;
    function N_0x0d6ca79eeebd8ca3(): number;
    function GetStatusOfTakeMissionCreatorPhoto(): number;
    function N_0x90a78ecaa4e78453(): number;
    function GetStatusOfTextureDownload(p0: number): number;
    function N_0x8bd6c6dea20e82c6(p0: number): number;
    function GetStreamPlayTime(): number;
    function GetStreetNameAtCoord(x: number, y: number, z: number): LuaMultiReturn<[number, number]>;
    function GetStreetNameFromHashKey(hash: number): string;
    function GetSubmarineCrushDepthWarningState(submarine: number): number;
    function GetSubmarineIsBelowFirstCrushDepth(submarine: number): boolean;
    function GetSynchronizedScenePhase(sceneID: number): number;
    function GetSynchronizedSceneRate(sceneID: number): number;
    function GetTaskMoveNetworkEvent(ped: number, eventName: string): boolean;
    function N_0xb4f47213df45a64c(ped: number, eventName: string): boolean;
    function GetTaskMoveNetworkSignalBool(ped: number, signalName: string): boolean;
    function N_0xa7ffba498e4aaf67(ped: number, signalName: string): boolean;
    function GetTaskMoveNetworkSignalFloat(ped: number, signalName: string): number;
    function GetTaskMoveNetworkState(ped: number): string;
    function N_0x717e4d1f2048376d(ped: number): string;
    function GetTattooShopDlcItemData(
        characterType: number,
        decorationIndex: number,
        outComponent: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0xff56381874f82086(
        characterType: number,
        decorationIndex: number,
        outComponent: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetTattooCollectionData(
        characterType: number,
        decorationIndex: number,
        outComponent: number
    ): LuaMultiReturn<[boolean, number]>;
    function GetTennisSwingAnimComplete(ped: number): boolean;
    function N_0x17df68d720aa77f8(ped: number): boolean;
    function GetTextSubstring(text: string, position: number, length: number): string;
    function GetTextSubstringSafe(text: string, position: number, length: number, maxLength: number): string;
    function GetTextSubstringSlice(text: string, startPosition: number, endPosition: number): string;
    function GetTextureResolution(textureDict: string, textureName: string): Vector3;
    function GetThisScriptName(): string;
    function GetTimeAsString(time: number): string;
    function FormatTime(time: number): string;
    function GetTimeDifference(timeA: number, timeB: number): number;
    function GetTimeOfLastPedWeaponDamage(ped: number, weaponHash: number): number;
    function N_0x36b77bb84687c318(ped: number, weaponHash: number): number;
    function GetTimeOffset(timeA: number, timeB: number): number;
    function GetTimePositionInRecording(vehicle: number): number;
    function GetTimeSinceLastArrest(): number;
    function GetTimeSinceLastDeath(): number;
    function GetTimeSinceLastInput(padIndex: number): number;
    function N_0xd7d22f5592aed8ba(padIndex: number): number;
    function GetTimeSincePlayerDroveAgainstTraffic(player: number): number;
    function GetTimeSincePlayerDroveOnPavement(player: number): number;
    function GetTimeSincePlayerHitPed(player: number): number;
    function GetTimeSincePlayerHitVehicle(player: number): number;
    function GetTimecycleModifierCount(): number;
    function GetTimecycleModifierIndex(): number;
    function GetTimecycleModifierIndexByName(modifierName: string): number;
    function GetTimecycleModifierNameByIndex(modifierIndex: number): string;
    function GetTimecycleModifierStrength(): number;
    function GetTimecycleModifierVar(modifierName: string, varName: string): LuaMultiReturn<[boolean, number, number]>;
    function GetTimecycleModifierVarCount(modifierName: string): number;
    function GetTimecycleModifierVarNameByIndex(modifierName: string, modifierVarIndex: number): string;
    function GetTimecycleTransitionModifierIndex(): number;
    function N_0x459fd2c8d0ab78bc(): number;
    function GetTimecycleVarCount(): number;
    function GetTimecycleVarDefaultValueByIndex(varIndex: number): number;
    function GetTimecycleVarNameByIndex(varIndex: number): string;
    function GetTogglePausedRenderphasesStatus(): boolean;
    function N_0xeb3dac2c86001e5e(): boolean;
    function GetTotalDurationOfVehicleRecording(recording: number, script: string): number;
    function GetTotalDurationOfVehicleRecordingId(id: number): number;
    function GetTotalSuccessfulStuntJumps(): number;
    function N_0x6856ec3d35c81ea4(): number;
    function GetTrainCarriage(train: number, trailerNumber: number): number;
    function GetTrainCurrentTrackNode(train: number): number;
    function GetTrainDoorCount(train: number): number;
    function GetTrainDoorOpenRatio(train: number, doorIndex: number): number;
    function GetTvChannel(): number;
    function GetTvVolume(): number;
    function GetTyreHealth(vehicle: number, wheelIndex: number): number;
    function GetTyreWearMultiplier(vehicle: number, wheelIndex: number): number;
    function GetUsedCreatorModelMemoryPercentage(): number;
    function N_0x3d3d8b3be5a83d35(): number;
    function GetUsingnightvision(): boolean;
    function IsNightvisionInactive(): boolean;
    function IsNightvisionActive(): boolean;
    function GetUsingseethrough(): boolean;
    function IsSeethroughActive(): boolean;
    function GetUtcTime(): LuaMultiReturn<[number, number, number, number, number, number]>;
    function GetVariantComponent(
        componentHash: number,
        variantComponentIndex: number
    ): LuaMultiReturn<[number, number, number]>;
    function GetVariantProp(componentHash: number, variantPropIndex: number): LuaMultiReturn<[number, number, number]>;
    function N_0xd81b7f27bc773e66(
        componentHash: number,
        variantPropIndex: number
    ): LuaMultiReturn<[number, number, number]>;
    function GetVehicleAcceleration(vehicle: number): number;
    function GetVehicleAlarmTimeLeft(vehicle: number): number;
    function GetVehicleAttachedToCargobob(cargobob: number): number;
    function GetVehicleBodyHealth(vehicle: number): number;
    function GetVehicleBombCount(aircraft: number): number;
    function N_0xea12bd130d7569a1(aircraft: number): number;
    function GetAircraftBombCount(aircraft: number): number;
    function GetVehicleCanActivateParachute(vehicle: number): boolean;
    function CanVehicleParachuteBeActivated(vehicle: number): boolean;
    function GetVehicleCauseOfDestruction(vehicle: number): number;
    function GetVehicleCheatPowerIncrease(vehicle: number): number;
    function GetVehicleClass(vehicle: number): number;
    function GetVehicleClassEstimatedMaxSpeed(vehicleClass: number): number;
    function N_0x00c09f246abedd82(vehicleClass: number): number;
    function GetVehicleClassMaxSpeed(vehicleClass: number): number;
    function GetVehicleClassFromName(modelHash: number): number;
    function GetVehicleClassMaxAcceleration(vehicleClass: number): number;
    function GetVehicleClassMaxAgility(vehicleClass: number): number;
    function GetVehicleClassMaxBraking(vehicleClass: number): number;
    function GetVehicleClassMaxTraction(vehicleClass: number): number;
    function GetVehicleClutch(vehicle: number): number;
    function GetVehicleColor(vehicle: number): LuaMultiReturn<[number, number, number]>;
    function GetVehicleColourCombination(vehicle: number): number;
    function GetVehicleColours(vehicle: number): LuaMultiReturn<[number, number]>;
    function GetVehicleCountermeasureCount(aircraft: number): number;
    function N_0xf846aa63df56b804(aircraft: number): number;
    function GetAircraftCountermeasureCount(aircraft: number): number;
    function GetVehicleCrewEmblemRequestState(vehicle: number, p1: number): number;
    function N_0xfe26117a5841b2ff(vehicle: number, p1: number): number;
    function GetVehicleCurrentGear(vehicle: number): number;
    function GetVehicleCurrentRpm(vehicle: number): number;
    function GetVehicleCurrentSlipstreamDraft(vehicle: number): number;
    function N_0x36492c2f0d134c56(vehicle: number): number;
    function GetVehicleCustomPrimaryColour(vehicle: number): LuaMultiReturn<[number, number, number]>;
    function GetVehicleCustomSecondaryColour(vehicle: number): LuaMultiReturn<[number, number, number]>;
    function GetVehicleDashboardBoost(): number;
    function GetVehicleDashboardColor(vehicle: number, color: number): number;
    function GetVehicleDashboardColour(vehicle: number, color: number): number;
    function GetVehicleDashboardFuel(): number;
    function GetVehicleDashboardLights(): number;
    function GetVehicleDashboardOilPressure(): number;
    function GetVehicleDashboardOilTemp(): number;
    function GetVehicleDashboardRpm(): number;
    function GetVehicleDashboardSpeed(vehicle: number): number;
    function GetVehicleDashboardTemp(): number;
    function GetVehicleDashboardVacuum(): number;
    function GetVehicleDashboardWaterTemp(): number;
    function GetVehicleDefaultHorn(vehicle: number): number;
    function GetVehicleDefaultHornIgnoreMods(vehicle: number): number;
    function N_0xacb5dcca1ec76840(vehicle: number): number;
    function GetVehicleHornHash(vehicle: number): number;
    function GetVehicleDefaultHornVariation(vehicle: number): number;
    function N_0xd53f3a29bce2580e(vehicle: number): number;
    function N_0x22fecb546c276a30(vehicle: number): number;
    function GetVehicleDeformationAtPos(vehicle: number, offsetX: number, offsetY: number, offsetZ: number): Vector3;
    function GetVehicleDensityMultiplier(): number;
    function GetVehicleDirtLevel(vehicle: number): number;
    function GetVehicleDoorAngleRatio(vehicle: number, doorIndex: number): number;
    function GetVehicleDoorLockStatus(vehicle: number): number;
    function GetVehicleDoorsLockedForPlayer(vehicle: number, player: number): boolean;
    function GetVehicleDrawnWheelAngleMult(vehicle: number): number;
    function GetVehicleEngineHealth(vehicle: number): number;
    function GetVehicleEngineTemperature(vehicle: number): number;
    function GetVehicleEnveffScale(vehicle: number): number;
    function GetVehiclePaintFade(vehicle: number): number;
    function GetVehicleEstimatedMaxSpeed(vehicle: number): number;
    function N_0x53af99baa671ca47(vehicle: number): number;
    function GetVehicleMaxSpeed(vehicle: number): number;
    function GetVehicleExtraColours(vehicle: number): LuaMultiReturn<[number, number]>;
    function GetVehicleFlightNozzlePosition(aircraft: number): number;
    function N_0xda62027c8bdb326e(aircraft: number): number;
    function GetPlaneHoverModePercentage(aircraft: number): number;
    function GetVehicleHoverModePercentage(aircraft: number): number;
    function GetPlaneVtolDirection(aircraft: number): number;
    function GetVehicleFuelLevel(vehicle: number): number;
    function GetVehicleGravityAmount(vehicle: number): number;
    function GetVehicleHandbrake(vehicle: number): boolean;
    function GetVehicleHandlingFloat(vehicle: number, class_: string, fieldName: string): number;
    function GetVehicleHandlingInt(vehicle: number, class_: string, fieldName: string): number;
    function GetVehicleHandlingVector(vehicle: number, class_: string, fieldName: string): Vector3;
    function GetVehicleHasKers(vehicle: number): boolean;
    function N_0x50634e348c8d44ef(vehicle: number): boolean;
    function HasVehicleKersBoost(vehicle: number): boolean;
    function GetVehicleHasParachute(vehicle: number): boolean;
    function HasVehicleParachute(vehicle: number): boolean;
    function DoesVehicleHaveParachute(vehicle: number): boolean;
    function GetVehicleHealthPercentage(vehicle: number): number;
    function GetVehicleBodyHealth_2(vehicle: number): number;
    function GetVehicleHighGear(vehicle: number): number;
    function GetVehicleHomingLockonState(vehicle: number): number;
    function N_0xe6b0e8cfc3633bf0(vehicle: number): number;
    function GetVehicleIndexFromEntityIndex(entity: number): number;
    function GetVehicleIndicatorLights(vehicle: number): number;
    function GetVehicleIndividualDoorLockStatus(vehicle: number, doorIndex: number): number;
    function N_0xca4ac3eaae46ec7b(vehicle: number, doorIndex: number): number;
    function GetVehicleDoorDestroyType(vehicle: number, doorIndex: number): number;
    function GetVehicleInteriorColor(vehicle: number, color: number): number;
    function GetVehicleInteriorColour(vehicle: number, color: number): number;
    function GetVehicleIsMercenary(vehicle: number): boolean;
    function N_0xd4c4642cb7f50b5d(vehicle: number): boolean;
    function GetVehicleLayoutHash(vehicle: number): number;
    function GetVehicleLightMultiplier(vehicle: number): number;
    function GetVehicleLightsState(vehicle: number): LuaMultiReturn<[boolean, boolean, boolean]>;
    function GetVehicleLivery(vehicle: number): number;
    function GetVehicleLiveryCount(vehicle: number): number;
    function GetVehicleLockOnTarget(vehicle: number, entity: number): LuaMultiReturn<[boolean, number]>;
    function GetVehicleOwner(vehicle: number, entity: number): LuaMultiReturn<[boolean, number]>;
    function GetVehicleMaxBraking(vehicle: number): number;
    function GetVehicleMaxNumberOfPassengers(vehicle: number): number;
    function GetVehicleMaxTraction(vehicle: number): number;
    function GetVehicleMod(vehicle: number, modType: number): number;
    function GetVehicleModColor_1(vehicle: number): LuaMultiReturn<[number, number, number]>;
    function GetVehicleModColor_1Name(vehicle: number, p1: boolean): string;
    function N_0xb45085b721efd38c(vehicle: number, p1: boolean): string;
    function GetVehicleModColor_2(vehicle: number): LuaMultiReturn<[number, number]>;
    function GetVehicleModColor_2Name(vehicle: number): string;
    function N_0x4967a516ed23a5a1(vehicle: number): string;
    function GetVehicleModIdentifierHash(vehicle: number, modType: number, modIndex: number): number;
    function N_0x4593cf82aa179706(vehicle: number, modType: number, modIndex: number): number;
    function GetVehicleModData(vehicle: number, modType: number, modIndex: number): number;
    function GetVehicleModKit(vehicle: number): number;
    function GetVehicleModKitType(vehicle: number): number;
    function GetVehicleModModifierValue(vehicle: number, modType: number, modIndex: number): number;
    function GetVehicleModVariation(vehicle: number, modType: number): boolean;
    function GetVehicleModelAcceleration(modelHash: number): number;
    function GetVehicleModelEstimatedAgility(modelHash: number): number;
    function N_0x53409b5163d5b846(modelHash: number): number;
    function GetVehicleModelDownForce(modelHash: number): number;
    function GetVehicleModelEstimatedMaxSpeed(modelHash: number): number;
    function GetVehicleModelMaxSpeed(modelHash: number): number;
    function GetVehicleModelMaxBraking(modelHash: number): number;
    function GetVehicleModelMaxBrakingMaxMods(modelHash: number): number;
    function N_0xbfba3ba79cff7ebf(modelHash: number): number;
    function GetVehicleModelHandBrake(modelHash: number): number;
    function GetVehicleModelMaxKnots(modelHash: number): number;
    function N_0xc6ad107ddc9054cc(modelHash: number): number;
    function GetVehicleModelMaxTraction(modelHash: number): number;
    function GetVehicleModelNumberOfSeats(modelHash: number): number;
    function GetVehicleModelMaxNumberOfPassengers(modelHash: number): number;
    function GetVehicleModelValue(vehicleModel: number): number;
    function N_0x5873c14a52d74236(vehicleModel: number): number;
    function GetVehicleModelMonetaryValue(vehicleModel: number): number;
    function GetVehicleNeonLightsColour(vehicle: number): LuaMultiReturn<[number, number, number]>;
    function GetVehicleNextGear(vehicle: number): number;
    function GetVehicleNodeIsGpsAllowed(nodeID: number): boolean;
    function N_0xa2ae5c478b96e3b6(nodeID: number): boolean;
    function GetSupportsGpsRouteFlag(nodeID: number): boolean;
    function GetVehicleNodeIsSwitchedOff(nodeID: number): boolean;
    function N_0x4f5070aa58f69279(nodeID: number): boolean;
    function GetIsSlowRoadFlag(nodeID: number): boolean;
    function GetVehicleNodePosition(nodeId: number): Vector3;
    function GetVehicleNodeProperties(x: number, y: number, z: number): LuaMultiReturn<[boolean, number, number]>;
    function GetVehicleNumberOfBrokenBones(vehicle: number): number;
    function N_0x2c8cbfe1ea5fc631(vehicle: number): number;
    function GetVehicleNumberOfBrokenOffBones(vehicle: number): number;
    function N_0x42a4beb35d372407(vehicle: number): number;
    function GetVehicleNumberOfPassengers(vehicle: number): number;
    function GetVehicleNumberOfWheels(vehicle: number): number;
    function GetVehicleNumberPlateText(vehicle: number): string;
    function GetVehicleNumberPlateTextIndex(vehicle: number): number;
    function GetVehicleOilLevel(vehicle: number): number;
    function GetVehiclePedIsEntering(ped: number): number;
    function SetExclusivePhoneRelationships(ped: number): number;
    function GetVehiclePedIsIn(ped: number, lastVehicle: boolean): number;
    function GetVehiclePedIsTryingToEnter(ped: number): number;
    function GetVehiclePedIsUsing(ped: number): number;
    function GetVehiclePetrolTankHealth(vehicle: number): number;
    function GetVehiclePlateType(vehicle: number): number;
    function GetVehicleRecordingId(recording: number, script: string): number;
    function GetVehicleRoofLivery(vehicle: number): number;
    function N_0x60190048c0764a26(vehicle: number): number;
    function GetVehicleRoofLiveryCount(vehicle: number): number;
    function N_0x5ecb40269053c0d4(vehicle: number): number;
    function GetVehicleSteeringAngle(vehicle: number): number;
    function GetVehicleSteeringScale(vehicle: number): number;
    function GetVehicleSuspensionBounds(vehicle: number): LuaMultiReturn<[number, Vector3]>;
    function N_0xdf7e3eeb29642c38(vehicle: number): LuaMultiReturn<[number, Vector3]>;
    function GetVehicleSuspensionHeight(vehicle: number): number;
    function GetVehicleThrottleOffset(vehicle: number): number;
    function GetVehicleCurrentAcceleration(vehicle: number): number;
    function GetVehicleTopSpeedModifier(vehicle: number): number;
    function GetVehicleTrailerVehicle(vehicle: number, trailer: number): LuaMultiReturn<[boolean, number]>;
    function GetVehicleTurboPressure(vehicle: number): number;
    function GetVehicleTyreSmokeColor(vehicle: number): LuaMultiReturn<[number, number, number]>;
    function GetVehicleTyresCanBurst(vehicle: number): boolean;
    function GetVehicleWaypointProgress(vehicle: number): number;
    function GetVehicleWaypointTargetPoint(vehicle: number): number;
    function GetVehicleWeaponCapacity(vehicle: number, weaponIndex: number): number;
    function N_0x8181ce2f25cb9bb7(vehicle: number, weaponIndex: number): number;
    function GetVehicleWheelBrakePressure(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelFlags(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelHealth(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelIsPowered(vehicle: number, wheelIndex: number): boolean;
    function GetVehicleWheelPower(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelRimColliderSize(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelRotationSpeed(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelSize(vehicle: number): number;
    function GetVehicleWheelSpeed(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelSteeringAngle(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelSurfaceMaterial(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelSuspensionCompression(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelTireColliderSize(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelTireColliderWidth(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelTractionVectorLength(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelType(vehicle: number): number;
    function GetVehicleWheelWidth(vehicle: number): number;
    function GetVehicleWheelXOffset(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelYRotation(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelXrot(vehicle: number, wheelIndex: number): number;
    function GetVehicleWheelieState(vehicle: number): number;
    function GetVehicleWindowTint(vehicle: number): number;
    function GetVehicleXenonLightsColor(vehicle: number): number;
    function N_0x3dff319a831e0cdb(vehicle: number): number;
    function GetVehicleHeadlightsColour(vehicle: number): number;
    function GetVehicleXenonLightsColour(vehicle: number): number;
    function GetVehicleXenonLightsCustomColor(vehicle: number): LuaMultiReturn<[boolean, number, number, number]>;
    function GetWantedLevelParoleDuration(): number;
    function N_0xa72200f51875fea4(): number;
    function GetWantedLevelRadius(player: number): number;
    function GetWantedLevelThreshold(wantedLevel: number): number;
    function GetWarningMessageTitleHash(): number;
    function GetWaterHeight(x: number, y: number, z: number, height: number): LuaMultiReturn<[boolean, number]>;
    function GetWaterHeightNoWaves(x: number, y: number, z: number, height: number): LuaMultiReturn<[boolean, number]>;
    function GetWaterQuadAlpha(waterQuad: number): LuaMultiReturn<[boolean, number, number, number, number]>;
    function GetWaterQuadAtCoords(x: number, y: number): number;
    function GetWaterQuadAtCoords_3d(x: number, y: number, z: number): number;
    function GetWaterQuadBounds(waterQuad: number): LuaMultiReturn<[boolean, number, number, number, number]>;
    function GetWaterQuadCount(): number;
    function GetWaterQuadHasLimitedDepth(waterQuad: number, hasLimitedDepth: number): LuaMultiReturn<[boolean, number]>;
    function GetWaterQuadIsInvisible(waterQuad: number, isInvisible: number): LuaMultiReturn<[boolean, number]>;
    function GetWaterQuadLevel(waterQuad: number, waterQuadLevel: number): LuaMultiReturn<[boolean, number]>;
    function GetWaterQuadNoStencil(waterQuad: number, noStencil: number): LuaMultiReturn<[boolean, number]>;
    function GetWaterQuadType(waterQuad: number, waterType: number): LuaMultiReturn<[boolean, number]>;
    function GetWaveQuadAmplitude(waveQuad: number, waveQuadAmplitude: number): LuaMultiReturn<[boolean, number]>;
    function GetWaveQuadAtCoords(x: number, y: number): number;
    function GetWaveQuadBounds(waveQuad: number): LuaMultiReturn<[boolean, number, number, number, number]>;
    function GetWaveQuadCount(): number;
    function GetWaveQuadDirection(waveQuad: number): LuaMultiReturn<[boolean, number, number]>;
    function GetWaypointBlipEnumId(): number;
    function GetBlipInfoIdIterator(): number;
    function GetWaypointDistanceAlongRoute(p0: string, p1: number): number;
    function GetWeaponAnimationOverride(ped: number): number;
    function GetWeaponClipSize(weaponHash: number): number;
    function GetWeaponComponentAccuracyModifier(componentHash: number): number;
    function GetWeaponComponentCameraHash(componentHash: number): number;
    function GetWeaponComponentClipSize(componentHash: number): number;
    function GetWeaponComponentDamageModifier(componentHash: number): number;
    function GetWeaponComponentHudStats(componentHash: number, outData: number): LuaMultiReturn<[boolean, number]>;
    function GetWeaponComponentRangeDamageModifier(componentHash: number): number;
    function GetWeaponComponentRangeModifier(componentHash: number): number;
    function GetWeaponComponentReticuleHash(componentHash: number): number;
    function GetWeaponComponentTypeModel(componentHash: number): number;
    function GetWeaponComponentVariantExtraComponentCount(componentHash: number): number;
    function N_0x6558ac7c17bfef58(componentHash: number): number;
    function GetWeaponComponentVariantExtraComponentModel(componentHash: number, extraComponentIndex: number): number;
    function N_0x4d1cb8dc40208a17(componentHash: number, extraComponentIndex: number): number;
    function GetWeaponDamage(weaponHash: number, componentHash: number): number;
    function N_0x3133b907d8b32053(weaponHash: number, componentHash: number): number;
    function GetWeaponDamageModifier(weaponHash: number): number;
    function GetWeaponDamageType(weaponHash: number): number;
    function GetWeaponHudStats(weaponHash: number, outData: number): LuaMultiReturn<[boolean, number]>;
    function GetWeaponObjectFromPed(ped: number, p1: boolean): number;
    function GetWeaponObjectLiveryColor(weaponObject: number, camoComponentHash: number): number;
    function N_0xb3ea4feabf41464b(weaponObject: number, camoComponentHash: number): number;
    function GetWeaponObjectTintIndex(weapon: number): number;
    function GetWeaponRecoilShakeAmplitude(weaponHash: number): number;
    function GetWeaponTimeBetweenShots(weaponHash: number): number;
    function N_0x065d2aacad8cf7a4(weaponHash: number): number;
    function GetWeaponTintCount(weaponHash: number): number;
    function GetWeaponTypeFromPickupType(pickupHash: number): number;
    function N_0x08f96ca6c551ad51(pickupHash: number): number;
    function GetWeaponHashFromPickup(pickupHash: number): number;
    function GetWeapontypeGroup(weaponHash: number): number;
    function GetWeapontypeModel(weaponHash: number): number;
    function GetWeapontypeSlot(weaponHash: number): number;
    function GetWeatherTypeTransition(): LuaMultiReturn<[number, number, number]>;
    function GetWindDirection(): Vector3;
    function GetWindSpeed(): number;
    function GetWorldCoordFromScreenCoord(screenX: number, screenY: number): LuaMultiReturn<[number, Vector3]>;
    function GetWorldPositionOfEntityBone(entity: number, boneIndex: number): Vector3;
    function GetZoneAtCoords(x: number, y: number, z: number): number;
    function GetZoneFromNameId(zoneName: string): number;
    function GetZonePopschedule(zoneId: number): number;
    function GetZoneScumminess(zoneId: number): number;
    function GiveAchievementToPlayer(achievement: number): boolean;
    function GiveDelayedWeaponToPed(ped: number, weaponHash: number, ammoCount: number, bForceInHand: boolean): void;
    function GiveLoadoutToPed(ped: number, loadoutHash: number): void;
    function N_0x68f8be6af5cdf8a6(ped: number, loadoutHash: number): void;
    function GivePedHelmet(ped: number, cannotRemove: boolean, helmetFlag: number, textureIndex: number): void;
    function GivePedNmMessage(ped: number): void;
    function GivePedToPauseMenu(ped: number, p1: number): void;
    function GivePlayerRagdollControl(player: number, toggle: boolean): void;
    function GiveWeaponComponentToPed(ped: number, weaponHash: number, componentHash: number): void;
    function GiveWeaponComponentToWeaponObject(weaponObject: number, addonHash: number): void;
    function GiveWeaponObjectToPed(weaponObject: number, ped: number): void;
    function GiveWeaponToPed(
        ped: number,
        weaponHash: number,
        ammoCount: number,
        isHidden: boolean,
        bForceInHand: boolean
    ): void;
    function GolfTrailGetMaxHeight(): number;
    function N_0xa4819f5e23e2ffad(): number;
    function GolfTrailGetVisualControlPoint(p0: number): Vector3;
    function N_0xa4664972a9b8f8ba(p0: number): Vector3;
    function GolfTrailSetColour(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number
    ): void;
    function N_0x12995f2e53ffa601(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number
    ): void;
    function GolfTrailSetEnabled(toggle: boolean): void;
    function N_0xa51c4b86b71652ae(toggle: boolean): void;
    function GolfTrailSetFacing(p0: boolean): void;
    function N_0x06f761ea47c1d3ed(p0: boolean): void;
    function GolfTrailSetFixedControlPoint(
        _type: number,
        xPos: number,
        yPos: number,
        zPos: number,
        p4: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function N_0xb1bb03742917a5d6(
        _type: number,
        xPos: number,
        yPos: number,
        zPos: number,
        p4: number,
        red: number,
        green: number,
        blue: number,
        alpha: number
    ): void;
    function GolfTrailSetPath(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: boolean
    ): void;
    function N_0x312342e1a4874f3f(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: boolean
    ): void;
    function GolfTrailSetRadius(p0: number, p1: number, p2: number): void;
    function N_0x2485d34e50a22e84(p0: number, p1: number, p2: number): void;
    function GolfTrailSetShaderParams(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x9cfdd90b2b844bf7(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function GolfTrailSetTessellation(p0: number, p1: number): void;
    function N_0xdbaa5ec848ba2d46(p0: number, p1: number): void;
    function GrassLodResetScriptAreas(): void;
    function N_0x302c91ab2d477f7e(): void;
    function GrassLodShrinkScriptAreas(
        x: number,
        y: number,
        z: number,
        radius: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function N_0x6d955f6a9e0295b1(
        x: number,
        y: number,
        z: number,
        radius: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function HasAchievementBeenPassed(achievement: number): boolean;
    function HasActionModeAssetLoaded(asset: string): boolean;
    function HasAdditionalTextLoaded(slot: number): boolean;
    function HasAnimDictLoaded(animDict: string): boolean;
    function HasAnimEventFired(entity: number, actionHash: number): boolean;
    function HasAnimSetLoaded(animSet: string): boolean;
    function HasAsyncInstallFinished(): boolean;
    function N_0x14832bf2aba53fc5(): boolean;
    function HasBulletImpactedInArea(x: number, y: number, z: number, p3: number, p4: boolean, p5: boolean): boolean;
    function HasBulletImpactedInBox(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: boolean,
        p7: boolean
    ): boolean;
    function HasButtonCombinationJustBeenEntered(hash: number, amount: number): boolean;
    function N_0x071e2a839de82d90(hash: number, amount: number): boolean;
    function HasCheatStringJustBeenEntered(hash: number): boolean;
    function N_0x557e43c447e700a8(hash: number): boolean;
    function HasClipSetLoaded(clipSet: string): boolean;
    function HasClosestObjectOfTypeBeenBroken(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        modelHash: number,
        p5: number
    ): boolean;
    function HasClosestObjectOfTypeBeenCompletelyDestroyed(
        x: number,
        y: number,
        z: number,
        radius: number,
        modelHash: number,
        p5: boolean
    ): boolean;
    function N_0x46494a2475701343(
        x: number,
        y: number,
        z: number,
        radius: number,
        modelHash: number,
        p5: boolean
    ): boolean;
    function HasCloudRequestsFinished(unused: number): LuaMultiReturn<[boolean, boolean]>;
    function Nullify(unused: number): LuaMultiReturn<[boolean, boolean]>;
    function HasCollisionForModelLoaded(model: number): boolean;
    function HasCollisionLoadedAroundEntity(entity: number): boolean;
    function HasCutFileLoaded(cutsceneName: string): boolean;
    function N_0xa1c996c2a744262e(cutsceneName: string): boolean;
    function HasCutsceneCutThisFrame(): boolean;
    function N_0x708bdd8cd795b043(): boolean;
    function HasCutsceneFinished(): boolean;
    function HasCutsceneLoaded(): boolean;
    function HasDirectorModeBeenTriggered(): boolean;
    function N_0xa277800a9eae340e(): boolean;
    function HasEntityAnimFinished(entity: number, animDict: string, animName: string, p3: number): boolean;
    function HasEntityBeenDamagedByAnyObject(entity: number): boolean;
    function HasEntityBeenDamagedByAnyPed(entity: number): boolean;
    function HasEntityBeenDamagedByAnyVehicle(entity: number): boolean;
    function HasEntityBeenDamagedByEntity(entity1: number, entity2: number, p2: boolean): boolean;
    function HasEntityBeenDamagedByWeapon(entity: number, weaponHash: number, weaponType: number): boolean;
    function HasEntityClearLosToEntity(entity1: number, entity2: number, flags: number): boolean;
    function HasEntityClearLosToEntityInFront(entity1: number, entity2: number): boolean;
    function HasEntityClearLosToEntity_2(entity1: number, entity2: number, traceType: number): number;
    function N_0x394bde2a7bba031e(entity1: number, entity2: number, traceType: number): number;
    function HasEntityCollidedWithAnything(entity: number): boolean;
    function HasFilledVehiclePopulation(): boolean;
    function N_0x91d6dd290888cbab(): boolean;
    function HasForceCleanupOccurred(cleanupFlags: number): boolean;
    function HasMinimapOverlayLoaded(id: number): boolean;
    function HasModelLoaded(model: number): boolean;
    function HasMultiplayerAudioDataLoaded(): boolean;
    function N_0x544810ed9db6bbe6(): boolean;
    function HasMultiplayerAudioDataUnloaded(): boolean;
    function N_0x5b50abb1fe3746f4(): boolean;
    function HasNamedPtfxAssetLoaded(fxName: string): boolean;
    function HasNetworkTimeStarted(): boolean;
    function N_0x46718aceedeafc84(): boolean;
    function HasObjectBeenBroken(object: number): boolean;
    function HasPedBeenDamagedByWeapon(ped: number, weaponHash: number, weaponType: number): boolean;
    function HasPedGotWeapon(ped: number, weaponHash: number, p2: boolean): boolean;
    function HasPedGotWeaponComponent(ped: number, weaponHash: number, componentHash: number): boolean;
    function HasPedHeadBlendFinished(ped: number): boolean;
    function HasPedPreloadPropDataFinished(ped: number): boolean;
    function N_0x784002a632822099(ped: number): boolean;
    function HasPedPreloadVariationDataFinished(ped: number): boolean;
    function N_0x66680a92700f43df(ped: number): boolean;
    function HasPedReceivedEvent(ped: number, eventId: number): boolean;
    function HasPedheadshotImgUploadFailed(): boolean;
    function N_0x876928dddfccc9cd(): boolean;
    function HasPedheadshotImgUploadSucceeded(): boolean;
    function N_0xe8a169e666cbc541(): boolean;
    function HasPickupBeenCollected(pickup: number): boolean;
    function HasPlayerBeenShotByCop(player: number, ms: number, p2: boolean): boolean;
    function N_0xbc0753c9ca14b506(player: number, ms: number, p2: boolean): boolean;
    function HasPlayerBeenSpottedInStolenVehicle(player: number): boolean;
    function HasPlayerDamagedAtLeastOneNonAnimalPed(player: number): boolean;
    function HasPlayerDamagedAtLeastOnePed(player: number): boolean;
    function HasPlayerLeftTheWorld(player: number): boolean;
    function HasPreloadModsFinished(p0: number): boolean;
    function HasPtfxAssetLoaded(): boolean;
    function HasResumedFromSuspend(): boolean;
    function N_0xe8b9c0ec9e183f35(): boolean;
    function HasScaleformContainerMovieLoadedIntoParent(scaleformHandle: number): boolean;
    function HasScaleformMovieFilenameLoaded(scaleformName: string): boolean;
    function N_0x0c1c5d756fb5f337(scaleformName: string): boolean;
    function HasNamedScaleformMovieLoaded(scaleformName: string): boolean;
    function HasScaleformMovieLoaded(scaleformHandle: number): boolean;
    function HasScaleformScriptHudMovieLoaded(hudComponent: number): boolean;
    function HasHudScaleformLoaded(hudComponent: number): boolean;
    function HasScriptLoaded(scriptName: string): boolean;
    function HasScriptWithNameHashLoaded(scriptHash: number): boolean;
    function HasStreamedScriptLoaded(scriptHash: number): boolean;
    function HasSoundFinished(soundId: number): boolean;
    function HasStealthModeAssetLoaded(asset: string): boolean;
    function HasStreamedTextureDictLoaded(textureDict: string): boolean;
    function HasThisAdditionalTextLoaded(gxt: string, slot: number): boolean;
    function HasThisCutsceneLoaded(cutsceneName: string): boolean;
    function HasVehicleAssetLoaded(vehicleAsset: number): boolean;
    function HasVehicleGotProjectileAttached(driver: number, vehicle: number, weaponHash: number, p3: number): boolean;
    function HasVehiclePhoneExplosiveDevice(): boolean;
    function N_0x6adaabd3068c5235(): boolean;
    function HasVehicleRecordingBeenLoaded(recording: number, script: string): boolean;
    function HasWeaponAssetLoaded(weaponHash: number): boolean;
    function HasWeaponGotWeaponComponent(weapon: number, addonHash: number): boolean;
    function HaveAllStreamingRequestsCompleted(ped: number): boolean;
    function N_0x7350823473013c02(ped: number): boolean;
    function HasStreamedPedAssetsLoaded(ped: number): boolean;
    function HaveCreditsReachedEnd(): boolean;
    function N_0x075f1d57402c93ba(): boolean;
    function HaveVehicleModsStreamedIn(vehicle: number): boolean;
    function N_0x9a83f5f9963775ef(vehicle: number): boolean;
    function IsVehicleModLoadDone(vehicle: number): boolean;
    function HideAreaAndVehicleNameThisFrame(): void;
    function N_0xa4dede28b1814289(): void;
    function HideHelpTextThisFrame(): void;
    function HideHudAndRadarThisFrame(): void;
    function HideHudComponentThisFrame(id: number): void;
    function HideLoadingOnFadeThisFrame(): void;
    function HideMinimapExteriorMapThisFrame(): void;
    function DisableRadarThisFrame(): void;
    function HideMinimapInteriorMapThisFrame(): void;
    function N_0x20fe7fdfeead38c0(): void;
    function HideNumberOnBlip(blip: number): void;
    function HidePedBloodDamageByZone(ped: number, p1: number, p2: boolean): void;
    function N_0x62ab793144de75dc(ped: number, p1: number, p2: boolean): void;
    function HidePedWeaponForScriptedCutscene(ped: number, toggle: boolean): void;
    function HidePortablePickupWhenDetached(pickup: number, toggle: boolean): void;
    function N_0x867458251d47ccb2(pickup: number, toggle: boolean): void;
    function HidePickup(pickup: number, toggle: boolean): void;
    function HideScriptedHudComponentThisFrame(id: number): void;
    function HideVehicleTombstone(vehicle: number, toggle: boolean): void;
    function HintAmbientAudioBank(p0: number, p1: number): number;
    function HintScriptAudioBank(p0: number, p1: number): number;
    function HiredLimo(p0: number, p1: number): void;
    function N_0x792271ab35c356a4(p0: number, p1: number): void;
    function HudDisplayLoadingScreenTips(): void;
    function N_0x488043841bbe156f(): void;
    function HudForceWeaponWheel(show: boolean): void;
    function N_0xeb354e5376bc81a7(show: boolean): void;
    function ShowWeaponWheel(show: boolean): void;
    function HudSetWeaponWheelTopSlot(weaponHash: number): void;
    function N_0x72c1056d678bb7d8(weaponHash: number): void;
    function HudWeaponWheelSetSlotHash(weaponHash: number): void;
    function HudWeaponWheelGetSelectedHash(): number;
    function N_0xa48931185f0536fe(): number;
    function HudWeaponWheelGetSlotHash(weaponTypeIndex: number): number;
    function N_0xa13e93403f26c812(weaponTypeIndex: number): number;
    function HudWeaponWheelIgnoreControlInput(toggle: boolean): void;
    function N_0x14c9fdcc41f81f63(toggle: boolean): void;
    function HudWeaponWheelIgnoreSelection(): void;
    function BlockWeaponWheelThisFrame(): void;
    function N_0x0afc4af510774b47(): void;
    function IgnoreNextRestart(toggle: boolean): void;
    function InitCreatorBudget(): void;
    function N_0xb5a4db34fe89b88a(): void;
    function LoadMissionCreatorData(): void;
    function InitShopPedComponent(outComponent: number): void;
    function InitShopPedProp(outProp: number): void;
    function InstantlyFillPedPopulation(): void;
    function N_0x4759cc730f947c81(): void;
    function InstantlyFillVehiclePopulation(): void;
    function N_0x48adc8a773564670(): void;
    function IntToParticipantindex(value: number): number;
    function IntToPlayerindex(value: number): number;
    function InterruptConversation(p0: number): LuaMultiReturn<[number, number]>;
    function InterruptConversationAndPause(ped: number, p1: string, p2: string): void;
    function N_0x8a694d7a68f8dc38(ped: number, p1: string, p2: string): void;
    function InvalidateIdleCam(): void;
    function N_0xf4f2c0d4ee209e20(): void;
    function InvalidateVehicleIdleCam(): void;
    function N_0x9e4cfff989258472(): void;
    function InvokeFunctionReference(
        referenceIdentity: string,
        argsSerialized: string,
        argsLength: number,
        retvalLength: number
    ): LuaMultiReturn<[string, number]>;
    function IsAceAllowed(object: string): boolean;
    function IsAimCamActive(): boolean;
    function IsAimCamThirdPersonActive(): boolean;
    function N_0x74bd83ea840f6bc9(): boolean;
    function IsAlarmPlaying(alarmName: string): boolean;
    function IsAmbientSpeechDisabled(ped: number): boolean;
    function IsAmbientSpeechPlaying(ped: number): boolean;
    function IsAmbientZoneEnabled(ambientZone: string): boolean;
    function IsAnEntity(handle: number): boolean;
    function IsAnimalVocalizationPlaying(pedHandle: number): boolean;
    function N_0xc265df9fb44a9fbd(pedHandle: number): boolean;
    function IsAnyAirDefenseZoneInsideSphere(
        x: number,
        y: number,
        z: number,
        radius: number,
        SphereIndex: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0xdab963831dbfd3f4(
        x: number,
        y: number,
        z: number,
        radius: number,
        SphereIndex: number
    ): LuaMultiReturn<[boolean, number]>;
    function IsAirDefenseZoneInsideSphere(
        x: number,
        y: number,
        z: number,
        radius: number,
        SphereIndex: number
    ): LuaMultiReturn<[boolean, number]>;
    function IsAnyEntityAttachedToHandlerFrame(vehicle: number): boolean;
    function N_0x62ca17b74c435651(vehicle: number): boolean;
    function IsAnyEntityEntirelyInsideGarage(
        garageHash: number,
        p1: boolean,
        p2: boolean,
        p3: boolean,
        p4: number
    ): boolean;
    function N_0x673ed815d6e323b7(garageHash: number, p1: boolean, p2: boolean, p3: boolean, p4: number): boolean;
    function IsAnyHostilePedNearPoint(ped: number, x: number, y: number, z: number, radius: number): boolean;
    function N_0x68772db2b2526f9f(ped: number, x: number, y: number, z: number, radius: number): boolean;
    function IsAnyObjectNearPoint(x: number, y: number, z: number, range: number, p4: boolean): boolean;
    function IsAnyPedNearPoint(x: number, y: number, z: number, radius: number): boolean;
    function IsAnyPedRappellingFromHeli(vehicle: number): boolean;
    function N_0x291e373d483e7ee7(vehicle: number): boolean;
    function AnyPassengersRappeling(vehicle: number): boolean;
    function IsAnyPassengerRappelingFromVehicle(vehicle: number): boolean;
    function IsAnyPedShootingInArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        p6: boolean,
        p7: boolean
    ): boolean;
    function IsAnySpeechPlaying(ped: number): boolean;
    function IsAnyVehicleNearPoint(x: number, y: number, z: number, radius: number): boolean;
    function IsAreaOccupied(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: boolean,
        p7: boolean,
        p8: boolean,
        p9: boolean,
        p10: boolean,
        p11: number,
        p12: boolean
    ): boolean;
    function IsAudioSceneActive(scene: string): boolean;
    function IsAussieVersion(): boolean;
    function IsAutoSaveInProgress(): boolean;
    function IsBigVehicle(vehicle: number): boolean;
    function IsBigmapActive(): boolean;
    function IsBigmapFull(): boolean;
    function IsBitSet(address: number, offset: number): boolean;
    function IsBlipFlashing(blip: number): boolean;
    function IsBlipOnMinimap(blip: number): boolean;
    function IsBlipShortRange(blip: number): boolean;
    function IsBoatAnchoredAndFrozen(vehicle: number): boolean;
    function N_0xb0ad1238a709b1a2(vehicle: number): boolean;
    function IsBonnetCinematicCamRendering(): boolean;
    function N_0xd7360051c885628b(): boolean;
    function IsBulletInAngledArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number,
        ownedByPlayer: boolean
    ): boolean;
    function IsBulletInArea(x: number, y: number, z: number, radius: number, ownedByPlayer: boolean): boolean;
    function IsBulletInBox(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        ownedByPlayer: boolean
    ): boolean;
    function IsCamActive(cam: number): boolean;
    function IsCamInterpolating(cam: number): boolean;
    function IsCamPlayingAnim(cam: number, animName: string, animDictionary: string): boolean;
    function IsCamRendering(cam: number): boolean;
    function IsCamShaking(cam: number): boolean;
    function IsCamSplinePaused(p0: number): boolean;
    function IsCinematicCamInputActive(): boolean;
    function N_0xf5f1e89a970b7796(): boolean;
    function IsCinematicCamActive(): boolean;
    function IsCinematicCamRendering(): boolean;
    function IsCinematicCamShaking(): boolean;
    function IsCinematicIdleCamRendering(): boolean;
    function N_0xca9d2aa3e326d720(): boolean;
    function IsCinematicShotActive(p0: number): boolean;
    function IsCollisionMarkedOutside(x: number, y: number, z: number): boolean;
    function N_0xeea5ac2eda7c33e8(x: number, y: number, z: number): boolean;
    function AreCoordsCollidingWithExterior(x: number, y: number, z: number): boolean;
    function IsCommandLineBenchmarkValueSet(): boolean;
    function N_0xa049a5be0f04f2f8(): boolean;
    function IsCommerceDataValid(): boolean;
    function N_0xea14eef5b7cd2c30(): boolean;
    function IsCommerceStoreOpen(): boolean;
    function N_0x2eac52b4019e2782(): boolean;
    function IsContentItemLocked(itemHash: number): boolean;
    function IsOutfitEmpty(itemHash: number): boolean;
    function IsDlcDataEmpty(itemHash: number): boolean;
    function IsControlEnabled(padIndex: number, control: number): boolean;
    function IsControlJustPressed(padIndex: number, control: number): boolean;
    function IsControlJustReleased(padIndex: number, control: number): boolean;
    function IsControlPressed(padIndex: number, control: number): boolean;
    function IsControlReleased(padIndex: number, control: number): boolean;
    function IsConversationPedDead(ped: number): boolean;
    function IsCopPedInArea_3d(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    function IsCopVehicleInArea_3d(x1: number, x2: number, y1: number, y2: number, z1: number, z2: number): boolean;
    function IsCutsceneActive(): boolean;
    function IsCutscenePlaybackFlagSet(flag: number): boolean;
    function N_0x71b74d2ae19338d0(flag: number): boolean;
    function IsCutscenePlaying(): boolean;
    function IsDamageTrackerActiveOnNetworkId(netID: number): boolean;
    function IsDamageTrackerActiveOnPlayer(player: number): boolean;
    function N_0xb2092a1eaa7fd45f(player: number): boolean;
    function IsDecalAlive(decal: number): boolean;
    function IsDisabledControlJustPressed(padIndex: number, control: number): boolean;
    function IsDisabledControlJustReleased(padIndex: number, control: number): boolean;
    function IsDisabledControlPressed(padIndex: number, control: number): boolean;
    function IsDisabledControlReleased(padIndex: number, control: number): boolean;
    function N_0xfb6c4072e9a32e92(padIndex: number, control: number): boolean;
    function IsDlcPresent(dlcHash: number): boolean;
    function IsDlcVehicleMod(hash: number): boolean;
    function N_0x0564b9ff9631b82c(hash: number): boolean;
    function IsDoorClosed(doorHash: number): boolean;
    function IsDoorRegisteredWithSystem(doorHash: number): boolean;
    function N_0xc153c43ea202c8c1(doorHash: number): boolean;
    function DoesDoorExist(doorHash: number): boolean;
    function IsDrivebyTaskUnderneathDrivingTask(ped: number): boolean;
    function IsDuiAvailable(duiObject: number): boolean;
    function IsDuplicityVersion(): boolean;
    function IsDurangoVersion(): boolean;
    function IsEntityAMissionEntity(entity: number): boolean;
    function IsEntityAPed(entity: number): boolean;
    function IsEntityAVehicle(entity: number): boolean;
    function IsEntityAnObject(entity: number): boolean;
    function IsEntityAtCoord(
        entity: number,
        xPos: number,
        yPos: number,
        zPos: number,
        xSize: number,
        ySize: number,
        zSize: number,
        p7: boolean,
        p8: boolean,
        p9: number
    ): boolean;
    function IsEntityAtEntity(
        entity1: number,
        entity2: number,
        xSize: number,
        ySize: number,
        zSize: number,
        p5: boolean,
        p6: boolean,
        p7: number
    ): boolean;
    function IsEntityAttached(entity: number): boolean;
    function IsEntityAttachedToAnyObject(entity: number): boolean;
    function IsEntityAttachedToAnyPed(entity: number): boolean;
    function IsEntityAttachedToAnyVehicle(entity: number): boolean;
    function IsEntityAttachedToEntity(_from: number, to: number): boolean;
    function IsEntityAttachedToHandlerFrame(vehicle: number, entity: number): boolean;
    function SetPedEnabledBikeRingtone(vehicle: number, entity: number): boolean;
    function IsVehicleNearEntity(vehicle: number, entity: number): boolean;
    function IsEntityDead(entity: number): boolean;
    function IsEntityFocus(entity: number): boolean;
    function IsEntityGhostedToLocalPlayer(entity: number): boolean;
    function N_0x21d04d7bc538c146(entity: number): boolean;
    function IsEntityAGhost(entity: number): boolean;
    function IsEntityInAir(entity: number): boolean;
    function IsEntityInAngledArea(
        entity: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number,
        debug: boolean,
        includez: boolean,
        p10: number
    ): boolean;
    function IsEntityInArea(
        entity: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        p7: boolean,
        p8: boolean,
        p9: number
    ): boolean;
    function IsEntityInWater(entity: number): boolean;
    function IsEntityInZone(entity: number, zone: string): boolean;
    function IsEntityOccluded(entity: number): boolean;
    function IsEntityOnFire(entity: number): boolean;
    function IsEntityOnScreen(entity: number): boolean;
    function IsEntityPlayingAnim(entity: number, animDict: string, animName: string, taskFlag: number): boolean;
    function IsEntityPositionFrozen(entity: number): boolean;
    function IsEntityStatic(entity: number): boolean;
    function IsEntityTouchingEntity(entity: number, targetEntity: number): boolean;
    function IsEntityTouchingModel(entity: number, modelHash: number): boolean;
    function IsEntityUpright(entity: number, angle: number): boolean;
    function IsEntityUpsidedown(entity: number): boolean;
    function IsEntityVisible(entity: number): boolean;
    function IsEntityVisibleToScript(entity: number): boolean;
    function IsEntityWaitingForWorldCollision(entity: number): boolean;
    function IsExplosionActiveInArea(
        explosionType: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number
    ): boolean;
    function N_0x6070104b699b2ef4(
        explosionType: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number
    ): boolean;
    function IsExplosionInAngledArea(
        explosionType: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number
    ): boolean;
    function IsExplosionInArea(
        explosionType: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number
    ): boolean;
    function IsExplosionInSphere(explosionType: number, x: number, y: number, z: number, radius: number): boolean;
    function IsFirstPersonAimCamActive(): boolean;
    function IsFlashLightOn(ped: number): boolean;
    function SetWeaponSmokegrenadeAssigned(ped: number): boolean;
    function IsFloatingHelpTextOnScreen(hudIndex: number): boolean;
    function N_0x2432784aca090da4(hudIndex: number): boolean;
    function IsFollowPedCamActive(): boolean;
    function IsFollowVehicleCamActive(): boolean;
    function IsFrontendFading(): boolean;
    function IsFrontendReadyForControl(): boolean;
    function N_0x3bab9a4e4f2ff5c7(): boolean;
    function IsGameInControlOfMusic(): boolean;
    function IsGameplayCamLookingBehind(): boolean;
    function IsGameplayCamRendering(): boolean;
    function IsGameplayCamShaking(): boolean;
    function IsGameplayHintActive(): boolean;
    function IsGarageEmpty(garageHash: number, p1: boolean, p2: number): boolean;
    function IsHandlerFrameAboveContainer(handler: number, container: number): boolean;
    function N_0x89d630cf5ea96d23(handler: number, container: number): boolean;
    function IsHeliLandingAreaBlocked(vehicle: number): boolean;
    function N_0x634148744f385576(vehicle: number): boolean;
    function IsHeliPartBroken(vehicle: number, p1: boolean, p2: boolean, p3: boolean): boolean;
    function IsHelpMessageBeingDisplayed(): boolean;
    function IsHelpMessageFadingOut(): boolean;
    function IsHelpMessageOnScreen(): boolean;
    function IsHornActive(vehicle: number): boolean;
    function IsHoveringOverMissionCreatorBlip(): boolean;
    function N_0x4167efe0527d706e(): boolean;
    function IsHudComponentActive(id: number): boolean;
    function IsHudHidden(): boolean;
    function IsHudPreferenceSwitchedOn(): boolean;
    function IsInItemset(p0: number, p1: number): boolean;
    function IsInPowerSavingMode(): boolean;
    function N_0x684a41975f077262(): boolean;
    function IsInVehicleCamDisabled(): boolean;
    function N_0x4f32c0d5a90a9b40(): boolean;
    function IsIncidentValid(incidentId: number): boolean;
    function IsInteriorCapped(interiorID: number): boolean;
    function IsInteriorDisabled(interior: number): boolean;
    function IsInteriorEntitySetActive(interior: number, entitySetName: string): boolean;
    function N_0x35f7dd45e8c0a16d(interior: number, entitySetName: string): boolean;
    function IsInteriorPropEnabled(interior: number, entitySetName: string): boolean;
    function IsInteriorReady(interiorID: number): boolean;
    function IsInteriorRenderingDisabled(): boolean;
    function IsInteriorScene(): boolean;
    function IsIplActive(iplName: string): boolean;
    function IsItemsetValid(p0: number): boolean;
    function IsLookInverted(): boolean;
    function IsMemoryCardInUse(): boolean;
    function IsMessageBeingDisplayed(): boolean;
    function IsMinigameInProgress(): boolean;
    function IsMinimapInInterior(): boolean;
    function N_0x9049fe339d5f6f6f(): boolean;
    function IsMinimapRendering(): boolean;
    function N_0xaf754f20eb5cd51a(): boolean;
    function IsRadarEnabled(): boolean;
    function IsMissionCompletePlaying(): boolean;
    function IsMissionCompleteReadyForUi(): boolean;
    function N_0x6f259f82d873b8b8(): boolean;
    function IsMissionCreatorBlip(blip: number): boolean;
    function IsMissionNewsStoryUnlocked(newsStory: number): boolean;
    function GetNumberOfPassengerVoiceVariations(newsStory: number): boolean;
    function IsMissionTrain(vehicle: number): boolean;
    function IsMobilePhoneCallOngoing(): boolean;
    function IsMobilePhoneRadioActive(): boolean;
    function IsModelAPed(model: number): boolean;
    function IsModelAVehicle(model: number): boolean;
    function IsModelInCdimage(model: number): boolean;
    function IsModelValid(model: number): boolean;
    function IsMountedWeaponTaskUnderneathDrivingTask(ped: number): boolean;
    function IsMouseCursorAboveInstructionalButtons(): boolean;
    function N_0x3d9acb1eb139e702(): boolean;
    function IsMoveBlendRatioRunning(ped: number): boolean;
    function IsMoveBlendRatioSprinting(ped: number): boolean;
    function IsMoveBlendRatioStill(ped: number): boolean;
    function IsMoveBlendRatioWalking(ped: number): boolean;
    function IsMpGamerTagActive(gamerTagId: number): boolean;
    function N_0x4e929e7a5796fd26(gamerTagId: number): boolean;
    function IsMpGamerTagFree(gamerTagId: number): boolean;
    function AddTrevorRandomModifier(gamerTagId: number): boolean;
    function IsMpGamerTagMovieActive(): boolean;
    function N_0x6e0eb3eb47c8d7aa(): boolean;
    function HasMpGamerTag(): boolean;
    function IsMultiplayerChatActive(): boolean;
    function IsTextChatActive(): boolean;
    function IsMusicOneshotPlaying(): boolean;
    function N_0xa097ab275061fb21(): boolean;
    function IsNamedRendertargetLinked(modelHash: number): boolean;
    function IsNamedRendertargetRegistered(name: string): boolean;
    function IsNavigatingMenuContent(): number;
    function N_0x4e3cd0ef8a489541(): number;
    function IsNavmeshLoadedInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    function IsNavmeshRequiredRegionOwnedByAnyThread(): boolean;
    function N_0x705a844002b39dc0(): boolean;
    function IsNetworkIdOwnedByParticipant(netId: number): boolean;
    function N_0xa1607996431332df(netId: number): boolean;
    function NetworkCanNetworkIdBeSeen(netId: number): boolean;
    function IsNetworkLoadingScene(): boolean;
    function IsNewLoadSceneActive(): boolean;
    function IsNewLoadSceneLoaded(): boolean;
    function IsNextWeatherType(weatherType: string): boolean;
    function IsNuiFocusKeepingInput(): boolean;
    function IsNuiFocused(): boolean;
    function IsObjectAPickup(object: number): boolean;
    function N_0xfc481c641ebbd27d(object: number): boolean;
    function IsObjectAPortablePickup(object: number): boolean;
    function N_0x0378c08504160d0d(object: number): boolean;
    function IsObjectEntirelyInsideGarage(garageHash: number, entity: number, p2: number, p3: number): boolean;
    function N_0x372ef6699146a1e4(garageHash: number, entity: number, p2: number, p3: number): boolean;
    function IsObjectNearPoint(objectHash: number, x: number, y: number, z: number, range: number): boolean;
    function IsObjectPartiallyInsideGarage(garageHash: number, entity: number, p2: number): boolean;
    function N_0xf0eed5a6bc7b237a(garageHash: number, entity: number, p2: number): boolean;
    function IsObjectVisible(object: number): boolean;
    function IsObjectWithinBrainActivationRange(object: number): boolean;
    function IsOnlinePoliciesMenuActive(): boolean;
    function N_0x6f72cd94f7b5b68c(): boolean;
    function IsOrbisVersion(): boolean;
    function IsPauseMenuActive(): boolean;
    function IsPauseMenuRestarting(): boolean;
    function IsPcVersion(): boolean;
    function IsPedAPlayer(ped: number): boolean;
    function IsPedActiveInScenario(ped: number): boolean;
    function IsPedAimingFromCover(ped: number): boolean;
    function IsPedArmed(ped: number, typeFlags: number): boolean;
    function IsPedBeingArrested(ped: number): boolean;
    function IsPedBeingJacked(ped: number): boolean;
    function IsPedBeingStealthKilled(ped: number): boolean;
    function IsPedBeingStunned(ped: number, p1: number): boolean;
    function IsPedBlushColorValid(colorID: number): boolean;
    function N_0x604e810189ee3a59(colorID: number): boolean;
    function IsPedBlushColorValid_2(colorId: number): boolean;
    function N_0xf41b5d290c99a3d6(colorId: number): boolean;
    function IsPedBodyBlemishValid(colorID: number): boolean;
    function N_0x09e7eca981d9b210(colorID: number): boolean;
    function IsPedClimbing(ped: number): boolean;
    function IsPedComponentVariationGen9Exclusive(ped: number, componentId: number, drawableId: number): boolean;
    function IsPedComponentVariationValid(
        ped: number,
        componentId: number,
        drawableId: number,
        textureId: number
    ): boolean;
    function IsPedCuffed(ped: number): boolean;
    function IsPedCurrentWeaponSilenced(ped: number): boolean;
    function IsPedDeadOrDying(ped: number, p1: boolean): boolean;
    function IsPedDefensiveAreaActive(ped: number, p1: boolean): boolean;
    function N_0xba63d9fe45412247(ped: number, p1: boolean): boolean;
    function IsPedDiving(ped: number): boolean;
    function IsPedDoingBeastJump(ped: number): boolean;
    function N_0x451d05012ccec234(ped: number): boolean;
    function IsPedDoingDriveby(ped: number): boolean;
    function IsPedDucking(ped: number): boolean;
    function IsPedEvasiveDiving(ped: number, evadingEntity: number): LuaMultiReturn<[boolean, number]>;
    function IsPedExclusiveDriverOfVehicle(
        ped: number,
        vehicle: number,
        outIndex: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0xb09d25e77c33eb3f(ped: number, vehicle: number, outIndex: number): LuaMultiReturn<[boolean, number]>;
    function IsPedFacingPed(ped: number, otherPed: number, angle: number): boolean;
    function IsPedFalling(ped: number): boolean;
    function IsPedFatallyInjured(ped: number): boolean;
    function IsPedFleeing(ped: number): boolean;
    function IsPedGettingIntoAVehicle(ped: number): boolean;
    function IsPedGettingUp(ped: number): boolean;
    function IsPedGoingIntoCover(ped: number): boolean;
    function IsPedGroupMember(ped: number, groupId: number): boolean;
    function IsPedHairColorValid(colorID: number): boolean;
    function N_0xe0d36e5d9e99cc21(colorID: number): boolean;
    function IsPedHairColorValid_2(colorId: number): boolean;
    function N_0xed6d8e27a43b8cde(colorId: number): boolean;
    function IsPedHangingOnToVehicle(ped: number): boolean;
    function IsPedHeadingTowardsPosition(ped: number, x: number, y: number, z: number, p4: number): boolean;
    function N_0xfcf37a457cb96dc0(ped: number, x: number, y: number, z: number, p4: number): boolean;
    function IsPedHeadtrackingEntity(ped: number, entity: number): boolean;
    function IsPedHeadtrackingPed(ped1: number, ped2: number): boolean;
    function IsPedHelmetUnk(ped: number): boolean;
    function N_0xb9496ce47546db2c(ped: number): boolean;
    function IsPedHuman(ped: number): boolean;
    function IsPedHurt(ped: number): boolean;
    function IsPedInAnyBoat(ped: number): boolean;
    function IsPedInAnyHeli(ped: number): boolean;
    function IsPedInAnyPlane(ped: number): boolean;
    function IsPedInAnyPoliceVehicle(ped: number): boolean;
    function IsPedInAnySub(ped: number): boolean;
    function IsPedInAnyTaxi(ped: number): boolean;
    function IsPedInAnyTrain(ped: number): boolean;
    function IsPedInAnyVehicle(ped: number, atGetIn: boolean): boolean;
    function IsPedInCombat(ped: number, target: number): boolean;
    function IsPedInCover(ped: number, exceptUseWeapon: boolean): boolean;
    function IsPedInCoverFacingLeft(ped: number): boolean;
    function IsPedInCurrentConversation(ped: number): boolean;
    function IsPedInFlyingVehicle(ped: number): boolean;
    function IsPedInGroup(ped: number): boolean;
    function IsPedInHighCover(ped: number): boolean;
    function N_0x6a03bf943d767c93(ped: number): boolean;
    function IsPedStandingInCover(ped: number): boolean;
    function IsPedInMeleeCombat(ped: number): boolean;
    function IsPedInModel(ped: number, modelHash: number): boolean;
    function IsPedInParachuteFreeFall(ped: number): boolean;
    function IsPedInVehicle(ped: number, vehicle: number, atGetIn: boolean): boolean;
    function IsPedInWrithe(ped: number): boolean;
    function IsPedInjured(ped: number): boolean;
    function IsPedJacking(ped: number): boolean;
    function IsPedJumping(ped: number): boolean;
    function IsPedJumpingOutOfVehicle(ped: number): boolean;
    function IsPedLipstickColorValid(colorID: number): boolean;
    function N_0x0525a2c2562f3cd4(colorID: number): boolean;
    function IsPedLipstickColorValid_2(colorId: number): boolean;
    function N_0x3e802f11fbe27674(colorId: number): boolean;
    function IsPedMale(ped: number): boolean;
    function IsPedModel(ped: number, modelHash: number): boolean;
    function IsPedOnAnyBike(ped: number): boolean;
    function IsPedOnFoot(ped: number): boolean;
    function IsPedOnMount(ped: number): boolean;
    function IsPedOnSpecificVehicle(ped: number, vehicle: number): boolean;
    function IsPedOnVehicle(ped: number): boolean;
    function IsPedOpeningADoor(ped: number): boolean;
    function N_0x26af0e8e30bd2a2c(ped: number): boolean;
    function IsPedPerformingDependentComboLimit(ped: number): boolean;
    function N_0xebd0edba5be957cf(ped: number): boolean;
    function IsPedPerformingMeleeAction(ped: number): boolean;
    function N_0xdcca191df9980fd7(ped: number): boolean;
    function IsPedPerformingStealthKill(ped: number): boolean;
    function IsPedPlantingBomb(ped: number): boolean;
    function IsPedPlayingBaseClipInScenario(ped: number): boolean;
    function N_0x621c6e4729388e41(ped: number): boolean;
    function IsPedProne(ped: number): boolean;
    function IsPedRagdoll(ped: number): boolean;
    function IsPedReloading(ped: number): boolean;
    function IsPedRespondingToEvent(ped: number, event: number): boolean;
    function IsPedRingtonePlaying(ped: number): boolean;
    function IsPedRunning(ped: number): boolean;
    function IsPedRunningArrestTask(ped: number): boolean;
    function IsPedRunningMeleeTask(ped: number): boolean;
    function N_0xd1871251f3b5acd7(ped: number): boolean;
    function IsPedRunningMobilePhoneTask(ped: number): boolean;
    function IsPedRunningRagdollTask(ped: number): boolean;
    function IsPedShaderEffectValid(ped: number): boolean;
    function N_0x81aa517fbba05d39(ped: number): boolean;
    function IsPedShooting(ped: number): boolean;
    function IsPedShootingInArea(
        ped: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        p7: boolean,
        p8: boolean
    ): boolean;
    function IsPedSittingInAnyVehicle(ped: number): boolean;
    function IsPedSittingInVehicle(ped: number, vehicle: number): boolean;
    function IsPedSprinting(ped: number): boolean;
    function IsPedStill(ped: number): boolean;
    function IsPedStopped(ped: number): boolean;
    function IsPedStrafing(ped: number): boolean;
    function IsPedSwappingWeapon(Ped: number): boolean;
    function N_0x3795688a307e1eb6(Ped: number): boolean;
    function IsPedSwimming(ped: number): boolean;
    function IsPedSwimmingUnderWater(ped: number): boolean;
    function IsPedTakingOffHelmet(ped: number): boolean;
    function N_0x14590ddbedb1ec85(ped: number): boolean;
    function IsPedTracked(ped: number): boolean;
    function IsPedTryingToEnterALockedVehicle(ped: number): boolean;
    function IsPedUsingActionMode(ped: number): boolean;
    function IsPedUsingAnyScenario(ped: number): boolean;
    function IsPedUsingScenario(ped: number, scenario: string): boolean;
    function IsPedVaulting(ped: number): boolean;
    function IsPedWalking(ped: number): boolean;
    function IsPedWeaponComponentActive(ped: number, weaponHash: number, componentHash: number): boolean;
    function IsPedWeaponReadyToShoot(ped: number): boolean;
    function IsPedWearingHelmet(ped: number): boolean;
    function IsPedheadshotImgUploadAvailable(): boolean;
    function N_0xebb376779a760aa8(): boolean;
    function IsPedheadshotReady(id: number): boolean;
    function IsPedheadshotValid(id: number): boolean;
    function IsPickupWeaponObjectValid(object: number): boolean;
    function N_0x11d1e53a726891fe(object: number): boolean;
    function IsPlaneLandingGearIntact(plane: number): boolean;
    function N_0x4198ab0022b15f87(plane: number): boolean;
    function VehicleHasLandingGear(plane: number): boolean;
    function IsPlaybackGoingOnForVehicle(vehicle: number): boolean;
    function IsPlaybackUsingAiGoingOnForVehicle(vehicle: number): boolean;
    function IsPlayerBattleAware(player: number): boolean;
    function N_0x38d28da81e4e9bf9(player: number): boolean;
    function IsPlayerBeingArrested(player: number, atArresting: boolean): boolean;
    function IsPlayerBluetoothEnable(player: number): boolean;
    function N_0x65faee425de637b0(player: number): boolean;
    function IsPlayerCamControlDisabled(): boolean;
    function N_0x7c814d2fb49f40c0(): boolean;
    function IsPlayerClimbing(player: number): boolean;
    function IsPlayerControlOn(player: number): boolean;
    function IsPlayerDead(player: number): boolean;
    function IsPlayerDrivingDangerously(player: number, _type: number): boolean;
    function N_0xf10b44fd479d69f3(player: number, _type: number): boolean;
    function IsPlayerEntirelyInsideGarage(garageHash: number, player: number, p2: number, p3: number): boolean;
    function N_0x024a60deb0ea69f0(garageHash: number, player: number, p2: number, p3: number): boolean;
    function IsPlayerFreeAiming(player: number): boolean;
    function IsPlayerFreeAimingAtEntity(player: number, entity: number): boolean;
    function IsPlayerFreeForAmbientTask(player: number): boolean;
    function IsPlayerInCutscene(player: number): boolean;
    function IsPlayerLoggingInNp(): boolean;
    function IsPlayerOnline(): boolean;
    function IsPlayerPartiallyInsideGarage(garageHash: number, player: number, p2: number): boolean;
    function N_0x1761dc5d8471cbaa(garageHash: number, player: number, p2: number): boolean;
    function IsPlayerPlaying(player: number): boolean;
    function IsPlayerPressingHorn(player: number): boolean;
    function IsPlayerReadyForCutscene(player: number): boolean;
    function IsPlayerRidingTrain(player: number): boolean;
    function IsPlayerScriptControlOn(player: number): boolean;
    function IsPlayerSwitchInProgress(): boolean;
    function N_0xd9d2cfff49fab35f(): boolean;
    function IsPlayerTargettingAnything(player: number): boolean;
    function IsPlayerTargettingEntity(player: number, entity: number): boolean;
    function IsPlayerTeleportActive(): boolean;
    function IsPlayerVehRadioEnable(): boolean;
    function N_0x5f43d83fd6738741(): boolean;
    function IsPlayerVehicleRadioEnabled(): boolean;
    function IsPlayerWantedLevelGreater(player: number, wantedLevel: number): boolean;
    function IsPlayingPhoneGestureAnim(ped: number): boolean;
    function IsPlaylistUnk(tvChannel: number, p1: number): boolean;
    function IsPointInAngledArea(
        xPos: number,
        yPos: number,
        zPos: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number,
        p10: boolean,
        includez: boolean
    ): boolean;
    function IsPointObscuredByAMissionEntity(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): boolean;
    function IsPointOnRoad(x: number, y: number, z: number, vehicle: number): boolean;
    function IsPopMultiplierAreaUnk(id: number): boolean;
    function IsPositionOccupied(
        x: number,
        y: number,
        z: number,
        range: number,
        p4: boolean,
        checkVehicles: boolean,
        checkPeds: boolean,
        p7: boolean,
        p8: boolean,
        ignoreEntity: number,
        p10: boolean
    ): boolean;
    function IsPrevWeatherType(weatherType: string): boolean;
    function IsPrincipalAceAllowed(principal: string, object: string): boolean;
    function IsProjectileInArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        ownedByPlayer: boolean
    ): boolean;
    function IsProjectileTypeInAngledArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number,
        p7: number,
        weaponHash: number,
        ownedByPlayer: boolean
    ): boolean;
    function IsProjectileTypeInArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        _type: number,
        ownedByPlayer: boolean
    ): boolean;
    function IsProjectileTypeWithinDistance(
        x: number,
        y: number,
        z: number,
        projHash: number,
        radius: number,
        ownedByPlayer: boolean
    ): boolean;
    function N_0x34318593248c8fb2(
        x: number,
        y: number,
        z: number,
        projHash: number,
        radius: number,
        ownedByPlayer: boolean
    ): boolean;
    function IsProjectileTypeInRadius(
        x: number,
        y: number,
        z: number,
        projHash: number,
        radius: number,
        ownedByPlayer: boolean
    ): boolean;
    function IsPs3Version(): boolean;
    function IsRadarHidden(): boolean;
    function IsRadarPreferenceSwitchedOn(): boolean;
    function IsRadioFadedOut(): boolean;
    function N_0x0626a247d2405330(): boolean;
    function IsRadioRetuning(): boolean;
    function IsRadioStationVisible(radioStation: string): boolean;
    function IsRecording(): boolean;
    function IsReportugcMenuOpen(): boolean;
    function N_0x9135584d09a3437e(): boolean;
    function IsRockstarMessageReadyForScript(): boolean;
    function N_0xbc1cc91205ec8d6e(): boolean;
    function IsScaleformMovieMethodReturnValueReady(method_return: number): boolean;
    function N_0x768ff8961ba904d6(method_return: number): boolean;
    function GetScaleformMovieFunctionReturnBool(method_return: number): boolean;
    function IsScenarioGroupEnabled(scenarioGroup: string): boolean;
    function IsScenarioOccupied(p0: number, p1: number, p2: number, p3: number, p4: boolean): boolean;
    function IsScenarioTypeEnabled(scenarioType: string): boolean;
    function IsScreenFadedIn(): boolean;
    function IsScreenFadedOut(): boolean;
    function IsScreenFadingIn(): boolean;
    function IsScreenFadingOut(): boolean;
    function IsScreenblurFadeRunning(): boolean;
    function N_0x7b226c785a52a0a9(): boolean;
    function IsScriptGlobalShaking(): boolean;
    function N_0xc912af078af19212(): boolean;
    function IsScriptedConversationLoaded(): boolean;
    function IsScriptedConversationOngoing(): boolean;
    function IsScriptedHudComponentActive(id: number): boolean;
    function IsScriptedHudComponentHiddenThisFrame(id: number): boolean;
    function N_0x09c0403ed9a751c2(id: number): boolean;
    function IsScriptedScenarioPedUsingConditionalAnim(ped: number, animDict: string, anim: string): boolean;
    function IsScriptedSpeechPlaying(p0: number): boolean;
    function IsScubaGearLightEnabled(ped: number): boolean;
    function IsSeatWarpOnly(vehicle: number, seatIndex: number): boolean;
    function N_0xf7f203e31f96f6a1(vehicle: number, seatIndex: number): boolean;
    function IsShockingEventInSphere(eventType: number, x: number, y: number, z: number, radius: number): boolean;
    function IsSniperBulletInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    function IsSniperInverted(): boolean;
    function IsSocialClubActive(): boolean;
    function N_0xc406be343fc4b9af(): boolean;
    function IsSpecialAbilityActive(player: number): boolean;
    function IsSpecialAbilityEnabled(player: number): boolean;
    function IsSpecialAbilityMeterFull(player: number): boolean;
    function IsSpecialAbilityUnlocked(playerModel: number): boolean;
    function IsSphereVisible(x: number, y: number, z: number, radius: number): boolean;
    function IsSphereVisibleToAnotherMachine(p0: number, p1: number, p2: number, p3: number): boolean;
    function IsSphereVisibleToPlayer(p0: number, p1: number, p2: number, p3: number, p4: number): boolean;
    function IsSrlLoaded(): boolean;
    function IsStoreAvailableToUser(): boolean;
    function N_0x883d79c4071e18b3(): boolean;
    function IsStreamPlaying(): boolean;
    function IsStreamingAdditionalText(p0: number): boolean;
    function IsStreamingFileReady(registerAs: string): boolean;
    function IsStreamvolActive(): boolean;
    function N_0xbc9823ab80a3dcac(): boolean;
    function IsStringNull(_string: string): boolean;
    function IsStringNullOrEmpty(_string: string): boolean;
    function IsStuntJumpInProgress(): boolean;
    function IsStuntJumpMessageShowing(): boolean;
    function N_0x2272b0a1343129f4(): boolean;
    function IsSubtitlePreferenceSwitchedOn(): boolean;
    function IsSwitchReadyForDescent(): boolean;
    function N_0xdfa80cb25d0a19b3(): boolean;
    function IsSwitchSkippingDescent(): boolean;
    function DestroyPlayerInPauseMenu(): boolean;
    function IsSynchronizedSceneHoldLastFrame(sceneID: number): boolean;
    function N_0x7f2f4f13ac5257ef(sceneID: number): boolean;
    function IsSynchronizedSceneLooped(sceneID: number): boolean;
    function IsSynchronizedSceneRunning(sceneId: number): boolean;
    function IsSystemUiBeingDisplayed(): boolean;
    function IsTaskMoveNetworkActive(ped: number): boolean;
    function N_0x921ce12c489c4c41(ped: number): boolean;
    function IsTaskMoveNetworkReadyForTransition(ped: number): boolean;
    function N_0x30ed88d5e0c56a37(ped: number): boolean;
    function IsTaxiLightOn(vehicle: number): boolean;
    function IsTennisMode(ped: number): boolean;
    function IsThisAMinigameScript(): boolean;
    function IsThisModelABicycle(model: number): boolean;
    function IsThisModelABike(model: number): boolean;
    function IsThisModelABoat(model: number): boolean;
    function IsThisModelACar(model: number): boolean;
    function IsThisModelAHeli(model: number): boolean;
    function IsThisModelAJetski(model: number): boolean;
    function IsThisModelASubmersible(model: number): boolean;
    function IsThisModelAnEmergencyBoat(model: number): boolean;
    function IsThisModelAPlane(model: number): boolean;
    function IsThisModelAQuadbike(model: number): boolean;
    function IsThisModelATrain(model: number): boolean;
    function IsThisModelAnAmphibiousCar(model: number): boolean;
    function IsThisModelAnAmphibiousQuadbike(model: number): boolean;
    function N_0xa1a9fc1c76a6730d(model: number): boolean;
    function IsThreadActive(threadId: number): boolean;
    function IsTimeEqualTo(timeA: number, timeB: number): boolean;
    function AreIntegersEqual(timeA: number, timeB: number): boolean;
    function IsTimeLessThan(timeA: number, timeB: number): boolean;
    function SubtractBFromAAndCheckIfNegative(timeA: number, timeB: number): boolean;
    function IsTimeMoreThan(timeA: number, timeB: number): boolean;
    function SubtractAFromBAndCheckIfNegative(timeA: number, timeB: number): boolean;
    function IsToggleModOn(vehicle: number, modType: number): boolean;
    function IsTrackedPedVisible(ped: number): boolean;
    function IsTrackedPointVisible(point: number): boolean;
    function IsTurretSeat(vehicle: number, seatIndex: number): boolean;
    function N_0xe33ffa906ce74880(vehicle: number, seatIndex: number): boolean;
    function IsTvPlaylistItemPlaying(videoCliphash: number): boolean;
    function N_0x0ad973ca1e077b60(videoCliphash: number): boolean;
    function LoadTvChannel(videoCliphash: number): boolean;
    function IsUsingKeyboard(padIndex: number): boolean;
    function GetLastInputMethod(padIndex: number): boolean;
    function IsInputDisabled(padIndex: number): boolean;
    function IsUsingKeyboard_2(padIndex: number): boolean;
    function N_0x13337b38db572509(padIndex: number): boolean;
    function IsInputJustDisabled(padIndex: number): boolean;
    function IsValidInterior(interior: number): boolean;
    function IsValidMpGamerTagMovie(gamerTagId: number): boolean;
    function N_0xeb709a36958abe0d(gamerTagId: number): boolean;
    function HasMpGamerTag_2(gamerTagId: number): boolean;
    function HasMpGamerTagCrewFlagsSet(gamerTagId: number): boolean;
    function IsVehicleAConvertible(vehicle: number, p1: boolean): boolean;
    function IsVehicleAlarmActivated(vehicle: number): boolean;
    function IsVehicleAlarmSet(vehicle: number): boolean;
    function IsVehicleAttachedToCargobob(cargobob: number, vehicleAttached: number): boolean;
    function IsVehicleAttachedToTowTruck(towTruck: number, vehicle: number): boolean;
    function IsVehicleAttachedToTrailer(vehicle: number): boolean;
    function IsVehicleAudiblyDamaged(vehicle: number): boolean;
    function N_0x5db8010ee71fdef2(vehicle: number): boolean;
    function IsVehicleBeingHalted(vehicle: number): boolean;
    function N_0xc69bb1d832a710ef(vehicle: number): boolean;
    function IsVehicleBumperBouncing(vehicle: number, frontBumper: boolean): boolean;
    function N_0x27b926779deb502d(vehicle: number, frontBumper: boolean): boolean;
    function IsVehicleBumperBrokenOff(vehicle: number, front: boolean): boolean;
    function IsVehicleDamaged(vehicle: number): boolean;
    function IsVehicleDoorDamaged(veh: number, doorID: number): boolean;
    function IsVehicleDoorFullyOpen(vehicle: number, doorIndex: number): boolean;
    function IsVehicleDriveable(vehicle: number, isOnFireCheck: boolean): boolean;
    function IsVehicleEngineOnFire(vehicle: number): boolean;
    function N_0xec69adf931aae0c3(vehicle: number): boolean;
    function IsVehicleEngineStarting(vehicle: number): boolean;
    function IsVehicleExtraTurnedOn(vehicle: number, extraId: number): boolean;
    function IsVehicleHighDetail(vehicle: number): boolean;
    function IsVehicleInBurnout(vehicle: number): boolean;
    function IsVehicleInGarageArea(garageName: string, vehicle: number): boolean;
    function IsVehicleInSubmarineMode(vehicle: number): boolean;
    function GetIsSubmarineVehicleTransformed(vehicle: number): boolean;
    function IsVehicleInteriorLightOn(vehicle: number): boolean;
    function IsVehicleModHswExclusive(vehicle: number, modType: number, modIndex: number): boolean;
    function IsVehicleModel(vehicle: number, model: number): boolean;
    function IsVehicleNeedsToBeHotwired(vehicle: number): boolean;
    function IsVehicleNeonLightEnabled(vehicle: number, index: number): boolean;
    function IsVehicleNodeIdValid(vehicleNodeId: number): boolean;
    function IsVehicleOnAllWheels(vehicle: number): boolean;
    function IsVehicleParachuteActive(vehicle: number): boolean;
    function N_0x3de51e9c80b116cf(vehicle: number): boolean;
    function IsVehiclePreviouslyOwnedByPlayer(vehicle: number): boolean;
    function IsVehicleRadioEnabled(vehicle: number): boolean;
    function N_0x0be4be946463f917(vehicle: number): boolean;
    function IsVehicleRadioLoud(vehicle: number): boolean;
    function IsVehicleRocketBoostActive(vehicle: number): boolean;
    function IsVehicleSearchlightOn(vehicle: number): boolean;
    function IsVehicleSeatAccessible(
        ped: number,
        vehicle: number,
        seatIndex: number,
        side: boolean,
        onEnter: boolean
    ): boolean;
    function N_0x639431e895b9aa57(
        ped: number,
        vehicle: number,
        seatIndex: number,
        side: boolean,
        onEnter: boolean
    ): boolean;
    function IsVehicleSeatFree(vehicle: number, seatIndex: number): boolean;
    function IsVehicleSirenAudioOn(vehicle: number): boolean;
    function N_0xb5cc40fbcb586380(vehicle: number): boolean;
    function IsVehicleSirenSoundOn(vehicle: number): boolean;
    function IsVehicleSirenOn(vehicle: number): boolean;
    function IsVehicleSlipstreamLeader(vehicle: number): boolean;
    function N_0x48c633e94a8142a7(vehicle: number): boolean;
    function IsVehicleSprayable(vehicle: number): boolean;
    function N_0x8d474c8faeff6cde(vehicle: number): boolean;
    function IsVehicleShopResprayAllowed(vehicle: number): boolean;
    function IsVehicleStolen(vehicle: number): boolean;
    function IsVehicleStopped(vehicle: number): boolean;
    function IsVehicleStoppedAtTrafficLights(vehicle: number): boolean;
    function IsVehicleStuckOnRoof(vehicle: number): boolean;
    function IsVehicleStuckTimerUp(vehicle: number, p1: number, p2: number): boolean;
    function IsVehicleTyreBurst(vehicle: number, wheelID: number, completely: boolean): boolean;
    function IsVehicleVisible(vehicle: number): boolean;
    function IsVehicleWanted(vehicle: number): boolean;
    function IsVehicleWeaponDisabled(weaponHash: number, vehicle: number, owner: number): boolean;
    function N_0x563b65a643ed072e(weaponHash: number, vehicle: number, owner: number): boolean;
    function IsVehicleWindowIntact(vehicle: number, windowIndex: number): boolean;
    function IsWarningMessageActive(): boolean;
    function IsMedicalDisabled(): boolean;
    function IsWarningMessageActive_2(): boolean;
    function N_0xaf42195a42c63bba(): boolean;
    function IsWaypointActive(): boolean;
    function IsWaypointPlaybackGoingOnForPed(p0: number): boolean;
    function IsWaypointPlaybackGoingOnForVehicle(vehicle: number): boolean;
    function IsWeaponValid(weaponHash: number): boolean;
    function IsWorldPointWithinBrainActivationRange(): boolean;
    function IsXbox360Version(): boolean;
    function KnockOffPedProp(ped: number, p1: boolean, p2: boolean, p3: boolean, p4: boolean): void;
    function KnockPedOffVehicle(ped: number): void;
    function LandingMenuIsActive(): boolean;
    function N_0x3bbbd13e5041a79e(): boolean;
    function Leaderboards2ReadByHandle(): LuaMultiReturn<[boolean, number, number]>;
    function Leaderboards2ReadByPlatform(
        gamerHandleCsv: string,
        platformName: string
    ): LuaMultiReturn<[boolean, number]>;
    function N_0xf1ae5dcdbfca2721(gamerHandleCsv: string, platformName: string): LuaMultiReturn<[boolean, number]>;
    function Leaderboards2ReadByRadius(p1: number): LuaMultiReturn<[boolean, number, number]>;
    function Leaderboards2ReadByRank(p1: number, p2: number): LuaMultiReturn<[boolean, number]>;
    function Leaderboards2ReadByRow(
        p2: number,
        p4: number,
        p6: number
    ): LuaMultiReturn<[boolean, number, number, number, number]>;
    function Leaderboards2ReadByScoreFloat(p1: number, p2: number): LuaMultiReturn<[boolean, number]>;
    function Leaderboards2ReadByScoreInt(p1: number, p2: number): LuaMultiReturn<[boolean, number]>;
    function Leaderboards2ReadFriendsByRow(
        p2: number,
        p3: boolean,
        p4: number,
        p5: number
    ): LuaMultiReturn<[boolean, number, number]>;
    function Leaderboards2ReadRankPrediction(): LuaMultiReturn<[boolean, number, number, number]>;
    function N_0xc38dc1e90d22547c(): LuaMultiReturn<[boolean, number, number, number]>;
    function Leaderboards2WriteData(p0: number): LuaMultiReturn<[boolean, number]>;
    function Leaderboards2WriteDataForEventType(): LuaMultiReturn<[boolean, number, number]>;
    function N_0xc980e62e33df1d5c(): LuaMultiReturn<[boolean, number, number]>;
    function LeaderboardsCacheDataRow(p0: number): LuaMultiReturn<[boolean, number]>;
    function LeaderboardsClearCacheData(): void;
    function LeaderboardsDeaths(statName: number, value: number): void;
    function N_0x428eaf89e24f6c36(statName: number, value: number): void;
    function LeaderboardsGetCacheDataRow(p0: number, p1: number, p2: number): LuaMultiReturn<[boolean, number]>;
    function LeaderboardsGetCacheExists(p0: number): boolean;
    function LeaderboardsGetCacheNumberOfRows(p0: number): number;
    function N_0x58a651cd201d89ad(p0: number): number;
    function LeaderboardsGetCacheTime(p0: number): number;
    function LeaderboardsGetColumnId(p0: number, p1: number, p2: number): number;
    function LeaderboardsGetColumnType(p0: number, p1: number, p2: number): number;
    function LeaderboardsGetNumberOfColumns(p0: number, p1: number): number;
    function LeaderboardsReadAnyPending(): boolean;
    function N_0xa31fd15197b192bd(): boolean;
    function LeaderboardsReadClear(p0: number, p1: number, p2: number): number;
    function LeaderboardsReadClearAll(): number;
    function LeaderboardsReadPending(p0: number, p1: number, p2: number): boolean;
    function LeaderboardsReadSuccessful(p0: number, p1: number, p2: number): boolean;
    function LeaderboardsWriteAddColumn(p0: number, p1: number, p2: number): void;
    function N_0x0bca1d2c47b0d269(p0: number, p1: number, p2: number): void;
    function LeaderboardsWriteAddColumnLong(p0: number, p1: number, p2: number): void;
    function N_0x2e65248609523599(p0: number, p1: number, p2: number): void;
    function LeaveCursorMode(): void;
    function LinkNamedRendertarget(modelHash: number): void;
    function LinkStaticEmitterToEntity(emitterName: string, entity: number): void;
    function N_0x651d3228960d08af(emitterName: string, entity: number): void;
    function LoadAllObjectsNow(): void;
    function LoadAllPathNodes(keepInMemory: boolean): boolean;
    function LoadCloudHat(name: string, transitionTime: number): void;
    function SetCloudHatTransition(name: string, transitionTime: number): void;
    function LoadContentChangeSetGroup(hash: number): void;
    function LoadGlobalWaterType(waterType: number): void;
    function LoadMissionCreatorPhoto(p0: string, p3: boolean): LuaMultiReturn<[boolean, number, number]>;
    function N_0x4862437a486f91b0(p0: string, p3: boolean): LuaMultiReturn<[boolean, number, number]>;
    function LoadMovieMeshSet(movieMeshSetName: string): number;
    function LoadResourceFile(resourceName: string, fileName: string): string;
    function LoadRopeData(ropeId: number, rope_preset: string): void;
    function LoadScene(x: number, y: number, z: number): void;
    function LoadStream(streamName: string, soundSet: string): boolean;
    function LoadStreamWithStartOffset(streamName: string, startOffset: number, soundSet: string): boolean;
    function LoadWaterFromPath(resourceName: string, fileName: string): boolean;
    function LoadingscreenGetLoadFreemode(): boolean;
    function N_0xef7d17bc6c85264c(): boolean;
    function LoadingscreenGetLoadFreemodeWithEventName(): boolean;
    function N_0x8aa464d4e0f6accd(): boolean;
    function LoadingscreenIsLoadingFreemode(): boolean;
    function N_0xc6dc823253fbb366(): boolean;
    function IsUiLoadingMultiplayer(): boolean;
    function LoadingscreenSetIsLoadingFreemode(toggle: boolean): void;
    function N_0xc7e7181c09f33b69(toggle: boolean): void;
    function LoadingscreenSetLoadFreemode(toggle: boolean): void;
    function GetBroadcastFinshedLosSound(toggle: boolean): void;
    function N_0xb0c56bd3d808d863(toggle: boolean): void;
    function LoadingscreenSetLoadFreemodeWithEventName(toggle: boolean): void;
    function N_0xfc309e94546fcdb5(toggle: boolean): void;
    function IsInLoadingScreen(toggle: boolean): void;
    function LocalizationGetSystemDateFormat(): number;
    function GetUserLanguageId(): number;
    function LocalizationGetSystemLanguage(): number;
    function N_0x497420e022796b3f(): number;
    function LockLoadingScreenButtons(): void;
    function N_0xb1577667c3708f9b(): void;
    function LockMinimapAngle(angle: number): void;
    function LockMinimapPosition(x: number, y: number): void;
    function LockRadioStation(radioStationName: string, toggle: boolean): void;
    function N_0x94f2e83ead7e6b82(radioStationName: string, toggle: boolean): void;
    function SetRadioStationDisabled(radioStationName: string, toggle: boolean): void;
    function LockRadioStationTrackList(radioStation: string, trackListName: string): void;
    function Log10(value: number): number;
    function LogDebugInfo(p0: string): void;
    function N_0x2162c446dfdf38fd(p0: string): void;
    function LowerConvertibleRoof(vehicle: number, instantlyLower: boolean): void;
    function LowerRetractableWheels(vehicle: number): void;
    function N_0x5335be58c083e74e(vehicle: number): void;
    function MakePedReload(ped: number): boolean;
    function MarkObjectForDeletion(object: number): void;
    function ModifyVehicleTopSpeed(vehicle: number, value: number): void;
    function SetVehicleEnginePowerMultiplier(vehicle: number, value: number): void;
    function ModifyWater(x: number, y: number, height: number, radius: number): void;
    function MoveVehicleDecals(p0: number, p1: number): void;
    function MumbleAddVoiceChannelListen(channel: number): void;
    function MumbleAddVoiceTargetChannel(targetId: number, channel: number): void;
    function MumbleAddVoiceTargetPlayer(targetId: number, player: number): void;
    function MumbleAddVoiceTargetPlayerByServerId(targetId: number, serverId: number): void;
    function MumbleClearVoiceChannel(): void;
    function MumbleClearVoiceTarget(targetId: number): void;
    function MumbleClearVoiceTargetChannels(targetId: number): void;
    function MumbleClearVoiceTargetPlayers(targetId: number): void;
    function MumbleGetTalkerProximity(): number;
    function MumbleGetVoiceChannelFromServerId(serverId: number): number;
    function MumbleIsActive(): boolean;
    function MumbleIsConnected(): boolean;
    function MumbleIsPlayerTalking(player: number): boolean;
    function MumbleRemoveVoiceChannelListen(channel: number): void;
    function MumbleRemoveVoiceTargetChannel(targetId: number, channel: number): void;
    function MumbleRemoveVoiceTargetPlayer(targetId: number, player: number): void;
    function MumbleRemoveVoiceTargetPlayerByServerId(targetId: number, serverId: number): void;
    function MumbleSetActive(state: boolean): void;
    function MumbleSetAudioInputDistance(distance: number): void;
    function MumbleSetAudioInputIntent(intentHash: number): void;
    function MumbleSetAudioOutputDistance(distance: number): void;
    function MumbleSetServerAddress(address: string, port: number): void;
    function MumbleSetSubmixForServerId(serverId: number, submixId: number): void;
    function MumbleSetTalkerProximity(value: number): void;
    function MumbleSetVoiceChannel(channel: number): void;
    function MumbleSetVoiceTarget(targetId: number): void;
    function MumbleSetVolumeOverride(player: number, volume: number): void;
    function MumbleSetVolumeOverrideByServerId(serverId: number, volume: number): void;
    function N_0x0032a6dba562c518(): void;
    function N_0x006e4b040ed37ec3(p0: number): void;
    function N_0x0077f15613d36993(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x011883f41211432a(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        p6: number
    ): void;
    function N_0x0150b6ff25a9e2e5(): void;
    function N_0x015b03ee1c43e6ec(p0: number): void;
    function N_0x0205f5365292d2eb(vehicle: number, p1: number): void;
    function N_0x0218ba067d249dea(): void;
    function N_0x0225778816fdc28c(p0: number): void;
    function N_0x02369d5c8a51fdcf(toggle: boolean): void;
    function N_0x023acab2dc9dc4a4(): number;
    function N_0x02deaac8f8ea7fe7(p0: string): void;
    function N_0x02e93c796abd3a97(p0: boolean): void;
    function N_0x03300b57fcac6ddb(p0: boolean): void;
    function N_0x0395cb47b022e62c(p0: number): LuaMultiReturn<[boolean, number]>;
    function N_0x03c2eebb04b3fb72(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function N_0x03ea03af85a85cb7(
        ped: number,
        p1: boolean,
        p2: boolean,
        p3: boolean,
        p4: boolean,
        p5: boolean,
        p6: boolean,
        p7: boolean,
        p8: number
    ): boolean;
    function N_0x03f1a106bda7dd3e(): void;
    function N_0x0419b167ee128f33(p0: number, p1: number): number;
    function N_0x041c7f2a6c9894e6(p0: number, p1: number, p2: number): number;
    function N_0x04655f9d075d0ae5(toggle: boolean): void;
    function N_0x04918a41bc9b8157(p0: number, p1: number, p2: number): number;
    function N_0x0581730ab9380412(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function N_0x0596843b34b95ce5(p0: number, p1: number): void;
    function N_0x06087579e7aa85a9(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): boolean;
    function N_0x061cb768363d6424(ped: number, toggle: boolean): void;
    function N_0x062d5ead4da2fa6a(): void;
    function N_0x063ae2b2cc273588(vehicle: number, p1: boolean): void;
    function N_0x06462a961e94b67c(): void;
    function N_0x065d03a9d6b2c6b5(p0: number, p1: number): void;
    function N_0x06eaf70ae066441e(p0: number): void;
    function N_0x06ee9048fd080382(p0: boolean): void;
    function N_0x07dbd622d9533857(p0: number): number;
    function N_0x07eab372c8841d99(p0: number, p1: number, p2: number): number;
    function N_0x0811381ef5062fec(p0: number): void;
    function N_0x08e8eeadfd0dc4a0(amount: number): boolean;
    function N_0x0a436b8643716d14(): void;
    function N_0x0a9c7f36e5d7b683(p0: number): void;
    function N_0x0aa27680a0bd43fa(): void;
    function N_0x0ae73d8df3a762b2(p0: boolean): void;
    function N_0x0b3e35ac043707d9(p0: number, p1: number): void;
    function N_0x0b40ed49d7d6ff84(): void;
    function N_0x0b565b0aae56a0e8(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function N_0x0b568201dd99f0eb(p0: boolean): void;
    function N_0x0b8b7f74bf061c6d(): number;
    function N_0x0c698d8f099174c7(p0: number): void;
    function N_0x0cf54f20de43879c(p0: number): void;
    function N_0x0cf6cc51aa18f0f8(p0: number, p1: number, p2: number): number;
    function N_0x0d01d20616fc73fb(p0: number, p1: number): void;
    function N_0x0d30eb83668e63c5(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x0d77a82dc2d0da59(): LuaMultiReturn<[number, number]>;
    function N_0x0dd362f14f18942a(amount: number, p1: number, p2: number): void;
    function N_0x0e4299c549f0d1f1(toggle: boolean): void;
    function N_0x0ede326d47cd0f3e(ped: number, player: number): boolean;
    function N_0x0f1a4b45b7693b95(p0: number, p1: number): void;
    function N_0x0f62619393661d6e(p0: number, p1: number, p2: number): void;
    function N_0x0f6f1ebbc4e1d5e6(scriptIndex: number, p1: string): boolean;
    function N_0x0ffb3c758e8c07b9(ped: number, p1: boolean): number;
    function N_0x10144267dd22866c(overlayHash: number, p1: number, character: number): number;
    function N_0x107a473d7a6647a9(vehicle: number): void;
    function N_0x108be26959a9d9bb(toggle: boolean): void;
    function N_0x110f526ab784111f(ped: number, p1: number): void;
    function N_0x112209ce0290c03a(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x1153fa02a659051c(): void;
    function N_0x11579d940949c49e(p0: number): void;
    function N_0x116fb94dc4b79f17(p0: string): void;
    function N_0x1171a97a3d3981b6(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0x1178e104409fe58c(p0: number, p1: number): void;
    function N_0x1185a8087587322c(p0: boolean): void;
    function N_0x1216e0bfa72cc703(p0: number, p1: number): void;
    function N_0x12ded8ca53d47ea5(p0: number): void;
    function N_0x1312ddd8385aee4e(p0: number, p1: number): void;
    function N_0x1398582b7f72b3ed(p0: number): void;
    function N_0x13b350b8ad0eee10(): void;
    function N_0x13f1fcb111b820b0(p0: boolean): void;
    function N_0x140e6a44870a11ce(): void;
    function N_0x144da052257ae7d8(p0: number): void;
    function N_0x14922ed3e38761f0(): boolean;
    function N_0x149aee66f0cb3a99(p0: number, p1: number): void;
    function N_0x14d29bb12d47f68c(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x14e0b2d1ad1044e0(): LuaMultiReturn<[number, number, number, number]>;
    function N_0x14eda9ee27bd1626(p0: number): void;
    function N_0x14fc5833464340a8(): void;
    function N_0x155467aca0f55705(): number;
    function N_0x159b7318403a1cd8(p0: number): void;
    function N_0x1612c45f9e3e0d44(): void;
    function N_0x162c23ca83ed0a62(p0: number): boolean;
    function N_0x164c5ff663790845(p0: number): void;
    function N_0x16da8172459434aa(): number;
    function N_0x170910093218c8b9(p0: number): LuaMultiReturn<[boolean, number]>;
    function N_0x17c9e241111a674d(p0: number, p1: number): void;
    function N_0x17fca7199a530203(): void;
    function N_0x182f266c2d9e2beb(vehicle: number, p1: number): void;
    function N_0x19853b5b17d77bca(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0x19af7ed9b9d23058(): void;
    function N_0x19bfed045c647c49(ped: number): boolean;
    function N_0x1a092bb0c3808b96(entity: number, p1: boolean): void;
    function N_0x1a330d297aac6bc1(ped: number, p1: number): void;
    function N_0x1a6cbb06e2d0d79d(p0: number, p1: number): void;
    function N_0x1a7ce7cd3e653485(p0: number): void;
    function N_0x1a8ea222f9c67dbb(p0: number): LuaMultiReturn<[number, number]>;
    function N_0x1b7abe26cbcbf8c7(ped: number, p1: number, p2: number): void;
    function N_0x1bb299305c3e8c13(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x1bbc135a4d25edde(p0: boolean): void;
    function N_0x1c073274e065c6d2(vehicle: number, toggle: boolean): void;
    function N_0x1c57c94a6446492a(p0: number, p1: number): void;
    function N_0x1cba05ae7bd7ee05(p0: number): void;
    function N_0x1d12a56fc95be92e(): boolean;
    function N_0x1d4dc17c38feaff0(): boolean;
    function N_0x1d610eb0fea716d9(p0: number): boolean;
    function N_0x1dc9b749e7ae282b(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x1e3f1b1b891a2aaa(p0: number, p1: number): void;
    function N_0x1e77fa7a62ee6c4c(p0: number): number;
    function N_0x1e9057a74fd73e23(): void;
    function N_0x1eae0a6e978894a2(p0: number, p1: boolean): void;
    function N_0x1f2300cb7fa7b7f6(): number;
    function N_0x1f34b0626c594380(p0: number, p1: number): void;
    function N_0x1f351cf1c6475734(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number
    ): void;
    function N_0x1f7bc3539f9e0224(): void;
    function N_0x1f8e00fb18239600(p0: number): void;
    function N_0x2016c603d6b8987c(ped: number, toggle: boolean): void;
    function N_0x202a5ed9ce01d6e7(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): void;
    function N_0x20746f7b1032a3c7(p0: boolean, p1: boolean, p2: boolean, p3: boolean): void;
    function N_0x208784099002bc30(missionNameLabel: string, p1: number): void;
    function N_0x20c6c7e4eb082a7f(p0: boolean): void;
    function N_0x2107a3773771186d(): boolean;
    function N_0x211c4ef450086857(): void;
    function N_0x214cd562a939246a(): boolean;
    function N_0x21c235bc64831e5a(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: boolean
    ): Vector3;
    function N_0x225798743970412b(p0: number): LuaMultiReturn<[boolean, number]>;
    function N_0x226c284c830d0ca8(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x22e21fbcfc88c149(scriptIndex: number, p1: string): number;
    function N_0x2302c0264ea58d31(): void;
    function N_0x2310a8f9421ebf43(p0: number): void;
    function N_0x2311dd7159f00582(vehicle: number, p1: boolean): void;
    function N_0x23227df0b2115469(): void;
    function N_0x237440e46d918649(p0: number): void;
    function N_0x2382ab11450ae7ba(p0: number, p1: number): void;
    function N_0x23f09eadc01449d6(padIndex: number): boolean;
    function N_0x241fca5b1aa14f75(): boolean;
    function N_0x243296a510b562b6(): void;
    function N_0x247acbc4abbc9d1c(p0: boolean): void;
    function N_0x24a49beaf468dc90(p0: number, p2: number, p3: number, p4: number): LuaMultiReturn<[boolean, number]>;
    function N_0x24c024ba8379a70a(p0: number, p1: number): void;
    function N_0x24e4e51fc16305f9(): number;
    function N_0x25361a96e0f7e419(p0: number, p1: number, p2: number, p3: number): number;
    function N_0x2542269291c6ac84(p0: number): number;
    function N_0x2555cf7da5473794(): number;
    function N_0x2570e26be63964e3(): boolean;
    function N_0x259ba6d4e6f808f1(p0: number): void;
    function N_0x25aaa32bdc98f2a3(): number;
    function N_0x25d990f8e0e3f13c(): void;
    function N_0x25fc3e33a31ad0c9(p0: boolean): void;
    function N_0x261e97ad7bcf3d40(p0: boolean): void;
    function N_0x265559da40b3f327(p0: number): void;
    function N_0x265635150fb0d82e(): void;
    function N_0x26d7399b9587fe89(p0: number): void;
    function N_0x26d99d5a82fd18e8(p0: number): void;
    function N_0x26e13d440e7f6064(vehicle: number, value: number): void;
    function N_0x26f07dd83a5f7f98(): number;
    function N_0x271017b9ba825366(p0: number, p1: boolean): void;
    function N_0x271401846bd26e92(p0: boolean, p1: boolean): void;
    function N_0x2735233a786b1bef(ped: number, p1: number): void;
    function N_0x2790f4b17d098e26(toggle: boolean): void;
    function N_0x27aa1c973cacfe63(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number
    ): void;
    function N_0x27cfb1b1e078cb2d(): void;
    function N_0x27f248c3febfaad3(p0: number, p1: number): void;
    function N_0x27feb5254759cde3(textureDict: string, p1: boolean): boolean;
    function N_0x2818ff6638cb09de(p0: number): void;
    function N_0x282b6739644f4347(p0: number): void;
    function N_0x283b6062a2c01e9b(): void;
    function N_0x288df530c92dad6f(ped: number, value: number): void;
    function N_0x28b022a17b068a3a(p0: number, p1: number): void;
    function N_0x28ecb8ac2f607db2(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x2916a928514c9827(): void;
    function N_0x293220da1b46cebc(p0: number, p1: number, p2: number): void;
    function N_0x29682e2ccf21e9b5(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number,
        p12: number,
        p13: number
    ): void;
    function N_0x2a251aa48b2b46db(): void;
    function N_0x2a7cec72c3443bcc(p0: number, p1: number, p2: number): void;
    function N_0x2a893980e96b659a(p0: boolean): boolean;
    function N_0x2a93c46aab1eacc9(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x2acabed337622df2(p0: string): void;
    function N_0x2afc2d19b50797f2(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x2b1c623823db0d9d(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): number;
    function N_0x2b40a97646381508(p0: number): void;
    function N_0x2b51edbefc301339(p0: number, p1: string): boolean;
    function N_0x2b694afcf64e6994(ped: number, p1: boolean): void;
    function N_0x2bf66d2e7414f686(): number;
    function N_0x2c173ae2bdb9385e(blip: number): number;
    function N_0x2c1d8b3b19e517cc(p0: number, p1: number): number;
    function N_0x2c42340f916c5930(p0: number): number;
    function N_0x2c4a1590abf43e8b(vehicle: number, p1: boolean): void;
    function N_0x2c9f302398e13141(blip: number, p1: number): void;
    function N_0x2cd90358f67d0aa8(p0: number): void;
    function N_0x2ce9d95e4051aecd(p0: number): void;
    function N_0x2d3b147afad49de0(
        textureDict: string,
        textureName: string,
        x: number,
        y: number,
        width: number,
        height: number,
        p6: number,
        red: number,
        green: number,
        blue: number,
        alpha: number,
        p11: number
    ): void;
    function N_0x2d5dc831176d0114(p0: number): boolean;
    function N_0x2d7a9b577e72385e(p0: number): void;
    function N_0x2d874d4ae612a65f(): number;
    function N_0x2da41ed6e1fcd7a5(p0: number, TypeOfWeapon: number): LuaMultiReturn<[number, number]>;
    function N_0x2dd39bf3e2f9c47f(): number;
    function N_0x2de6c5e2e996f178(p0: number): void;
    function N_0x2dfc81c9b9608549(ped: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0x2e0259babc27a327(p0: number): void;
    function N_0x2e0bf682cc778d49(p0: number): boolean;
    function N_0x2e22fefa0100275e(): boolean;
    function N_0x2e4c123d1c8a710e(
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): LuaMultiReturn<[number, number, number]>;
    function N_0x2f057596f2bd0061(): boolean;
    function N_0x2f074c904d85129e(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function N_0x2f137b508de238f2(p0: boolean): void;
    function N_0x2f3c3d9f50681de4(p0: number, p1: boolean): void;
    function N_0x2f41a3bae005e5fa(p0: number, p1: number): void;
    function N_0x2f7ceb6520288061(p0: boolean): void;
    function N_0x2f7f2b26dd3f18ee(p0: number, p1: number): void;
    function N_0x2fa2494b47fdd009(p0: number, p1: number): void;
    function N_0x2fa3173480008493(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x2fab6614ce22e196(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x2fcb133ca50a49eb(p0: number): number;
    function N_0x3001bef2feca3680(): boolean;
    function N_0x30432a0118736e00(): number;
    function N_0x3044240d2e0fa842(): boolean;
    function N_0x30ca2ef91d15adf8(): number;
    function N_0x31125fd509d9043f(p0: number): void;
    function N_0x31574b1b41268673(p0: number, p1: number): void;
    function N_0x316db59cd14c1774(p0: number): void;
    function N_0x31ba138f6304fb9f(p0: number, p1: number): void;
    function N_0x31e90b8873a4cd3b(player: number, p1: number): void;
    function N_0x31f924b53eaddf65(p0: boolean): void;
    function N_0x324c5aa411da7737(p0: number): void;
    function N_0x32cac93c9de73d32(): number;
    function N_0x32ebd154cb6b8b99(p0: number, p1: number, p2: number): void;
    function N_0x32f34ff7f617643b(p0: number, p1: number): void;
    function N_0x336b3d200ab007cb(p0: number, p1: number, p2: number, p3: number, p4: number): number;
    function N_0x33d47e85b476abcd(p0: boolean): boolean;
    function N_0x33d72899e24c3365(p0: number, p1: number): number;
    function N_0x33df47cc0642061b(): boolean;
    function N_0x33e3c6c6f2f0b506(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x3441cad2f2231923(vehicle: number, p1: boolean): void;
    function N_0x346ef3ecaaab149e(): void;
    function N_0x34770b9ce0e03b91(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0x352e2b5cf420bf3b(p0: number, p1: number): void;
    function N_0x357b152ef96c30b6(): number;
    function N_0x35a3cd97b2c0a6d2(blip: number): void;
    function N_0x35bb21de06784373(p0: number, p1: number): void;
    function N_0x35e0654f4bad7971(p0: boolean): void;
    function N_0x36391f397731595d(p0: number): number;
    function N_0x367ef5e2f439b4c6(p0: number): void;
    function N_0x36ccb9be67b970fd(ropeId: number, p1: boolean): void;
    function N_0x36de109527a2c0c4(toggle: boolean): void;
    function N_0x36f1b38855f2a8df(player: number): void;
    function N_0x36f32de87082343e(p0: number, p1: number): void;
    function N_0x36f6626459d91457(p0: number): void;
    function N_0x37d5f739fd494675(p0: number): number;
    function N_0x380b4968d1e09e55(): void;
    function N_0x38491439b6ba7f7d(p0: number, p1: number): number;
    function N_0x3855fb5eb2c5e8b2(p0: number): number;
    function N_0x38b7c51ab1edc7d8(entity: number, toggle: boolean): void;
    function N_0x38baaa5dd4c9d19f(value: number): void;
    function N_0x38c1cb1cb119a016(p0: number, p1: number): void;
    function N_0x393bd2275ceb7793(): number;
    function N_0x39455bf4f4f55186(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number,
        p12: number
    ): number;
    function N_0x394cd08e31313c28(): void;
    function N_0x397baa01068baa96(): number;
    function N_0x39917e1b4cb0f911(p0: boolean): void;
    function N_0x39a5fb7eaf150840(p0: number, p1: number): void;
    function N_0x3a48ab4445d499be(): number;
    function N_0x3b2fd68db5f8331c(object: number, toggle: boolean, R: number, G: number, B: number): void;
    function SetObjectColour(object: number, toggle: boolean, R: number, G: number, B: number): void;
    function N_0x3b458ddb57038f08(vehicle: number, doorIndex: number, toggle: boolean): void;
    function N_0x3bd770d281982db5(p0: number, p1: number): number;
    function N_0x3c5c1e2c2ff814b1(toggle: boolean): void;
    function N_0x3c788e7f6438754d(checkpointHandle: number, x: number, y: number, z: number): void;
    function N_0x3de3aa516fb126a4(p0: number): void;
    function N_0x3e38e28a1d80ddf6(ped: number): boolean;
    function N_0x3e9679c1dfcf422c(p0: number, p1: number): void;
    function N_0x3ebeac6c3f81f6bd(p0: number): void;
    function N_0x3fa36981311fa4ff(netId: number, state: boolean): void;
    function N_0x3fc795691834481d(p0: number, p1: number): void;
    function N_0x4008edf7d6e48175(p0: boolean): void;
    function N_0x405dc2aef6af95b9(roomHashKey: number): void;
    function N_0x40763ea7b9b783e7(p0: string, p1: number, p2: number): number;
    function N_0x407dc5e97db1a4d3(p0: number, p1: number): void;
    function N_0x4128464231e3ca0b(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x41290b40fa63e6da(p0: number): void;
    function N_0x412f1364fa066cfb(p0: number): number;
    function N_0x41350b4fc28e3941(p0: boolean): void;
    function N_0x419615486bbf1956(p0: number): void;
    function N_0x4237e822315d8ba9(): boolean;
    function N_0x425aecf167663f48(ped: number, p1: boolean): void;
    function N_0x4282e08174868be3(): number;
    function N_0x428ad3e26c8d9eb0(vehicle: number, x: number, y: number, z: number, p4: number): void;
    function N_0x430a7631a84c9be7(p0: number): void;
    function N_0x4348bfda56023a2f(p0: number, p1: number): number;
    function N_0x43fa0dfc5df87815(vehicle: number, p1: boolean): void;
    function N_0x43fa7cbe20dab219(p0: number): void;
    function N_0x4419966c9936071a(vehicle: number): void;
    function N_0x444c4525ece0a4b9(): void;
    function N_0x44919cc079bb60bf(p0: number): void;
    function N_0x44aca259d67651db(p1: number): number;
    function N_0x450819d8cf90c416(): boolean;
    function N_0x45a83257ed02d9bc(): void;
    function N_0x45e816772e93a9db(): number;
    function N_0x45f35c0edc33b03b(
        netScene: number,
        modelHash: number,
        x: number,
        y: number,
        z: number,
        p5: number,
        p6: string,
        p7: number,
        p8: number,
        flags: number
    ): void;
    function N_0x4669b3ed80f24b4e(player: number): void;
    function N_0x469f2ecdec046337(p0: boolean): void;
    function N_0x46b05bcae43856b0(ped: number, flag: number): boolean;
    function N_0x46d1a61a21f566fc(p0: number): void;
    function N_0x46f3add1e2d5baf2(p0: number, p1: number): void;
    function N_0x472397322e92a856(): void;
    function N_0x4737980e8a283806(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0x4811bbac21c5fcd5(p0: number): void;
    function N_0x483aca1176ca93f1(): void;
    function N_0x48621c9fca3ebd28(p0: number): void;
    function N_0x487912fd248efddf(p0: number, p1: number): boolean;
    function N_0x4879e4fe39074cdf(): boolean;
    function N_0x48f069265a0e4bec(name: string): number;
    function N_0x490861b88f4fd846(p0: number): void;
    function N_0x49e50bdb8ba4dab2(ped: number, toggle: boolean): void;
    function N_0x4a7d6e727f941747(p0: number): LuaMultiReturn<[number, number]>;
    function N_0x4a9fde3a5a6d0437(toggle: boolean): void;
    function N_0x4ad280eb48b2d8e6(vehicle: number, togle: boolean): void;
    function N_0x4ad490ae1536933b(p0: number, p1: number): number;
    function N_0x4af92acd3141d96c(): void;
    function N_0x4aff7e02e485e92b(): void;
    function N_0x4b5b620c9b59ed34(p0: number, p1: number): void;
    function N_0x4c134b4df76025d0(p0: number, p1: number): void;
    function N_0x4c2330e61d3deb56(interior: number): number;
    function N_0x4c2a9fdc22377075(): void;
    function N_0x4c3b75694f7e0d9c(p0: number, p1: number, p2: number): void;
    function N_0x4c89fe2bdeb3f169(): number;
    function N_0x4c9034162368e206(): number;
    function N_0x4cebc1ed31e8925e(cutsceneName: string): boolean;
    function N_0x4d02279c83be69fe(): number;
    function N_0x4d953df78ebf8158(): void;
    function N_0x4d9d109f63fee1d4(p0: number, p1: boolean): void;
    function N_0x4dc416f246a41fc8(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x4dcdf92bf64236cd(p0: string, p1: string): void;
    function N_0x4df7cfff471a7fb1(p0: number): boolean;
    function N_0x4e52e752c76e7e7a(p0: number): void;
    function N_0x4ed9c8d6da297639(): number;
    function N_0x4fcd976da686580c(p0: number): number;
    function N_0x4fcdbd3f0a813c25(p0: number, p1: number): void;
    function N_0x50276ef8172f5f12(ped: number): void;
    function N_0x5068f488ddb54dd8(): number;
    function N_0x50a8a36201dbf83e(): boolean;
    function N_0x511f1a683387c7e2(ped: number): number;
    function N_0x51db102f4a3ba5e0(toggle: boolean): void;
    function N_0x51f30db60626a20e(
        vehicle: number,
        x: number,
        y: number,
        z: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        p7: number,
        p8: number
    ): boolean;
    function N_0x5324a0e3e4ce3570(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0x53c10c8bd774f2c9(): number;
    function N_0x53c31853ec9531ff(p0: number): void;
    function N_0x53cae13e9b426993(p0: number): void;
    function N_0x53ddc75bc3ac0a90(vehicle: number): void;
    function N_0x5407b7288d0478b7(p0: number): number;
    function N_0x547237aa71ab44de(p0: number): void;
    function N_0x54e22ea2c1956a8d(p0: number): void;
    function N_0x54f157e0336a3822(ped: number, p1: string, p2: number): void;
    function N_0x5501b7a5cdb79d37(player: number): void;
    function N_0x55384438fc55ad8e(value: number): void;
    function N_0x5539c3ebf104a53a(p0: boolean): void;
    function N_0x5574637681911fda(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x559ebf901a8c68e0(gamerHandle: number): LuaMultiReturn<[boolean, number]>;
    function N_0x55a1e095db052fa5(p0: number, p1: number): void;
    function N_0x55a8becaf28a4eb7(): number;
    function N_0x55ecf4d13d9903b0(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x55f5a5f07134de60(): void;
    function N_0x55fcc0c390620314(player1: number, player2: number, toggle: boolean): void;
    function N_0x560b423d73015e77(p0: number): number;
    function N_0x5688585e6d563cd8(p0: number): void;
    function N_0x56eb5e94318d3fb6(vehicle: number, p1: boolean): void;
    function N_0x577599cced639ca2(p0: number): void;
    function N_0x57d760d55f54e071(p0: number): void;
    function N_0x583df8e3d4afbd98(): number;
    function N_0x5845066d8a1ea7f7(vehicle: number, x: number, y: number, z: number, p4: number): void;
    function N_0x584770794d758c18(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0x58bb377bec7cd5f4(p0: boolean, p1: boolean): void;
    function N_0x59328eb08c5ceb2b(): boolean;
    function N_0x593feae1f73392d4(): number;
    function N_0x59424bd75174c9b1(): void;
    function N_0x59c3757b3b7408e8(vehicle: number, toggle: boolean, p2: number): void;
    function N_0x59d421683d31835a(p0: number): void;
    function N_0x5a34cd9c3c5bec44(p0: number): boolean;
    function N_0x5a43c76f7fc7ba5f(): void;
    function N_0x5a556b229a169402(): boolean;
    function N_0x5a7f62fda59759bd(): void;
    function N_0x5ad3932daeb1e5d3(): void;
    function N_0x5b0316762afd4a64(): number;
    function N_0x5b1f2e327b6b6fe1(): number;
    function N_0x5b6010b3cbc29095(p0: number, p1: boolean): void;
    function N_0x5b73c77d9eb66e24(p0: boolean): void;
    function N_0x5b9853296731e88d(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function N_0x5ba68a0840d546ac(p0: number, p1: number): number;
    function N_0x5bbcf35bf6e456f7(toggle: boolean): void;
    function N_0x5bd5f255321c4aaf(p0: number): number;
    function N_0x5bf29846c6527c54(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x5c3b791d580e0bc2(entity: number, p1: number): void;
    function N_0x5c41e6babc9e2112(p0: number): void;
    function N_0x5c48a1d6e3b33179(cam: number): boolean;
    function N_0x5c497525f803486b(): void;
    function N_0x5cdaed54b34b0ed0(p0: number): void;
    function N_0x5d2bfaab8d956e0e(): void;
    function N_0x5d96cfb59da076a0(vehicle: number, p1: number, p2: number): void;
    function N_0x5dbf05db5926d089(p0: number): void;
    function N_0x5debd9c4dc995692(): void;
    function N_0x5e3aa4ca2b6fb0ee(p0: number): void;
    function N_0x5e569ec46ec21cae(vehicle: number, toggle: boolean): void;
    function N_0x5ead2bf6484852e4(): boolean;
    function N_0x5ecd378ee64450ab(p0: number): void;
    function N_0x5edef0cf8c1dab3c(): boolean;
    function N_0x5ee5632f47ae9695(vehicle: number, health: number): void;
    function N_0x5f456788b05faeac(p0: number, p1: number, p2: number): void;
    function N_0x5f6df3d92271e8a1(toggle: boolean): void;
    function SetParticleFxBloodScale(toggle: boolean): void;
    function N_0x5fc472c501ccadb3(player: number): boolean;
    function N_0x5ff2c33b13a02a11(p0: number): void;
    function N_0x600f8cb31c7aab6e(p0: number): void;
    function N_0x60edd13eb3ac1ff3(): boolean;
    function N_0x60eedc12af66e846(p0: number): void;
    function N_0x6100b3cefd43452e(p0: number): void;
    function N_0x613f125ba3bd2eb9(): boolean;
    function N_0x615d3925e87a3b26(checkpoint: number): void;
    function N_0x61631f5df50d1c34(p0: boolean): void;
    function N_0x617f49c2668e6155(): number;
    function N_0x61f95e5bb3e0a8c6(p0: number): void;
    function N_0x62374889a4d59f72(): void;
    function N_0x62454a641b41f3c5(p0: number): void;
    function N_0x629526aba383bcaa(): void;
    function N_0x62e849b7eb28e770(p0: boolean): void;
    function N_0x62ecfcfdee7885d6(): void;
    function N_0x63b406d7884bfa95(): number;
    function N_0x63eb2b972a218cac(): void;
    function N_0x63ecf581bc70e363(p0: number, p1: number): void;
    function N_0x641f272b52e2f0f8(p0: number, p1: number): void;
    function N_0x6483c25849031c4f(p0: number, p1: number, p2: number, p3: number): number;
    function N_0x649c97d52332341a(p0: number): void;
    function N_0x64d779659bc37b19(entity: number): Vector3;
    function N_0x64e5c4cc82847b73(): boolean;
    function N_0x6501129c9e0ffa05(p0: number, p1: number): void;
    function N_0x65482bfd0923c8a1(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function N_0x6551b1f7f6cd46ea(p0: number): void;
    function N_0x659f9d71f52843f8(p0: number, p1: number): void;
    function N_0x65b080555ea48149(p0: number): void;
    function N_0x65d2ebb47e1cec21(toggle: boolean): void;
    function N_0x661b5c8654add825(cam: number, p1: boolean): void;
    function N_0x66972397e0757e7a(p0: number, p1: number, p2: number): void;
    function N_0x66a49d021870fe88(): void;
    function N_0x66e3aaface2d1eb8(p0: number, p1: number, p2: number): void;
    function N_0x66e7cb63c97b7d20(): number;
    function N_0x675721c9f644d161(): void;
    function N_0x675d19c6067cae08(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x678f86d8fc040bdb(p0: number): void;
    function N_0x67fc09bc554a75e5(): number;
    function N_0x68103e2247887242(): void;
    function N_0x68b562e124cc0aef(p0: number, p1: number): void;
    function N_0x690a61a6d13583f6(player: number): boolean;
    function N_0x690b76bd2763e068(): number;
    function N_0x692d58df40657e8c(
        p0: number,
        p1: number,
        p2: number,
        p4: number,
        p5: boolean
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x693478acbd7f18e7(): void;
    function N_0x694e00132f2823ed(entity: number, toggle: boolean): void;
    function N_0x699e4a5c8c893a18(p0: number, p1: string, p2: number): LuaMultiReturn<[boolean, number]>;
    function N_0x69ef772b192614c1(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x6a51f78772175a51(toggle: boolean): void;
    function N_0x6a5d89d7769a40d8(toggle: boolean): void;
    function N_0x6a60e43998228229(p0: number): void;
    function N_0x6a7f19756f1a9016(): boolean;
    function N_0x6a973569ba094650(vehicle: number, p1: number): void;
    function N_0x6ad0bd5e087866cb(p0: number): void;
    function N_0x6b7e4fb50d5f3d65(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x6bc0acd0673acebe(p0: number): LuaMultiReturn<[number, number]>;
    function N_0x6bccf9948492fd85(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x6bfb12ce158e3dd4(p0: number): boolean;
    function N_0x6bff5f84102df80a(player: number): void;
    function N_0x6cd79468a1e595c6(padIndex: number): boolean;
    function N_0x6ce50e47f5543d0c(): void;
    function N_0x6cebe002e58dee97(componentHash: number): number;
    function N_0x6d6840cee8845831(action: string): void;
    function N_0x6dee77aff8c21bd1(): LuaMultiReturn<[boolean, number, number]>;
    function N_0x6e0a5253375c4584(): number;
    function N_0x6e4361ff3e8cd7ca(p0: number): number;
    function N_0x6e91b04e08773030(action: string): void;
    function N_0x6eaaefc76acc311f(p0: number): number;
    function N_0x6ebfb22d646ffc18(vehicle: number, p1: boolean): void;
    function N_0x6f2135b6129620c1(toggle: boolean): void;
    function N_0x6f361b8889a792a3(): void;
    function N_0x6fb7bb3607d27fa2(): number;
    function N_0x6fcf8ddea146c45b(p0: number): boolean;
    function N_0x6fd97159fe3c971a(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x6fd992c4a1c1b986(): number;
    function N_0x6fddad856e36988a(vehicle: number, toggle: boolean): void;
    function N_0x6fddf453c0c756ec(): boolean;
    function N_0x701fda1e82076ba4(): void;
    function N_0x702bc4d605522539(p0: number): void;
    function N_0x7033eefd9b28088e(p0: number): void;
    function N_0x703cc7f60cbb2b57(p0: number): void;
    function N_0x705a276ebff3133d(): boolean;
    function N_0x70a382adec069dd3(coordX: number, coordY: number, coordZ: number): void;
    function N_0x70b8ec8fc108a634(p0: boolean, p1: number): void;
    function N_0x710bcda8071eded1(): boolean;
    function N_0x711794453cfd692b(p0: number, p1: number): void;
    function N_0x7148e0f43d11f0d9(): void;
    function N_0x71b008056e5692d6(): void;
    function N_0x71e7b2e657449aad(): number;
    function N_0x723c1ce13fbfdb67(p0: number, p1: number): void;
    function N_0x7241ccb7d020db69(entity: number, toggle: boolean): void;
    function N_0x725012a415dba050(p0: number, p2: number): LuaMultiReturn<[number, number]>;
    function N_0x7295c203dd659dfe(): void;
    function N_0x72beccf4b829522e(p0: number, p1: number): void;
    function N_0x72eb7ba9b69bf6ab(): boolean;
    function N_0x73001e34f85137f8(p0: number): void;
    function N_0x733c87d4ce22bea2(ped: number): void;
    function N_0x734e1714d077da9a(p0: number, p1: number): void;
    function N_0x73561d4425a021a2(p0: number, p1: number): void;
    function N_0x737e398138550fff(vehicle: number, toggle: boolean): void;
    function N_0x741a3d8380319a81(): void;
    function N_0x742b58f723233ed9(p0: number): number;
    function N_0x74a0fd0688f1ee45(p0: number): number;
    function N_0x74fb3e29e6d10fa9(): number;
    function N_0x754615490a029508(): number;
    function N_0x759650634f07b6b4(p0: number): boolean;
    function N_0x75ba1cb3b7d40caf(ped: number, p1: boolean): void;
    function N_0x760910b49d2b98ea(): void;
    function N_0x762db2d380b48d04(p0: number): void;
    function N_0x76b3f29d3f967692(p0: number, p1: number): void;
    function N_0x76d26a22750e849e(vehicle: number): void;
    function N_0x77faddcbe3499df7(p0: number): void;
    function N_0x7808619f31ff22db(): number;
    function N_0x7813e8b8c4ae4799(pickup: number): void;
    function N_0x78321bea235fd8cd(p0: number, p1: boolean): boolean;
    function N_0x78ceee41f49f421f(p0: number, p1: number): void;
    function N_0x78e8e3a640178255(entity: number): void;
    function N_0x793ff272d5b365f4(): number;
    function N_0x796a877e459b99ea(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x79c0e43eb9b944e2(hash: number): boolean;
    function N_0x79d310a861697cc9(profileSetting: number, settingValue: number): void;
    function N_0x79edac677ca62f81(transactionId: number): boolean;
    function N_0x7a42b2e236e71415(): void;
    function N_0x7ac24eab6d74118d(p0: boolean): boolean;
    function N_0x7b18da61f6bae9d5(p0: number): void;
    function N_0x7b8a361c1813fbef(): void;
    function N_0x7bae68775557ae0b(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function N_0x7bbe7ff626a591fe(p0: number): void;
    function N_0x7c226d5346d4d10a(p0: number): void;
    function N_0x7c4fccd2e4deb394(): boolean;
    function N_0x7d36291161859389(p0: number): void;
    function N_0x7d395ea61622e116(p0: boolean): void;
    function N_0x7d6f9a3ef26136a0(vehicle: number, toggle: boolean, p2: boolean): void;
    function N_0x7d8ba05688ad64c7(p0: number): void;
    function N_0x7db18ca8cad5b098(): number;
    function N_0x7db53b37a2f211a0(): number;
    function N_0x7e07c78925d5fd96(p0: number): number;
    function N_0x7e2bd3ef6c205f09(p0: string, p1: boolean): void;
    function N_0x7e6946f68a38b74f(p0: number): boolean;
    function N_0x7ec3c679d0e7e46b(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x7ec6f9a478a6a512(): void;
    function N_0x7ecdf98587e92dec(p0: number): void;
    function N_0x7eec2a316c250073(p0: number, p1: number, p2: number): void;
    function N_0x7ef7649b64d7ff10(entity: number): boolean;
    function N_0x7f2c4cdf2e82df4c(p0: number): boolean;
    function N_0x7f8f6405f4777af6(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: boolean
    ): number;
    function N_0x7f96f23fa9b73327(modelHash: number): void;
    function N_0x7fa5d82b8f58ec06(): boolean;
    function N_0x7fcc39c46c3c03bd(p0: number): boolean;
    function N_0x7ffcbfee44ecfabf(): number;
    function N_0x80054d7fcc70eec6(ped: number): void;
    function N_0x801879a9b4f4b2fb(): boolean;
    function N_0x80e3357fdef45c21(vehicle: number, toggle: boolean): void;
    function N_0x810b5fcc52ec7ff0(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x814af7dcaacc597b(p0: number): void;
    function N_0x817b86108eb94e51(
        p0: boolean
    ): LuaMultiReturn<[number, number, number, number, number, number, number, number]>;
    function N_0x81cbae94390f9f89(): void;
    function N_0x820e9892a77e97cd(p0: number, p1: number): void;
    function N_0x8235f1bead557629(vehicle: number, toggle: boolean): void;
    function N_0x823ec8e82ba45986(p0: number): void;
    function N_0x8269816f6cfd40f8(name: string): number;
    function N_0x826d1ee4d1cafc78(p0: number, p1: number): void;
    function N_0x829cd22e043a2577(p0: number): number;
    function N_0x82acc484ffa3b05f(p0: number): number;
    function N_0x82e0ac411e41a5b4(toggle: boolean): void;
    function N_0x82ebb79e258fa2b7(entity: number, interiorID: number): void;
    function N_0x830c3a44eb3f2cf9(p0: number): void;
    function N_0x834344a414c7c85d(p0: number, p1: number): void;
    function N_0x83660b734994124d(p0: number, p1: number, damageDealt: number): LuaMultiReturn<[number, number]>;
    function N_0x836b62713e0534ca(): boolean;
    function N_0x83a169eabcdb10a2(p0: number, p1: number): void;
    function N_0x83fe8d7229593017(): void;
    function N_0x8410c5e0cd847b9d(): void;
    function N_0x8423541e8b3a1589(p0: number, p1: number, p2: number): void;
    function N_0x84a810b375e69c0e(): number;
    function N_0x84b418e93894ac1c(): number;
    function N_0x84de3b5fb3e666f0(ropeId: number): LuaMultiReturn<[boolean, number]>;
    function N_0x84dfc579c2fc214c(p0: number): void;
    function N_0x851cd923176eba7c(): void;
    function N_0x8533cafde1f0f336(p0: number): number;
    function N_0x858ec9fd25de04aa(p0: number, p1: number): void;
    function N_0x85f6c9aba1de2bcf(): number;
    function N_0x86255b1fc929e33e(p0: number): number;
    function N_0x8634cef2522d987b(ped: number, p1: string, value: number): void;
    function N_0x8664170ef165c4a6(p0: number, p1: number): void;
    function N_0x870289a558348378(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x870b8b7a766615c8(p0: number, p1: number, p2: number): void;
    function N_0x87ddeb611b329a9c(multiplier: number): void;
    function N_0x88087ee1f28024ae(p0: number): void;
    function N_0x8821196d91fa2de5(vehicle: number, toggle: boolean): void;
    function N_0x88578f6ec36b4a3a(p0: number, p1: number): number;
    function N_0x887fa38787de8c72(vehicle: number): void;
    function N_0x8881c98a31117998(p0: number): void;
    function N_0xa90e7227a9303fa9(p0: number): void;
    function N_0x88b588b41ff7868e(): number;
    function N_0x88bc673ca9e0ae99(vehicle: number, p1: boolean): void;
    function N_0x892b6ab8f33606f5(p0: number, entity: number): void;
    function N_0x8951eb9c6906d3c8(): void;
    function N_0x8989cbd7b4e82534(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function N_0x8a4416c0db05fa66(newsStoryData: number): LuaMultiReturn<[boolean, number]>;
    function N_0x8b0c2964ba471961(): number;
    function N_0x8b4ffc790ca131ef(p0: number, p1: number, p2: number, p3: number): number;
    function N_0x8b9cdbd6c566c38c(): number;
    function N_0x8bf907833be275de(p0: number, p1: number): void;
    function N_0x8c8d2739ba44af0f(p0: number): boolean;
    function N_0x8c9d11605e59d955(p0: number): void;
    function N_0x8caab2bd3ea58bd4(p0: number): void;
    function N_0x8cc469ab4d349b7c(p0: number, p1: string, p2: number): LuaMultiReturn<[boolean, number]>;
    function N_0x8cde909a0370bb3a(toggle: boolean): void;
    function N_0x8cff648fbd7330f1(p0: number): void;
    function N_0x8d74e26f54b4e5c3(p0: string): void;
    function N_0x8d768602adef2245(player: number, p1: number): void;
    function N_0x8d8adb562f09a245(p0: number): void;
    function N_0x8d9df6eca8768583(threadId: number): void;
    function N_0x8dca505a5c196f05(p0: number, p1: number): void;
    function N_0x8e243837643d9583(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x8ec74ceb042e7cff(p0: number): void;
    function N_0x8ef52acaecc51d9c(toggle: boolean): void;
    function N_0x8f08017f9d7c47bd(p0: number, p2: number): LuaMultiReturn<[boolean, number]>;
    function N_0x8f0d5ba1c2cc91d7(toggle: boolean): void;
    function N_0x906ca41a4b74eca4(): number;
    function N_0x908311265d42a820(p0: number): void;
    function N_0x9097eb6d4bb9a12a(player: number, entity: number): void;
    function N_0x90cd7c6871fbf1b4(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x916ca67d26fd1e37(p0: string): void;
    function N_0x91ef6ee6419e5b97(p0: boolean): void;
    function N_0x9237e334f6e43156(p0: number): number;
    function N_0x92da6e70ef249bd1(p0: string, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0x92fc0eedfac04a14(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function N_0x930f504203f561c9(p0: number): void;
    function N_0x933bbeeb8c61b5f4(): boolean;
    function N_0x94538037ee44f5cf(p0: boolean): void;
    function N_0x9465e683b12d3f6b(): void;
    function N_0x9489659372a81585(): boolean;
    function N_0x949f397a288b28b3(p0: number): void;
    function N_0x95a7dabddbb78ae7(iplName1: string, iplName2: string): void;
    function N_0x95baf97c82464629(p0: number, p1: number): void;
    function N_0x9640e30a7f395e4b(vehicle: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x9641588dab93b4b5(p0: number): void;
    function N_0x96e2929292a4db77(componentHash: number): number;
    function N_0x96e6d5150dbf1c09(p0: number, p1: number, p2: number): void;
    function N_0x973d76aa760a6cb6(p0: boolean): void;
    function N_0x977ca98939e82e4b(weaponObject: number, p1: number): void;
    function N_0x97841634ef7df1d6(vehicle: number, toggle: boolean): void;
    function N_0x97e7e2c04245115b(p0: number): void;
    function N_0x97ffb4adeed08066(p0: number, p1: number): void;
    function N_0x9849de24fcf23ccc(vehicle: number, toggle: boolean): void;
    function N_0x98c3cf913d895111(_string: string, length: number): string;
    function N_0x98d18905bf723b99(): number;
    function N_0x98e2bc1ca26287c3(): void;
    function N_0x98edf76a7271e4f2(): void;
    function N_0x9911f4a24485f653(p0: boolean): void;
    function N_0x998e18ceb44487fc(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x99a05839c46ce316(toggle: boolean): void;
    function N_0x99cad8e7afdb60fa(vehicle: number, p1: number, p2: number): void;
    function N_0x9a62ec95ae10e011(): number;
    function N_0x9a75585fb2e54fad(x: number, y: number, z: number, radius: number): void;
    function N_0x9a77dfd295e29b09(ped: number, toggle: boolean): void;
    function N_0x9ac92eed5e4793ab(): void;
    function N_0x9b079e5221d984d3(p0: boolean): void;
    function N_0x9b4bd21d69b1e609(): void;
    function N_0x9b5016a6433a68c5(): number;
    function N_0x9bd7bd55e4533183(p0: number, p1: number, p2: number): void;
    function N_0x9bddc73cc6a115d4(vehicle: number, p1: boolean, p2: boolean): void;
    function N_0x9becd4b9fef3f8a6(vehicle: number, p1: boolean): void;
    function N_0x9c6a6c19b6c0c496(ped: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0x9d252648778160df(p0: number): number;
    function N_0x9d30687c57baa0bb(p0: number): void;
    function N_0x9d3af56e94c9ae98(vehicle: number, p1: number): void;
    function N_0x9d724b400a7e8ffc(p0: number, p1: number): void;
    function N_0x9d7afcbf21c51712(toggle: boolean): void;
    function N_0x9de5d2f723575ed0(): boolean;
    function N_0x9dfe13ecdc1ec196(p0: boolean, p1: boolean): void;
    function SetTimeIdleDrop(p0: boolean, p1: boolean): void;
    function N_0x9e30e91fb03a2caf(): LuaMultiReturn<[boolean, number, number]>;
    function N_0x9e6542f0ce8e70a3(toggle: boolean): void;
    function N_0x9ebd751e5787baf2(p0: boolean): void;
    function N_0x9ec8858184cd253a(): number;
    function N_0x9edd76e87d5d51ba(player: number): void;
    function N_0x9f260bfb59adbca3(player: number, entity: number): void;
    function N_0x9f3f689b814f2599(vehicle: number, p1: boolean): void;
    function N_0x9f97da93681f87ea(): void;
    function N_0x9fcb3cbfb3ead69a(p0: number, p1: number): void;
    function N_0x9fedf86898f100e9(): number;
    function N_0xa01bc64dd4bfbbac(vehicle: number, seatIndex: number): number;
    function N_0xa08fe5e49bdc39dd(p0: number, p1: number, p2: boolean): void;
    function N_0xa0ad167e4b39d9a2(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number,
        p12: number,
        p13: number
    ): number;
    function N_0xa0cefcea390aab9b(p0: number): void;
    function N_0xa0f93d5465b3094d(p0: number): LuaMultiReturn<[boolean, number]>;
    function N_0xa0fa4ec6a05da44e(): number;
    function N_0xa0fe76168a189ddb(): number;
    function N_0xa12d3a5a3753cc23(): number;
    function N_0xa17784fca9548d15(p0: number, p1: number, p2: number): void;
    function N_0xa1ae736541b0fca3(p1: boolean): number;
    function N_0xa213b11dff526300(): boolean;
    function N_0xa238192f33110615(): LuaMultiReturn<[boolean, number, number, number]>;
    function N_0xa247f9ef01d8082e(p0: number): void;
    function N_0xa2767257a320fc82(p0: number, p1: boolean): void;
    function N_0xa2c1f5e92afe49ed(): void;
    function N_0xa2c9ac24b4061285(ped: number, weaponHash: number): number;
    function N_0xa2ccbe62cd4c91a4(toggle: number): void;
    function N_0xa2e9c1ab8a92e8cd(toggle: boolean): void;
    function N_0xa306f470d1660581(): number;
    function N_0xa3c53804bdb68ed2(p0: number, p1: number): void;
    function N_0xa3f3564a5b3646c0(ped: number): boolean;
    function N_0xa468e0be12b12c70(): boolean;
    function N_0xa46b73faa3460ae1(p0: boolean): void;
    function N_0xa4822f1cf23f4810(
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): LuaMultiReturn<[boolean, number, Vector3, Vector3]>;
    function N_0xa4a0065e39c9f25c(): LuaMultiReturn<[boolean, number, number, boolean, boolean]>;
    function N_0xa4a9a4c40e615885(p0: number): void;
    function N_0xa51338e0dccd4065(p0: number, p1: number, p2: number): void;
    function N_0xa51b086b0b2c0f7a(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xa52d5247a4227e14(p0: number): void;
    function N_0xa5eafe473e45c442(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number
    ): void;
    function N_0xa660faf550eb37e5(p0: number, p1: boolean): void;
    function N_0xa6eef01087181edd(p0: number, p1: number): number;
    function N_0xa6f54bb2ffca35ea(p0: number): void;
    function N_0xa6fceccf4721d679(p0: number): void;
    function N_0xa7092afe81944852(): void;
    function N_0xa736cf7fb7c5bff4(): LuaMultiReturn<[number, number, number, number]>;
    function N_0xa761d4ac6115623d(): number;
    function N_0xa7862bc5ed1dfd7e(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0xa78b8fa58200da56(p0: number): void;
    function N_0xa7dcdf4ded40a8f4(vehicle: number, p1: boolean): void;
    function N_0xa85a21582451e951(doorHash: number, p1: boolean): void;
    function N_0xa8733668d1047b51(p0: number): void;
    function N_0xa8a7d434afb4b97b(p0: string, p1: number): void;
    function N_0xa8acb6459542a8c8(): number;
    function N_0xa943fd1722e11efd(): number;
    function N_0xa95cfb4e02390842(p0: number, p1: number, p2: number): void;
    function N_0xa95f667a755725da(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xa9b61a329bfdcbea(p0: number, p1: boolean): void;
    function N_0xaa059c615de9dd03(p0: number, p1: number): void;
    function N_0xaa19f5572c38b564(p0: number): LuaMultiReturn<[number, number]>;
    function N_0xaa525dff66bb82f5(p0: number, p1: number, p2: number): void;
    function N_0xaa5fafcd2c5f5e47(): Vector3;
    function N_0xaa653ae61924b0a0(vehicle: number, toggle: boolean): void;
    function N_0xaa76052dda9bfc3e(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function N_0xaaa6a3698a69e048(p0: number): number;
    function N_0xaabd62873ffb1a33(p0: number, p1: number): void;
    function N_0xaae9be70ec7c69ab(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number
    ): void;
    function N_0xab04325045427aae(vehicle: number, p1: boolean): void;
    function N_0xab13a5565480b6d9(ped: number, p1: string): number;
    function N_0xab31ef4de6800ce9(p0: number, p1: number): void;
    function N_0xab6781a5f3101470(p0: number, p1: number): void;
    function N_0xac2890471901861c(p0: number): void;
    function N_0xad27d957598e49e9(ped: number, p1: number, p2: number, hash: number, p4: number, p5: number): void;
    function N_0xad73ce5a09e42d12(player: number): void;
    function N_0xadb57e5b663cca8b(p0: number): LuaMultiReturn<[number, number]>;
    function N_0xadd6627c4d325458(p0: number): void;
    function N_0xadf084fb8f075d06(p0: number): boolean;
    function N_0xae3fee8709b39dcb(vehicle: number): boolean;
    function N_0xae51bc858f32ba66(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0xaeab987727c5a8a4(p0: number): boolean;
    function N_0xaedf1bc1c133d6e3(): number;
    function N_0xaf348afcb575a441(roomName: string): void;
    function N_0xaf60e6a2936f982a(p0: number, p1: number): void;
    function N_0xafc976fd0580c7b3(ped: number, toggle: boolean): void;
    function N_0xafe24e4d29249e4a(object: number, p1: number, p2: number, p3: boolean): boolean;
    function N_0xaff47709f1d5dcce(): number;
    function N_0xb1381b97f70c7b30(): void;
    function N_0xb13e88e655e5a3bc(): void;
    function N_0xb17bc6453f6cf5ac(p0: number, p1: number): void;
    function N_0xb1b6216ca2e7b55e(p0: number, p1: boolean, p2: boolean): void;
    function N_0xb1d2bb1e1631f5b1(): boolean;
    function N_0xb26f670685631727(p0: number): void;
    function N_0xb282749d5e028163(p0: number, p1: number): void;
    function N_0xb2d0bde54f0e8e5a(object: number, toggle: boolean): void;
    function N_0xb2e0c0d6922d31f2(vehicle: number, toggle: boolean): void;
    function N_0xb2ebe8cbc58b90e9(): number;
    function N_0xb309ebea797e001f(p0: number): number;
    function N_0xb3352e018d6f89df(toggle: boolean): void;
    function N_0xb37e4e6a2388ca7b(): boolean;
    function N_0xb3c641f3630bf6da(p0: number): void;
    function N_0xb3da2606774a8e2d(): boolean;
    function N_0xb45eff719d8427a6(p0: number): void;
    function N_0xb4c2ec463672474e(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xb4deae67f35e2acd(p0: number): void;
    function N_0xb51b9ab9ef81868c(toggle: boolean): void;
    function N_0xb542de8c3d1cb210(p0: boolean): void;
    function N_0xb552929b85fc27ec(p0: number, p1: number): void;
    function N_0xb569f41f3e7e83a4(p0: number): void;
    function N_0xb5b58e24868cb09e(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0xb5b7742424bd4445(p0: number, p1: number): void;
    function N_0xb5d3453c98456528(): number;
    function N_0xb606e6cc59664972(p0: number): void;
    function N_0xb68cfaf83a02768d(vehicle: number, toggle: boolean): void;
    function N_0xb743f735c03d7810(ropeId: number, p1: number): void;
    function N_0xb746d20b17f2a229(): LuaMultiReturn<[boolean, number, number]>;
    function N_0xb7b873520c84c118(): void;
    function N_0xb7c6d80fb371659a(): void;
    function N_0xb81cf134aeb56ffb(): void;
    function N_0xb885852c39cc265d(): void;
    function N_0xb8b52e498014f5b0(ped: number): boolean;
    function N_0xb9351a07a0d458b1(p0: number): number;
    function N_0xb9562064627ff9db(p0: number, p1: number): void;
    function N_0xb9cf1f793a9f1bf1(): boolean;
    function N_0xba0127da25fd54c9(p0: number, p1: number): void;
    function N_0xba3d194057c79a7b(p0: string): void;
    function N_0xba4b8d83bdc75551(p0: number): void;
    function N_0xba7f0b77d80a4eb7(p0: number, p1: number): void;
    function N_0xba8d65c1c65702e5(toggle: boolean): void;
    function N_0xba9749cc94c1fd85(): number;
    function N_0xbaa2f0490e146be8(p0: number): void;
    function N_0xbb2333bb87ddd87f(p0: number, p1: number): void;
    function N_0xbb90e12cac1dab25(p0: number): void;
    function N_0xbc0ce682d4d05650(
        ropeId: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number,
        p12: number,
        p13: number
    ): void;
    function N_0xbc9490ca15aea8fb(player: number): void;
    function N_0xbcedb009461da156(): number;
    function N_0xbd0efb25cca8f97a(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xbd545d44cce70597(): boolean;
    function N_0xbdb6f89c729cf388(): boolean;
    function N_0xbe197eaa669238f4(p0: number, p1: number, p2: number, p3: number): number;
    function N_0xbe3db208333d9844(): number;
    function N_0xbe5c1255a1830ff5(vehicle: number, toggle: boolean): void;
    function N_0xbeb2d9a1d9a8f55a(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xbed8ca5ff5e04113(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xbed9f5693f34ed17(statName: number, p1: number, outValue: number): LuaMultiReturn<[boolean, number]>;
    function N_0xbef34b1d9624d5dd(p0: boolean): void;
    function N_0xbf22e0f32968e967(player: number, p1: boolean): void;
    function N_0xbf371cd2b64212fd(p0: number): void;
    function N_0xbf4dc1784be94dfa(ped: number, p1: boolean, hash: number): void;
    function N_0xbf4f34a85ca2970c(): void;
    function N_0xbf72910d0f26f025(): number;
    function N_0xbfafdb5faaa5c5ab(p0: number): void;
    function N_0xbffe53ae7e67fcdc(p0: number, p1: number): void;
    function N_0xc01d2470f22cde5a(): void;
    function N_0xc03fab2c2f92289b(p0: number): void;
    function N_0xc0416b061f2b7e5e(p0: boolean): void;
    function N_0xc0e0d686ddfc6eae(): number;
    function N_0xc0ed6438e6d39ba8(p0: number, p1: number, p2: number): void;
    function N_0xc13c38e47ea5df31(p0: number): LuaMultiReturn<[boolean, number]>;
    function N_0xc141b8917e0017ec(): void;
    function N_0xc14bd9f5337219b2(p0: number): void;
    function N_0xc1805d05e6d4fe10(vehicle: number): void;
    function N_0xc1e963c58664b556(p0: number): void;
    function N_0xc2c97ea97711d1ae(): boolean;
    function N_0xc2d2ad9eaae265b8(): boolean;
    function N_0xc2ee020f5fb4db53(ped: number): void;
    function N_0xc30bdaee47256c13(p0: number): number;
    function N_0xc32ea7a2f6ca7557(): number;
    function N_0xc3376f42b1faccc6(player: number): void;
    function SetAreasGeneratorOrientation(player: number): void;
    function N_0xc34bc448da29f5e9(entity: number, toggle: boolean): void;
    function N_0xc35a6d07c93802b2(): void;
    function N_0xc361aa040d6637a8(vehicle: number, p1: boolean): void;
    function N_0xc42dd763159f3461(): boolean;
    function N_0xc434133d9ba52777(p0: number, TypeOfWeapon: number): LuaMultiReturn<[number, number]>;
    function N_0xc4637a6d03c24cc3(): boolean;
    function N_0xc4b3347bd68bd609(p0: number): void;
    function N_0xc50ce861b55eab8b(vehicle: number, p1: boolean): void;
    function N_0xc56fbf2f228e1dac(modelHash: number, p1: number, p2: number): number;
    function N_0xc571d0e77d8bbc29(): boolean;
    function N_0xc594b315edf2d4af(ped: number): void;
    function N_0xc5a35c73b68f3c49(): boolean;
    function N_0xc5c8f970d4edff71(p0: number): void;
    function N_0xc6033d32241f6fb5(object: number, toggle: boolean): void;
    function N_0xc61b86c9f61eb404(toggle: boolean): void;
    function N_0xc64a06d939f826f5(): LuaMultiReturn<[boolean, number, number, number]>;
    function N_0xc67db108a9ade3be(p0: number, p1: number): void;
    function N_0xc67e2da1cbe759e2(): void;
    function N_0xc6e0e2616a7576bb(): number;
    function N_0xc6e74cf8c884c880(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function N_0xc7f29ca00f46350e(p0: boolean): void;
    function N_0xc830417d630a50f9(transactionId: number): boolean;
    function N_0xc8391c309684595a(): void;
    function N_0xc847b43f369ac0b5(): void;
    function N_0xc87e740d9f3872cc(): number;
    function N_0xc8b1b2425604cdd0(): boolean;
    function N_0xc8b5c4a79cc18b94(cam: number): void;
    function N_0xc8e1071177a23be5(): LuaMultiReturn<[boolean, number, number, number]>;
    function N_0xc8ede9bdbccba6d4(p1: number, p2: number, p3: number): number;
    function N_0xca465d9cc0d231ba(p0: number): void;
    function N_0xca4ae345a153d573(p0: boolean): void;
    function N_0xca575c391fea25cc(p0: number): void;
    function N_0xca59ccae5d01e4ce(): void;
    function N_0xca6b2f7ce32ab653(p0: number, p2: number): LuaMultiReturn<[boolean, number]>;
    function N_0xcac57395b151135f(player: number, p1: boolean): void;
    function N_0xcb0360efefb2580d(padIndex: number): void;
    function N_0xcb645e85e97ea48b(): boolean;
    function N_0xcb82a0bf0e3e3265(p0: number): number;
    function N_0xcc25a4553dfbf9ea(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0xcc6e963682533882(object: number): void;
    function N_0xccd078c2665d2973(p0: boolean): void;
    function N_0xcd018c591f94cb43(ped: number, p1: boolean): void;
    function N_0xcd0f5b5d932ae473(): void;
    function N_0xcd4d66b43b1dd28d(p0: number, p1: number, p2: number): void;
    function N_0xcd74233600c4ea6b(toggle: boolean): void;
    function N_0xcea7c8e1b48ff68c(p0: number, p1: number): void;
    function N_0xced08cbe8ebb97c7(p0: number, p1: number): void;
    function N_0xceda60a74219d064(p0: number, p1: boolean): void;
    function N_0xcf9159024555488c(p0: number): void;
    function N_0xcfd16f0db5a3535c(toggle: boolean): void;
    function N_0xcfd778e7904c255e(vehicle: number): void;
    function N_0xcfeb46dcd7d8d5eb(p0: boolean): void;
    function N_0xd05a3241b9a86f19(p0: number, p1: number): void;
    function N_0xd10282b6e3751ba0(): number;
    function N_0xd1942374085c8469(p0: number): void;
    function N_0xd1a1ee3b4fa8e760(p0: number): void;
    function N_0xd1c55b110e4df534(p0: number): void;
    function N_0xd1c9b92bdd3f151d(p0: number, p1: number, p2: number): void;
    function N_0xd2049635deb9c375(): void;
    function N_0xd29334ed1a256dbf(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0xd2dccd8e16e20997(p0: number): void;
    function N_0xd313de83394af134(): boolean;
    function N_0xd3301660a57c9272(p0: number): void;
    function N_0xd33daa36272177c4(ped: number): void;
    function N_0xd3e51c0ab8c26eee(p0: number, p1: number): number;
    function N_0xd4196117af7bb974(p0: number, p1: number): number;
    function N_0xd4367d310f079db0(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xd4a7a435b3710d05(x: number, y: number, z: number, radius: number): void;
    function N_0xd558bec0bba7e8d2(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0xd565f438137f0e10(p0: number, p1: number): void;
    function N_0xd642319c54aadeb6(): number;
    function N_0xd6ca58b3b53a0f22(p0: number): void;
    function N_0xd6d7478ca62b8d41(p0: number, p1: number): void;
    function N_0xd7b6c73cad419bcf(p0: boolean): void;
    function N_0xd7b80e7c3befc396(p0: number, p1: number): void;
    function N_0xd8122c407663b995(): number;
    function N_0xd821056b9acf8052(player: number, p1: number): void;
    function N_0xd9454b5752c857dc(): void;
    function N_0xd9f692d349249528(): void;
    function N_0xda07819e452ffe8f(p0: number): void;
    function N_0xdaf80797fc534bec(p0: number): void;
    function N_0xdaf87174be7454ff(p0: number): boolean;
    function N_0xdb1ea9411c8911ec(checkpointHandle: number): void;
    function N_0xdb41d07a45a6d4b7(p0: number): number;
    function N_0xdb663cc9ff3407a9(player: number): number;
    function N_0xdb90c6cca48940f1(p0: boolean): void;
    function N_0xdbc631f109350b8c(vehicle: number, p1: boolean): void;
    function N_0xdbf860cf1db8e599(p0: number): number;
    function N_0xdc6f8601faf2e893(entity: number, toggle: boolean): void;
    function N_0xdcc07526b8ec45af(player: number): boolean;
    function N_0xdce97bdf8a0eabc8(): void;
    function N_0xdd2620b7b9d16ff1(player: number, p1: number): boolean;
    function N_0xdd6bcf9e94425df9(): void;
    function N_0xdd79df9f4d26e1c9(): void;
    function N_0xde03620f8703a9df(): number;
    function N_0xde45d1a1ef45ee61(player: number, toggle: boolean): void;
    function SetHudAnimStopLevel(player: number, toggle: boolean): void;
    function N_0xde68e30d89f97132(amount: number, p1: number): void;
    function N_0xdeaaf77eb3687e97(p0: number, p1: number): LuaMultiReturn<[number, number]>;
    function N_0xdf4b952f7d381b95(): number;
    function N_0xdfbd93bf2943e29b(p0: number): void;
    function N_0xdfcdb14317a9b361(p0: number): void;
    function N_0xdfe68c4b787e1bfb(ped: number): void;
    function N_0xe058175f8eafe79a(p0: boolean): void;
    function N_0xe05dd0e9707003a3(p0: number, p1: boolean): void;
    function N_0xe05f6aeefeb0bb02(p0: number, p1: number, p2: number): void;
    function N_0xe0f82d68c7039158(p0: number): void;
    function N_0xe111a7c0d200cbc5(p0: number, p1: number): void;
    function N_0xe154b48b68ef72bc(p0: number): boolean;
    function N_0xe1615ec03b3bb4fd(): boolean;
    function N_0xe16aa70ce9beedc3(p0: number): number;
    function N_0xe23adc6fcb1f29ae(p0: number, p1: number, p2: number): void;
    function N_0xe2892e7e55d7073a(p0: number): void;
    function N_0xe2bb399d90942091(p0: number, p1: number): void;
    function N_0xe2e244ab823b4483(amount: number, p1: number): void;
    function N_0xe2f53f172b45ede1(): void;
    function N_0xe3261d791eb44acb(p0: number): void;
    function N_0xe36a98d8ab3d3c66(p0: boolean): void;
    function N_0xe3d969d2785ffb5e(): void;
    function N_0xe3e2c1b4c59dbc77(unk: number): void;
    function N_0xe3e5a7c64ca2c6ed(): number;
    function N_0xe42d626eec94e5d9(
        p0: number,
        p1: number,
        p2: number,
        p3: number
    ): LuaMultiReturn<[number, number, number]>;
    function N_0xe496a53ba5f50a56(p0: number): number;
    function N_0xe4c3b169876d33d7(p0: number): void;
    function N_0xe4dcec7fd5b739a5(ped: number): void;
    function N_0xe4e6dd5566d28c82(): void;
    function N_0xe4f6e8d07a2f0f51(p0: number): number;
    function N_0xe532ec1a63231b4f(p0: number, p1: number): void;
    function N_0xe5810ac70602f2f5(vehicle: number, p1: number): void;
    function N_0xe59343e9e96529e7(): number;
    function N_0xe5e9746a66359f9d(): number;
    function N_0xe63d7c6eececb66b(toggle: boolean): void;
    function N_0xe66377cddada4810(entity: number, p1: boolean): void;
    function N_0xe6717e652b8c8d8a(p0: number, p1: number): void;
    function N_0xe67c6dfd386ea5e7(p0: boolean): void;
    function N_0xe6d2cedd370ff98e(p0: number, p1: number): void;
    function N_0xe75a4a2e5e316d86(): boolean;
    function N_0xe791df1f73ed2c8b(p0: number): number;
    function N_0xe851e480b814d4ba(vehicle: number, p1: boolean): void;
    function N_0xe8718faf591fd224(vehicle: number): boolean;
    function N_0xe8853fbce7d8d0d6(): number;
    function N_0xe906ec930f5fe7c8(p0: number, p1: number): void;
    function N_0xe95b0c7d5ba3b96b(ped: number): boolean;
    function N_0xea8c0ddb10e2822a(p0: number, p1: number): void;
    function N_0xea95c0853a27888e(): void;
    function N_0xea9960d07dadcf10(p0: number): number;
    function N_0xeaf0fa793d05c592(): number;
    function N_0xeb078ca2b5e82add(p0: number, p1: number): void;
    function N_0xeb2104e905c6f2e9(): number;
    function N_0xeb6f1a9b5510a5d2(p0: number, p1: boolean): void;
    function N_0xeb81a3dadd503187(): void;
    function N_0xebcab9e5048434f4(): number;
    function N_0xebd3205a207939ed(p0: number): void;
    function N_0xebf8284d8cadeb53(): void;
    function N_0xebfa8d50addc54c4(p0: number): boolean;
    function N_0xec4b4b3b9908052a(ped: number, unk: number): void;
    function N_0xec72c258667be5ea(p0: number): number;
    function N_0xecb41ac6ab754401(): boolean;
    function N_0xed3c76adfa6d07c4(ped: number): void;
    function N_0xed5ede9e676643c9(p0: number, p1: number): void;
    function N_0xed5fd7af10f5e262(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xed76d195e6e3bf7f(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xedbc8405b3895cc9(p0: number, p1: number): void;
    function N_0xedbf6c9b0d2c65c8(p0: number): void;
    function N_0xeebfc7a7efdc35b4(vehicle: number): number;
    function N_0xef398beee4ef45f9(p0: boolean): void;
    function N_0xef39ee20c537e98c(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function N_0xef9d388f8d377f44(vehicle: number, p1: boolean): void;
    function N_0xefabc7722293da7c(): void;
    function N_0xf033419d1b81fae8(p0: number): number;
    function N_0xf051d9bfb6ba39c0(p0: number): void;
    function N_0xf06a6f41cb445443(p0: number): void;
    function N_0xf083835b70ba9bfe(): void;
    function N_0xf11f01d98113536a(p0: number): LuaMultiReturn<[number, number]>;
    function N_0xf13fe2a80c05c561(): boolean;
    function N_0xf1a1803d3476f215(value: number): void;
    function N_0xf22ca0fd74b80e7a(p0: number): boolean;
    function N_0xf2385935bffd4d92(ped: number): boolean;
    function N_0xf239400e16c23e08(padIndex: number, p1: number): void;
    function N_0xf25e02cb9c5818f8(): void;
    function N_0xf284ac67940c6812(): number;
    function N_0xf287f506767cc8a9(): number;
    function N_0xf2bebcdfafdaa19e(toggle: boolean): void;
    function N_0xf2ca003f167e21d2(): number;
    function ReturnZero(): number;
    function N_0xf2e07819ef1a5289(): boolean;
    function N_0xf3365489e0dd50f9(vehicle: number, toggle: boolean): void;
    function N_0xf3b0e0aed097a3f5(p0: number, p1: number): number;
    function N_0xf3f776ada161e47d(p0: number, p1: number): void;
    function N_0xf49abc20d8552257(p0: number): void;
    function N_0xf4a0dadb70f57fa6(): void;
    function N_0xf51d36185993515d(
        checkpoint: number,
        posX: number,
        posY: number,
        posZ: number,
        unkX: number,
        unkY: number,
        unkZ: number
    ): void;
    function N_0xf534d94dfa2ead26(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0xf55e4046f6f831dc(p0: number, p1: number): void;
    function N_0xf56dfb7b61be7276(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number,
        p12: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0xf6baaaf762e1bf40(p0: string, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0xf6f4383b7c92f11a(p0: number): void;
    function N_0xf78b803082d4386f(p0: number): void;
    function N_0xf78f94d60248c737(vehicle: number, p1: boolean): boolean;
    function N_0xf814fec6a19fd6e0(): void;
    function N_0xf8155a7f03ddfc8e(p0: number): void;
    function N_0xf83d0febe75e62c9(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number
    ): void;
    function N_0xf854439efbb3b583(): void;
    function N_0xf8ad2eed7c47e8fe(ped: number, p1: boolean, p2: boolean): void;
    function N_0xf8b49f5ba7f850e7(vehicle: number, p1: number): void;
    function N_0xf8c54a461c3e11dc(): LuaMultiReturn<[number, number, number, number]>;
    function N_0xf9096193df1f99d4(p0: number): void;
    function N_0xf92099527db8e2a7(p0: number, p1: number): void;
    function N_0xf9acf4a08098ea25(ped: number, p1: boolean): void;
    function N_0xf9f2922717b819ec(): number;
    function N_0xfa07759e6fddd7cf(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xfa1e0e893d915215(toggle: boolean): void;
    function N_0xfa2888e3833c8e96(): void;
    function N_0xfa3ffb0eebc288a3(p0: boolean): void;
    function N_0xfa83ca6776038f64(x: number, y: number, z: number): void;
    function N_0xfaa457ef263e8763(name: string): number;
    function N_0xfab944d4d481accb(ped: number, toggle: boolean): void;
    function N_0xfac18e7356bd3210(): void;
    function N_0xfac75988a7d078d3(player: number): void;
    function N_0xfae628f1e9adb239(p0: number, p1: number, p2: number): void;
    function N_0xfaf2a78061fd9ef4(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xfb00ca71da386228(): void;
    function N_0xfb199266061f820a(): boolean;
    function N_0xfb1f9381e80fa13f(p0: number, p1: number): LuaMultiReturn<[number, number]>;
    function N_0xfb680d403909dc70(p0: number, p1: number): void;
    function N_0xfb80ab299d2ee1bd(toggle: boolean): void;
    function N_0xfcc228e07217fcac(p0: number): void;
    function N_0xfcf6788fc4860cd4(checkpoint: number): void;
    function N_0xfd3151cd37ea2245(entity: number): void;
    function N_0xfd325494792302d7(ped: number, toggle: boolean): void;
    function SetTimeExclusiveDisplayTexture(ped: number, toggle: boolean): void;
    function N_0xfd75dabc0957bf33(p0: boolean): void;
    function N_0xfdc07c58e8aab715(pickupHash: number): void;
    function N_0xfe4c1d0d3b9cc17e(p0: number, p1: boolean): boolean;
    function N_0xfec9a3b1820f3331(ped: number): boolean;
    function N_0xff266d1d0eb1195d(): void;
    function N_0xff4803bc019852d9(p0: number, p1: number): void;
    function N_0xff8f3a92b75ed67a(): number;
    function N_0xffee8fa29ab9a18e(player: number): void;
    function NetGameserverBasketAddItem(quantity: number): LuaMultiReturn<[boolean, number]>;
    function N_0xf30980718c8ed876(quantity: number): LuaMultiReturn<[boolean, number]>;
    function NetworkShopBasketAddItem(quantity: number): LuaMultiReturn<[boolean, number]>;
    function NetGameserverBasketApplyServerData(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0xe1a0450ed46a7812(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function NetworkShopBasketApplyServerData(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function NetGameserverBasketDelete(): boolean;
    function NetGameserverBasketEnd(): boolean;
    function N_0xa65568121df2ea26(): boolean;
    function N_0xe547e9114277098f(): boolean;
    function NetworkShopBasketEnd(): boolean;
    function NetGameserverBasketIsFull(): boolean;
    function N_0x27f76cc6c55ad30e(): boolean;
    function NetworkShopBasketIsFull(): boolean;
    function NetGameserverBasketStart(
        categoryHash: number,
        actionHash: number,
        flags: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkShopBasketStart(
        categoryHash: number,
        actionHash: number,
        flags: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetGameserverBeginService(
        categoryHash: number,
        itemHash: number,
        actionTypeHash: number,
        value: number,
        flags: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x3c5fd37b5499582e(
        categoryHash: number,
        itemHash: number,
        actionTypeHash: number,
        value: number,
        flags: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkShopBeginService(
        categoryHash: number,
        itemHash: number,
        actionTypeHash: number,
        value: number,
        flags: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetGameserverCatalogIsReady(): boolean;
    function N_0x3c4487461e9b0dcb(): boolean;
    function NetGameserverCatalogItemExists(name: string): boolean;
    function N_0xbd4d7eaf8a30f637(name: string): boolean;
    function NetworkShopIsItemUnlocked(name: string): boolean;
    function NetworkShopDoesItemExist(name: string): boolean;
    function NetGameserverCatalogItemExistsHash(hash: number): boolean;
    function N_0x247f0f73a182ea0b(hash: number): boolean;
    function NetworkShopIsItemUnlockedHash(hash: number): boolean;
    function NetworkShopDoesItemExistHash(hash: number): boolean;
    function NetGameserverCheckoutStart(transactionId: number): boolean;
    function N_0x39be7cea8d9cc8e6(transactionId: number): boolean;
    function NetworkShopCheckoutStart(transactionId: number): boolean;
    function NetGameserverDeleteCharacterSlot(slot: number, transfer: boolean, reason: number): boolean;
    function N_0x51f1a8e48c3d2f6d(slot: number, transfer: boolean, reason: number): boolean;
    function NetGameserverDeleteCharacterSlotGetStatus(): number;
    function N_0x0a6d923dffc9bd89(): number;
    function NetGameserverDeleteSetTelemetryNonceSeed(): boolean;
    function N_0x112cef1615a1139f(): boolean;
    function NetworkShopDeleteSetTelemetryNonceSeed(): boolean;
    function NetGameserverEndService(transactionId: number): boolean;
    function N_0xe2a99a9b524befff(transactionId: number): boolean;
    function NetworkShopEndService(transactionId: number): boolean;
    function NetworkShopTerminateService(transactionId: number): boolean;
    function NetGameserverGetBalance(inventory: boolean, playerbalance: boolean): boolean;
    function N_0x35a1b3e1d1315cfa(inventory: boolean, playerbalance: boolean): boolean;
    function NetGameserverGetCatalogState(state: number): LuaMultiReturn<[boolean, number]>;
    function N_0xcf38dafbb49ede5e(state: number): LuaMultiReturn<[boolean, number]>;
    function NetGameserverGetPrice(itemHash: number, categoryHash: number, p2: boolean): number;
    function NetworkShopGetPrice(itemHash: number, categoryHash: number, p2: boolean): number;
    function NetGameserverGetTransactionManagerData(): LuaMultiReturn<[boolean, number, boolean]>;
    function N_0x897433d292b44130(): LuaMultiReturn<[boolean, number, boolean]>;
    function NetGameserverIsCatalogValid(): boolean;
    function N_0x2b949a1e6aec8f6a(): boolean;
    function NetGameserverIsSessionRefreshPending(): boolean;
    function N_0x810e8431c0614bf9(): boolean;
    function NetworkShopGetTransactionsDisabled(): boolean;
    function NetGameserverIsSessionValid(charSlot: number): boolean;
    function N_0xb24f0944da203d9e(charSlot: number): boolean;
    function NetworkShopGetTransactionsEnabledForCharacter(charSlot: number): boolean;
    function NetGameserverSessionApplyReceivedData(charSlot: number): boolean;
    function N_0x2f41d51ba3bcd1f1(charSlot: number): boolean;
    function NetworkShopSessionApplyReceivedData(charSlot: number): boolean;
    function NetGameserverSetTelemetryNonceSeed(p0: number): boolean;
    function N_0x9507d4271988e1ae(p0: number): boolean;
    function NetworkShopSetTelemetryNonceSeed(p0: number): boolean;
    function NetGameserverStartSession(charSlot: number): boolean;
    function N_0xa135ac892a58fc07(charSlot: number): boolean;
    function NetworkShopStartSession(charSlot: number): boolean;
    function NetGameserverTransferBankToWallet(charSlot: number, amount: number): boolean;
    function N_0xd47a2c1ba117471d(charSlot: number, amount: number): boolean;
    function NetworkTransferBankToWallet(charSlot: number, amount: number): boolean;
    function NetGameserverTransferCashGetStatus(): number;
    function N_0x23789e777d14ce44(): number;
    function NetGameserverTransferCashGetStatus_2(): number;
    function N_0x350aa5ebc03d3bd2(): number;
    function NetGameserverTransferCashSetTelemetryNonceSeed(): boolean;
    function N_0x498c1e05ce5f7877(): boolean;
    function NetworkShopCashTransferSetTelemetryNonceSeed(): boolean;
    function NetGameserverTransferWalletToBank(charSlot: number, amount: number): boolean;
    function N_0xc2f7fe5309181c7d(charSlot: number, amount: number): boolean;
    function NetworkTransferWalletToBank(charSlot: number, amount: number): boolean;
    function NetGameserverUseServerTransactions(): boolean;
    function NetToEnt(netHandle: number): number;
    function NetToObj(netHandle: number): number;
    function NetToPed(netHandle: number): number;
    function NetToVeh(netHandle: number): number;
    function NetworkAcceptInvite(): boolean;
    function N_0x62a0296c1bb1ceb3(): boolean;
    function NetworkAcceptPresenceInvite(p0: number): boolean;
    function NetworkAccessTunableBool(tunableContext: string, tunableName: string): boolean;
    function N_0xaa6a47a573abb75a(tunableContext: string, tunableName: string): boolean;
    function NetworkAccessTunableBoolHash(tunableContext: number, tunableName: number): boolean;
    function N_0xea16b69d93d71a45(tunableContext: number, tunableName: number): boolean;
    function NetworkAccessTunableFloat(
        tunableContext: string,
        tunableName: string,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0xe5608ca7bc163a5f(
        tunableContext: string,
        tunableName: string,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkAccessTunableFloatHash(
        tunableContext: number,
        tunableName: number,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x972bc203bbc4c4d5(
        tunableContext: number,
        tunableName: number,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkAccessTunableInt(
        tunableContext: string,
        tunableName: string,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x8be1146dfd5d4468(
        tunableContext: string,
        tunableName: string,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkAccessTunableIntHash(
        tunableContext: number,
        tunableName: number,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x40fce03e50e8dbe8(
        tunableContext: number,
        tunableName: number,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkActionFollowInvite(): number;
    function N_0xc88156ebb786f8d5(): number;
    function NetworkAddEntityAngledArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number
    ): number;
    function N_0x376c6375ba60293a(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number
    ): number;
    function NetworkAddEntityArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): number;
    function NetworkAddEntityDisplayedBoundaries(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number
    ): number;
    function N_0x25b99872d588a101(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): number;
    function NetworkAddEntityToSynchronisedScene(
        entity: number,
        netScene: number,
        animDict: string,
        animName: string,
        speed: number,
        speedMulitiplier: number,
        flag: number
    ): void;
    function NetworkAddFollowers(p1: number): number;
    function N_0x236406f60cf216d6(p1: number): number;
    function NetworkAddFriend(message: string): LuaMultiReturn<[boolean, number]>;
    function NetworkAddPedToSynchronisedScene(
        ped: number,
        netScene: number,
        animDict: string,
        animnName: string,
        blendInSpeed: number,
        blendOutSpeed: number,
        duration: number,
        flag: number,
        playbackRate: number,
        p9: number
    ): void;
    function NetworkAddSynchronisedSceneCamera(netScene: number, animDict: string, animName: string): void;
    function N_0xcf8bd3b0bd6d42d7(netScene: number, animDict: string, animName: string): void;
    function NetworkAllocateTunablesRegistrationDataMap(): boolean;
    function N_0xfafc23aee23868db(): boolean;
    function NetworkAllowLocalEntityAttachment(entity: number, toggle: boolean): void;
    function N_0x267c78c60e806b9a(entity: number, toggle: boolean): void;
    function NetworkAmIBlockedByGamer(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkAmIBlockedByPlayer(player: number): boolean;
    function NetworkAmIMutedByGamer(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkAmIMutedByPlayer(player: number): boolean;
    function NetworkApplyCachedPlayerHeadBlendData(ped: number, player: number): boolean;
    function N_0x99b72c7abde5c910(ped: number, player: number): boolean;
    function NetworkCopyPedBlendData(ped: number, player: number): boolean;
    function NetworkApplyPedScarData(ped: number, p1: number): void;
    function N_0xe66c690248f11150(ped: number, p1: number): void;
    function NetworkApplyTransitionParameter(p0: number, p1: number): void;
    function N_0x521638ada1ba0d18(p0: number, p1: number): void;
    function NetworkApplyTransitionParameterString(p0: number, _string: string, p2: boolean): void;
    function N_0xebefc2e77084f599(p0: number, _string: string, p2: boolean): void;
    function NetworkApplyVoiceProximityOverride(x: number, y: number, z: number): void;
    function IsNetworkVehicleBeenDamagedByAnyObject(x: number, y: number, z: number): void;
    function NetworkAreCutsceneEntities(): boolean;
    function NetworkAreHandlesTheSame(): LuaMultiReturn<[boolean, number, number]>;
    function NetworkAreSocialClubPoliciesCurrent(): boolean;
    function N_0xba9775570db788cf(): boolean;
    function NetworkAreTransitionDetailsValid(p0: number): boolean;
    function N_0x2615aa2a695930c1(p0: number): boolean;
    function NetworkAttachSynchronisedSceneToEntity(netScene: number, entity: number, bone: number): void;
    function NetworkBail(): void;
    function NetworkBailTransition(): void;
    function NetworkBailTransitionQuickmatch(): void;
    function NetworkBlockInvites(toggle: boolean): void;
    function NetworkBlockJoinQueueInvites(toggle: boolean): void;
    function N_0xcfeb8af24fc1d0bb(toggle: boolean): void;
    function NetworkBlockInvites_2(toggle: boolean): void;
    function NetworkBlockKickedPlayers(p0: boolean): void;
    function N_0x6b07b9ce4d390375(p0: boolean): void;
    function NetworkBuyAirstrike(cost: number, p1: boolean, p2: boolean): void;
    function NetworkBuyBackupGang(p0: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkBuyBounty(amount: number, victim: number, p2: boolean, p3: boolean): void;
    function NetworkBuyContraband(p0: number, p1: number, p2: number, p3: boolean, p4: boolean): void;
    function N_0x30fd873ece50e9f6(p0: number, p1: number, p2: number, p3: boolean, p4: boolean): void;
    function NetworkBuyFairgroundRide(amountSpent: number, p1: number, p2: boolean, p3: boolean): void;
    function N_0x8a7b3952dd64d2b5(amountSpent: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkBuyHealthcare(cost: number, p1: boolean, p2: boolean): void;
    function NetworkBuyHeliStrike(cost: number, p1: boolean, p2: boolean): void;
    function NetworkBuyItem(
        amount: number,
        item: number,
        p2: number,
        p3: number,
        p4: boolean,
        item_name: string,
        p6: number,
        p7: number,
        p8: number,
        p9: boolean
    ): void;
    function NetworkBuyLotteryTicket(p0: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkBuyProperty(propertyCost: number, propertyName: number, p2: boolean, p3: boolean): void;
    function NetworkBuySmokes(p0: number, p1: boolean, p2: boolean): void;
    function NetworkCacheLocalPlayerHeadBlendData(): void;
    function N_0xbd0be0bfc927eac1(): void;
    function NetworkCanAccessMultiplayer(loadingState: number): LuaMultiReturn<[boolean, number]>;
    function N_0xaf50da1a3f8b1ba4(loadingState: number): LuaMultiReturn<[boolean, number]>;
    function NetworkCanBail(): boolean;
    function NetworkCanBet(amount: number): boolean;
    function N_0x3a54e33660ded67f(amount: number): boolean;
    function NetworkCanBuyLotteryTicket(cost: number): boolean;
    function NetworkCanCommunicateWithGamer(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkCanCommunicateWithGamer_2(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function N_0x8f5d1ad832aeb06c(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkCanEnterMultiplayer(): boolean;
    function NetworkCanGamerPlayMultiplayerWithMe(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function N_0x135f9b7b7add2185(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkCanPlayMultiplayerWithGamer(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function N_0x07dd29d5e22763f1(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkCanReceivePlayerCash(p0: number, p1: number, p2: number, p3: number): boolean;
    function NetworkCanSessionEnd(): boolean;
    function NetworkCanSetWaypoint(): boolean;
    function NetworkCanShareJobCash(): boolean;
    function N_0x1c2473301b1c66ba(): boolean;
    function NetworkCanSpendMoney(p0: number, p1: boolean, p2: boolean, p3: boolean, p4: number): boolean;
    function N_0xab3caa6b422164da(p0: number, p1: boolean, p2: boolean, p3: boolean, p4: number): boolean;
    function NetworkCanSpendMoney_2(
        p0: number,
        p1: boolean,
        p2: boolean,
        p3: boolean,
        p5: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x7303e27cc6532080(
        p0: number,
        p1: boolean,
        p2: boolean,
        p3: boolean,
        p5: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkCanViewGamerUserContent(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function N_0xb57a49545ba53ce7(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkCancelRespawnSearch(): void;
    function N_0xfb8f2a6f3df08cbe(): void;
    function NetworkCasinoCanGamble(p0: number): boolean;
    function NetworkCasinoCanPurchaseChipsWithPvc(): boolean;
    function NetworkCasinoCanPurchaseChipsWithPvc_2(): boolean;
    function NetworkCasinoCanUseGamblingType(hash: number): boolean;
    function NetworkCasinoPurchaseChips(p0: number, p1: number): boolean;
    function NetworkCasinoSellChips(p0: number, p1: number): boolean;
    function NetworkChangeTransitionSlots(p0: number, p1: number): void;
    function N_0xeeeda5e6d7080987(p0: number, p1: number): void;
    function NetworkCheckCommunicationPrivileges(p0: number, p1: number, p2: boolean): boolean;
    function N_0x83f28ce49fbbffba(p0: number, p1: number, p2: boolean): boolean;
    function NetworkCheckDataManagerSucceededForHandle(
        friendDataIndex: number,
        networkHandle: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x44b37cdcae765aae(friendDataIndex: number, networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkCheckUserContentPrivileges(p0: number, p1: number, p2: boolean): boolean;
    function N_0x595f028698072dd9(p0: number, p1: number, p2: boolean): boolean;
    function NetworkClanAnimation(animDict: string, animName: string): boolean;
    function N_0x729e3401f0430686(animDict: string, animName: string): boolean;
    function NetworkClanAnyDownloadMembershipPending(): boolean;
    function N_0xb3f64a6a91432477(): boolean;
    function NetworkIsClanMembershipFinishedDownloading(): boolean;
    function NetworkClanDownloadMembership(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkClanDownloadMembershipPending(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkClanGetEmblemTxdName(txdName: string): LuaMultiReturn<[boolean, number]>;
    function N_0x5835d9cd92e83184(txdName: string): LuaMultiReturn<[boolean, number]>;
    function NetworkGetPlayerCrewEmblemTxdName(txdName: string): LuaMultiReturn<[boolean, number]>;
    function NetworkClanGetLocalMembershipsCount(): number;
    function N_0x1f471b79acc90bef(): number;
    function GetNumMembershipDesc(): number;
    function NetworkClanGetNumMembershipDesc(): number;
    function NetworkClanGetMembership(membershipIndex: number): LuaMultiReturn<[boolean, number, number]>;
    function NetworkClanGetMembershipCount(p0: number): LuaMultiReturn<[number, number]>;
    function NetworkClanGetMembershipDesc(p1: number): LuaMultiReturn<[boolean, number]>;
    function NetworkClanGetMembershipValid(membershipIndex: number): LuaMultiReturn<[boolean, number]>;
    function NetworkClanGetUiFormattedTag(bufferSize: number, formattedTag: string): number;
    function N_0xf45352426ff3a4f0(bufferSize: number, formattedTag: string): number;
    function NetworkClanIsEmblemReady(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0xa134777ff7f33331(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function NetworkClanIsRockstarClan(bufferSize: number): LuaMultiReturn<[boolean, number]>;
    function N_0x7543bb439f63792b(bufferSize: number): LuaMultiReturn<[boolean, number]>;
    function NetworkClanJoin(clanDesc: number): boolean;
    function NetworkClanPlayerGetDesc(bufferSize: number): LuaMultiReturn<[boolean, number, number]>;
    function NetworkClanPlayerIsActive(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkClanReleaseEmblem(p0: number): void;
    function N_0x113e6e3e50e286b0(p0: number): void;
    function NetworkClanRemoteMembershipsAreInCache(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkClanRequestEmblem(p0: number): boolean;
    function N_0x13518ff1c6b28938(p0: number): boolean;
    function NetworkClanServiceIsValid(): boolean;
    function NetworkPlayerIsInClan(): boolean;
    function NetworkClearCharacterWallet(characterSlot: number): void;
    function N_0xa921ded15fdf28f5(characterSlot: number): void;
    function NetworkClearClockTimeOverride(): void;
    function N_0xd972df67326f966e(): void;
    function NetworkClearFollowInvite(): number;
    function N_0x439bfde3cd0610f6(): number;
    function NetworkClearFollowers(): void;
    function N_0x058f43ec59a8631a(): void;
    function NetworkClearFoundGamers(): void;
    function NetworkClearGetGamerStatus(): void;
    function N_0x86e0660e4f5c956d(): void;
    function NetworkClearGroupActivity(): void;
    function N_0x1888694923ef4591(): void;
    function NetworkClearPropertyId(): void;
    function N_0xc2b82527ca77053e(): void;
    function NetworkClearTransitionCreatorHandle(): void;
    function NetworkClearVoiceChannel(): void;
    function N_0xe036a705f989e049(): void;
    function NetworkClearVoiceProximityOverride(): void;
    function N_0xf03755696450470c(): void;
    function NetworkCloseTransitionMatchmaking(): void;
    function N_0x43f4dba69710e01e(): void;
    function NetworkConcealEntity(entity: number, toggle: boolean): void;
    function NetworkConcealPlayer(player: number, toggle: boolean, p2: boolean): void;
    function NetworkCreateSynchronisedScene(
        x: number,
        y: number,
        z: number,
        xRot: number,
        yRot: number,
        zRot: number,
        rotationOrder: number,
        holdLastFrame: boolean,
        looped: boolean,
        p9: number,
        animTime: number,
        animSpeed: number
    ): number;
    function NetworkDeductCash(amount: number, p1: string, p2: string, p3: boolean, p4: boolean, p5: boolean): void;
    function NetworkDeleteCharacter(characterSlot: number, p1: boolean, p2: boolean): void;
    function NetworkDidFindGamersSucceed(): boolean;
    function N_0xf9b83b77929d8863(): boolean;
    function NetworkDidGetGamerStatusSucceed(): boolean;
    function N_0x5ae17c6b0134b7f1(): boolean;
    function NetworkDisableInvincibleFlashing(player: number, toggle: boolean): void;
    function N_0x9dd368bf06983221(player: number, toggle: boolean): void;
    function NetworkDisableLeaveRemotePedBehind(toggle: boolean): void;
    function N_0xc505036a35afd01b(toggle: boolean): void;
    function NetworkDisableProximityMigration(netID: number): void;
    function N_0x407091cf6037118e(netID: number): void;
    function NetworkDisplaynamesFromHandlesStart(p1: number): LuaMultiReturn<[number, number]>;
    function N_0xd66c9e72b3cc4982(p1: number): LuaMultiReturn<[number, number]>;
    function NetworkDoTransitionQuickmatch(p0: number, p1: number, p2: number, p3: number): boolean;
    function N_0x71fb0ebcd4915d56(p0: number, p1: number, p2: number, p3: number): boolean;
    function NetworkDoTransitionQuickmatchAsync(p0: number, p1: number, p2: number, p3: number): boolean;
    function N_0xa091a5e44f0072e5(p0: number, p1: number, p2: number, p3: number): boolean;
    function NetworkDoTransitionQuickmatchWithGroup(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p5: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkDoTransitionToFreemode(
        p1: number,
        p2: boolean,
        players: number,
        p4: boolean
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkDoTransitionToGame(p0: boolean, maxPlayers: number): boolean;
    function NetworkDoTransitionToNewFreemode(
        players: number,
        p3: boolean,
        p4: boolean,
        p5: boolean
    ): LuaMultiReturn<[boolean, number, number]>;
    function NetworkDoTransitionToNewGame(p0: boolean, maxPlayers: number, p2: boolean): boolean;
    function NetworkDoesEntityExistWithNetworkId(netId: number): boolean;
    function NetworkDoesNetworkIdExist(netId: number): boolean;
    function NetworkDoesTunableExist(tunableContext: string, tunableName: string): boolean;
    function NetworkDoesTunableExistHash(tunableContext: number, tunableName: number): boolean;
    function N_0xe4e53e1419d81127(tunableContext: number, tunableName: number): boolean;
    function NetworkEarnBoss(p0: number, p1: number, p2: number): void;
    function N_0x08b0ca7a6ab3ac32(p0: number, p1: number, p2: number): void;
    function NetworkEarnBossAgency(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x0cb1be0633c024a8(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkEarnBountyHunterReward(p0: number): void;
    function N_0xf6b170f9a02e9e87(p0: number): void;
    function NetworkEarnCasinoHeist(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function NetworkEarnCasinoHeistBonus(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function NetworkEarnCollectableCompletedCollection(amount: number, p1: number): void;
    function NetworkEarnFmbbWageBonus(p0: number): void;
    function N_0xfffba1b1f7c0b6f4(p0: number): void;
    function NetworkEarnFromAiTargetKill(p0: number, p1: number): void;
    function N_0x515b4a22e4d3c6d7(p0: number, p1: number): void;
    function NetworkEarnFromAmbientJob(p0: number, p1: string, p2: number): number;
    function N_0xfb6db092fbae29e6(p0: number, p1: string, p2: number): number;
    function NetworkEarnFromArenaCareerProgression(amount: number, p1: number): void;
    function NetworkEarnFromArenaSkillLevelProgression(amount: number, p1: number): void;
    function NetworkEarnFromArenaWar(amount: number, p1: number, p2: number, p3: number): void;
    function NetworkEarnFromArmourTruck(amount: number): void;
    function N_0xf514621e8ea463d0(amount: number): void;
    function NetworkEarnFromAssassinateTargetKilled(amount: number): void;
    function NetworkEarnFromAssassinateTargetKilled_2(amount: number): void;
    function NetworkEarnFromAutoshopBusiness(p0: number, p1: number): void;
    function N_0x36a7fd5a7194b03e(p0: number, p1: number): void;
    function NetworkEarnFromAutoshopIncome(p0: number): void;
    function N_0xc66d1cf99ed7fe25(p0: number): void;
    function NetworkEarnFromBbEventBonus(amount: number): void;
    function NetworkEarnFromBbEventCargo(amount: number): void;
    function NetworkEarnFromBendJob(amount: number, heistHash: string): void;
    function N_0x61326ee6df15b0ca(amount: number, heistHash: string): void;
    function NetworkEarnFromMissionH(amount: number, heistHash: string): void;
    function NetworkEarnFromBetting(amount: number, p1: string): void;
    function NetworkEarnFromBikeShopBusiness(p0: number, p1: number): void;
    function NetworkEarnFromBikerIncome(p0: number): void;
    function NetworkEarnFromBounty(amount: number, p3: number): LuaMultiReturn<[number, number]>;
    function NetworkEarnFromBusinessBattle(p0: number): void;
    function N_0x42fce14f50f27291(p0: number): void;
    function NetworkEarnFromBusinessHubSell(p0: number, p1: number, p2: number): void;
    function N_0x0b39cf0d53f1c883(p0: number, p1: number, p2: number): void;
    function NetworkEarnFromBusinessHubSource(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkEarnFromBusinessProduct(amount: number, p1: number, p2: number, p3: number): void;
    function N_0x8586789730b10caf(amount: number, p1: number, p2: number, p3: number): void;
    function NetworkEarnFromCarclubMembership(p0: number): void;
    function N_0xbc6227792a188e2e(p0: number): void;
    function NetworkEarnFromCashingOut(amount: number): void;
    function NetworkEarnFromCasinoAward(amount: number, hash: number): void;
    function NetworkEarnFromCasinoMissionParticipation(amount: number): void;
    function NetworkEarnFromCasinoMissionReward(amount: number): void;
    function NetworkEarnFromCasinoStoryMissionReward(amount: number): void;
    function NetworkEarnFromChallengeWin(p0: number, p2: boolean): number;
    function N_0x2b171e6b2f64d8df(p0: number, p2: boolean): number;
    function NetworkEarnFromClubManagementParticipation(p0: number): void;
    function N_0xa75eac69f59e96e7(p0: number): void;
    function NetworkEarnFromCollectablesActionFigures(amount: number): void;
    function NetworkEarnFromCollectionItem(amount: number, p1: number): void;
    function NetworkEarnFromCompleteCollection(amount: number): void;
    function NetworkEarnFromContraband(amount: number, p1: number): void;
    function N_0xeca658ce2a4e5a72(amount: number, p1: number): void;
    function NetworkEarnFromCrateDrop(amount: number): void;
    function N_0xb1cc1b9ec3007a2a(amount: number): void;
    function NetworkEarnFromCriminalMastermindBonus(p0: number, p1: number, p2: number): void;
    function N_0xd20d79671a598594(p0: number, p1: number, p2: number): void;
    function NetworkEarnFromDailyObjectiveEvent(amount: number): void;
    function NetworkEarnFromDailyObjectives(p0: number, p1: string, p2: number): void;
    function N_0x6ea318c91c1a8786(p0: number, p1: string, p2: number): void;
    function NetworkEarnFromDailyObjective(p0: number, p1: string, p2: number): void;
    function NetworkEarnFromDarChallenge(amount: number, p1: number): void;
    function NetworkEarnFromDestroyingContraband(p0: number): void;
    function N_0x84c0116d012e8fc2(p0: number): void;
    function NetworkEarnFromDoomsdayFinaleBonus(amount: number, vehicleHash: number): void;
    function NetworkEarnFromFmbbBossWork(p0: number): void;
    function N_0x1fda0aa679c9919b(p0: number): void;
    function NetworkEarnFromFmbbPhonecallMission(p0: number): void;
    function N_0xc5156361f26e2212(p0: number): void;
    function NetworkEarnFromGangPickup(amount: number): void;
    function N_0xa03d4ace0a3284ce(amount: number): void;
    function NetworkEarnFromGangopsAwards(amount: number, unk: string, p2: number): void;
    function NetworkEarnFromGangopsElite(amount: number, unk: string, actIndex: number): void;
    function NetworkEarnFromGangopsJobsFinale(amount: number, unk: string): void;
    function NetworkEarnFromGangopsJobsPrepParticipation(amount: number): void;
    function NetworkEarnFromGangopsJobsSetup(amount: number, unk: string): void;
    function NetworkEarnFromGangopsWages(amount: number, p1: number): void;
    function NetworkEarnFromGangopsWagesBonus(amount: number, p1: number): void;
    function NetworkEarnFromHackerTruckMission(p0: number, amount: number, p2: number, p3: number): void;
    function NetworkEarnFromHoldups(amount: number): void;
    function NetworkEarnFromImportExport(amount: number, modelHash: number): void;
    function NetworkEarnFromJob(amount: number, p1: string): void;
    function NetworkEarnFromJobBonus(p0: number): LuaMultiReturn<[number, number]>;
    function N_0x6816fb4416760775(p0: number): LuaMultiReturn<[number, number]>;
    function NetworkEarnFromJobX2(amount: number, p1: string): void;
    function NetworkEarnFromNotBadsport(amount: number): void;
    function N_0x4337511fa8221d36(amount: number): void;
    function NetworkEarnFromPersonalVehicle(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): void;
    function N_0x3f4d00167e41e0ad(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): void;
    function NetworkEarnFromPickup(amount: number): void;
    function NetworkEarnFromPremiumJob(amount: number, p1: string): void;
    function N_0xc8407624cef2354b(amount: number, p1: string): void;
    function NetworkEarnFromProperty(amount: number, propertyName: number): void;
    function NetworkEarnFromRcTimeTrial(amount: number): void;
    function NetworkEarnFromRdrBonus(amount: number, p1: number): void;
    function NetworkEarnFromRockstar(amount: number): void;
    function NetworkEarnFromSellBase(amount: number, baseNameHash: number): void;
    function NetworkEarnFromSellBunker(amount: number, bunkerHash: number): void;
    function N_0x9251b6abf2d0a5b4(amount: number, bunkerHash: number): void;
    function NetworkEarnFromSellingVehicle(amount: number): void;
    function NetworkEarnFromSightseeing(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkEarnFromSmuggling(amount: number, p1: number, p2: number, p3: number): void;
    function NetworkEarnFromSpinTheWheelCash(amount: number): void;
    function NetworkEarnFromTargetRefund(amount: number, p1: number): void;
    function NetworkEarnFromTimeTrialWin(amount: number): void;
    function NetworkEarnFromTunerAward(p0: number, p1: number, p2: number): void;
    function N_0xb846f547d3792df6(p0: number, p1: number, p2: number): void;
    function NetworkEarnFromTunerFinale(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0xbcb266247193ac61(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function NetworkEarnFromUpgradeAutoshopLocation(p0: number, p1: number): void;
    function N_0xc10322a8d3e061ee(p0: number, p1: number): void;
    function NetworkEarnFromVehicle(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number
    ): void;
    function NetworkEarnFromVehicleAutoshop(p0: number, p1: number): void;
    function N_0x533073e8a596008c(p0: number, p1: number): void;
    function NetworkEarnFromVehicleAutoshopBonus(p0: number): void;
    function N_0xfe65afe7308e32b2(p0: number): void;
    function NetworkEarnFromVehicleExport(amount: number, p1: number, p2: number): void;
    function N_0xedead9a91ec768b3(amount: number, p1: number, p2: number): void;
    function NetworkEarnFromWagePayment(amount: number): void;
    function NetworkEarnFromWagePaymentBonus(amount: number): void;
    function NetworkEarnFromWarehouse(): void;
    function N_0x3e4adaff1830f146(): void;
    function NetworkEarnGoon(p0: number, p1: number, p2: number): void;
    function N_0xcda1c62be2777802(p0: number, p1: number, p2: number): void;
    function NetworkEarnIslandHeist(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function NetworkEarnJobBonusFirstTimeBonus(p0: number, p1: number, p2: number): void;
    function N_0x11b0a20c493f7e36(p0: number, p1: number, p2: number): void;
    function NetworkEarnJobBonusHeistAward(p0: number, p1: number, p2: number): void;
    function N_0x9d4fdbb035229669(p0: number, p1: number, p2: number): void;
    function NetworkEndTutorialSession(): void;
    function NetworkEntityAreaDoesExist(areaHandle: number): boolean;
    function N_0xe64a3ca08dfa37a9(areaHandle: number): boolean;
    function NetworkEntityAreaIsOccupied(areaHandle: number): boolean;
    function N_0x4a2d4e8bf4265b0f(areaHandle: number): boolean;
    function NetworkExplodeHeli(
        heli: number,
        isAudible: boolean,
        isInvisible: boolean,
        netScriptEntityId: number
    ): void;
    function N_0x2a5e0621dd815a9a(
        heli: number,
        isAudible: boolean,
        isInvisible: boolean,
        netScriptEntityId: number
    ): void;
    function NetworkExplodeVehicle(vehicle: number, isAudible: boolean, isInvisible: boolean, p3: boolean): void;
    function NetworkFadeInEntity(entity: number, state: boolean): void;
    function NetworkFadeOutEntity(entity: number, normal: boolean, slow: boolean): void;
    function NetworkFindGamersInCrew(p0: number): boolean;
    function N_0xe532d6811b3a4d2a(p0: number): boolean;
    function NetworkXAffectsGamers(p0: number): boolean;
    function NetworkFindMatchedGamers(p0: number, p1: number, p2: number, p3: number): boolean;
    function N_0xf7b2cfde5c9f700d(p0: number, p1: number, p2: number, p3: number): boolean;
    function NetworkFinishBroadcastingData(): void;
    function N_0x64f62afb081e260d(): void;
    function NetworkForceLocalUseOfSyncedSceneCamera(sceneId: number): void;
    function N_0xc9b43a33d09cada7(sceneId: number): void;
    function NetworkGamerHasHeadset(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGamertagFromHandlePending(): boolean;
    function NetworkGamertagFromHandleStart(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGamertagFromHandleSucceeded(): boolean;
    function NetworkGetActivityPlayerNum(p0: boolean): number;
    function NetworkGetAgeGroup(): number;
    function N_0x9614b71f8adb982b(): number;
    function NetworkGetAverageLatencyForPlayer(player: number): number;
    function N_0xd414be129bb81b32(player: number): number;
    function NetworkGetAverageLatencyForPlayer_2(player: number): number;
    function N_0x0e3a041ed6ac2b45(player: number): number;
    function NetworkGetAveragePacketLossForPlayer(player: number): number;
    function N_0x350c23949e43686c(player: number): number;
    function NetworkGetBackgroundLoadingRecipients(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0x97a770beef227e2b(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
    function NetworkGetContentModifierListId(contentHash: number): number;
    function N_0x187382f8a3e0a6c3(contentHash: number): number;
    function GetTunablesContentModifierId(contentHash: number): number;
    function NetworkGetCurrentlySelectedGamerHandleFromInviteMenu(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGetDestroyerOfEntity(p0: number, p1: number, weaponHash: number): LuaMultiReturn<[boolean, number]>;
    function N_0x4caca84440fa26f6(p0: number, p1: number, weaponHash: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGetDesroyerOfEntity(p0: number, p1: number, weaponHash: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGetDestroyerOfNetworkId(netId: number, weaponHash: number): LuaMultiReturn<[number, number]>;
    function NetworkGetDisplaynamesFromHandles(p0: number, p1: number, p2: number): number;
    function N_0x58cc181719256197(p0: number, p1: number, p2: number): number;
    function NetworkGetEntityFromNetworkId(netId: number): number;
    function NetworkGetEntityIsLocal(entity: number): boolean;
    function NetworkGetEntityIsNetworked(entity: number): boolean;
    function N_0xc7827959479dcc78(entity: number): boolean;
    function NetworkGetEntityKillerOfPlayer(player: number, weaponHash: number): LuaMultiReturn<[number, number]>;
    function NetworkGetEntityNetScriptId(entity: number): number;
    function N_0x815f18ad865f057f(entity: number): number;
    function NetworkGetEntityOwner(entity: number): number;
    function NetworkGetEvcBalance(): number;
    function NetworkGetFoundGamer(p1: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGetFriendCount(): number;
    function NetworkGetFriendName(friendIndex: number): string;
    function NetworkGetFriendNameFromIndex(friendIndex: number): string;
    function NetworkGetGamerStatusFromQueue(): boolean;
    function N_0x2cc848a861d01493(): boolean;
    function NetworkGetGamerStatusResult(p1: number): LuaMultiReturn<[boolean, number]>;
    function N_0x02a8bec6fd9af660(p1: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGetGamertagFromHandle(networkHandle: number): LuaMultiReturn<[string, number]>;
    function NetworkGetGlobalMultiplayerClock(): LuaMultiReturn<[number, number, number]>;
    function N_0x6d03bfbd643b2a02(): LuaMultiReturn<[number, number, number]>;
    function NetworkGetServerTime(): LuaMultiReturn<[number, number, number]>;
    function NetworkGetHostOfScript(scriptName: string, p1: number, p2: number): number;
    function NetworkGetHostOfThisScript(): number;
    function NetworkGetInstanceIdOfThisScript(): number;
    function N_0x638a3a81733086db(): number;
    function NetworkGetIsHighEarner(): boolean;
    function NetworkGetLastVelocityReceived(entity: number): Vector3;
    function N_0x33de49edf4dde77a(entity: number): Vector3;
    function NetworkGetLocalHandle(bufferSize: number): number;
    function NetworkGetLocalSceneFromNetworkId(netId: number): number;
    function N_0x02c40bf885c567b6(netId: number): number;
    function NetworkUnlinkNetworkedSynchronisedScene(netId: number): number;
    function NetworkConvertSynchronisedSceneToSynchronizedScene(netId: number): number;
    function NetworkGetMaxFriends(): number;
    function NetworkGetMaxNumParticipants(): number;
    function NetworkGetNumParticipantsHost(): number;
    function NetworkGetNetworkIdFromEntity(entity: number): number;
    function NetworkGetNumBodyTrackers(): number;
    function N_0xd38c4a6d047c019d(): number;
    function NetworkGetNumConnectedPlayers(): number;
    function NetworkGetNumFoundGamers(): number;
    function NetworkGetNumParticipants(): number;
    function NetworkGetNumPresenceInvites(): number;
    function N_0xcefa968912d0f78d(): number;
    function NetworkGetNumScriptParticipants(p1: number, p2: number): LuaMultiReturn<[number, number]>;
    function N_0x3658e8cd94fc121a(p1: number, p2: number): LuaMultiReturn<[number, number]>;
    function NetworkGetNumUnackedForPlayer(player: number): number;
    function NetworkGetOldestResendCountForPlayer(player: number): number;
    function NetworkGetParticipantIndex(index: number): number;
    function NetworkGetPlatformPartyMembers(dataSize: number): LuaMultiReturn<[number, number]>;
    function N_0x120364de2845daf8(dataSize: number): LuaMultiReturn<[number, number]>;
    function NetworkGetPlatformPartyUnk(): number;
    function N_0x01abce5e7cbda196(): number;
    function NetworkGetPlayerCoords(player: number): Vector3;
    function N_0x125e6d638b8605d4(player: number): Vector3;
    function NetworkGetPlayerFromGamerHandle(networkHandle: number): LuaMultiReturn<[number, number]>;
    function NetworkGetPlayerIndex(player: number): number;
    function NetworkGetPlayerIndexFromPed(ped: number): number;
    function N_0x6c0e2e0125610278(ped: number): number;
    function NetworkGetPlayerLoudness(player: number): number;
    function NetworkGetPlayerOwnsWaypoint(player: number): boolean;
    function N_0x82377b65e943f72d(player: number): boolean;
    function NetworkGetPlayerTutorialSessionInstance(player: number): number;
    function N_0x3b39236746714134(player: number): number;
    function NetworkGetPositionHashOfThisScript(): number;
    function N_0x257ed0fadf750bcf(): number;
    function NetworkGetPresenceInviteContentId(p0: number): string;
    function N_0x24409fc4c55cb22d(p0: number): string;
    function NetworkGetPresenceInviteFromAdmin(p0: number): boolean;
    function N_0x3dbf2df0aeb7d289(p0: number): boolean;
    function NetworkGetPresenceInviteHandle(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGetPresenceInviteId(p0: number): number;
    function N_0xdff09646e12ec386(p0: number): number;
    function NetworkGetPresenceInviteInviter(inviteIndex: number): string;
    function N_0x4962cc4aa2f345b7(inviteIndex: number): string;
    function NetworkGetPresenceInviteIsTournament(p0: number): boolean;
    function N_0x8806cebfabd3ce05(p0: number): boolean;
    function NetworkGetPresenceInvitePlaylistCurrent(p0: number): number;
    function N_0x728c4cc7920cd102(p0: number): number;
    function NetworkGetPresenceInvitePlaylistLength(p0: number): number;
    function N_0xd39b3fff8ffdd5bf(p0: number): number;
    function NetworkGetPresenceInviteSessionId(inviteIndex: number): number;
    function N_0x26e1cd96b0903d60(inviteIndex: number): number;
    function NetworkGetPrimaryClanDataCancel(): void;
    function N_0x042e4b70b93e6054(): void;
    function NetworkGetPrimaryClanDataClear(): number;
    function N_0x9aa46badad0e27ed(): number;
    function NetworkGetPrimaryClanDataNew(): LuaMultiReturn<[boolean, number, number]>;
    function NetworkGetPrimaryClanDataPending(): number;
    function N_0xb5074db804e28ce7(): number;
    function NetworkGetPrimaryClanDataStart(p1: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGetPrimaryClanDataSuccess(): number;
    function N_0x5b4f04f19376a0ba(): number;
    function NetworkGetPvcBalance(): number;
    function NetworkGetPvcTransferBalance(): number;
    function NetworkGetRemainingVcDailyTransfers(): number;
    function NetworkGetRandomInt(): number;
    function N_0x599e4fa1f87eb5ff(): number;
    function NetworkGetRandomIntRanged(rangeStart: number, rangeEnd: number): number;
    function N_0xe30cf56f1efa5f43(rangeStart: number, rangeEnd: number): number;
    function NetworkGetRandomIntInRange(rangeStart: number, rangeEnd: number): number;
    function NetworkGetRemainingTransferBalance(): number;
    function NetworkGetRemainingVcDailyTransfers_2(): number;
    function NetworkGetRespawnResult(randomInt: number): LuaMultiReturn<[number, number]>;
    function NetworkGetRespawnResultFlags(p0: number): number;
    function N_0x6c34f1208b8923fd(p0: number): number;
    function NetworkGetRosPrivilege_24(): boolean;
    function N_0x593570c289a77688(): boolean;
    function NetworkGetRosPrivilege_25(): boolean;
    function N_0x91b87c55093de351(): boolean;
    function NetworkGetRosPrivilege_9(): boolean;
    function N_0x66b59cffd78467af(): boolean;
    function NetworkGetScriptStatus(): number;
    function NetworkGetStringBankBalance(): string;
    function N_0xa6fa3979bed01b81(): string;
    function NetworkGetBankBalanceString(): string;
    function NetworkGetStringBankWalletBalance(): string;
    function NetworkGetStringWalletBalance(characterSlot: number): string;
    function NetworkGetTalkerProximity(): number;
    function NetworkGetTargetingMode(): number;
    function N_0xdffa5be8381c3314(): number;
    function NetworkGetThisScriptIsNetworkScript(): boolean;
    function NetworkGetTimeoutTime(): number;
    function N_0x5ed0356a0ce3a34f(): number;
    function NetworkGetTotalNumPlayers(): number;
    function N_0xcf61d4b4702ee9eb(): number;
    function NetworkGetTransitionHost(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGetTransitionMembers(dataCount: number): LuaMultiReturn<[number, number]>;
    function NetworkGetTunableCloudCrc(): number;
    function N_0x10bd227a753b0d84(): number;
    function NetworkGetTunablesVersion(): number;
    function NetworkGetUnreliableResendCountForPlayer(player: number): number;
    function N_0x3765c3a3e8192e10(player: number): number;
    function NetworkGetVcBalance(): number;
    function N_0x5cbad97e059e1b94(): number;
    function NetworkGetVcBankBalance(): number;
    function N_0x76ef28da05ea395a(): number;
    function NetworkGetVcBankBalanceIsNotLessThan(amount: number): boolean;
    function NetworkGetVcBankWalletBalanceIsNotLessThan(amount: number, characterSlot: number): boolean;
    function N_0xdc18531d7019a535(amount: number, characterSlot: number): boolean;
    function NetworkGetVcWalletBalance(characterSlot: number): number;
    function N_0xa40f9c2623f6a8b5(characterSlot: number): number;
    function NetworkGetVcWalletBalanceIsNotLessThan(amount: number, characterSlot: number): boolean;
    function NetworkGivePlayerJobshareCash(amount: number, networkHandle: number): number;
    function NetworkHandleFromFriend(friendIndex: number, bufferSize: number): number;
    function NetworkHandleFromMemberId(memberId: string, bufferSize: number): number;
    function NetworkHandleFromPlayer(player: number, bufferSize: number): number;
    function NetworkHandleFromUserId(userId: string, bufferSize: number): number;
    function NetworkHasAgeRestrictedProfile(): boolean;
    function N_0x1353f87e89946207(): boolean;
    function NetworkHasCachedPlayerHeadBlendData(player: number): boolean;
    function N_0x237d5336a9a54108(player: number): boolean;
    function NetworkHasControlOfDoor(doorHash: number): boolean;
    function NetworkHasControlOfEntity(entity: number): boolean;
    function NetworkHasControlOfNetworkId(netId: number): boolean;
    function NetworkHasControlOfPickup(pickup: number): boolean;
    function NetworkHasEntityBeenRegisteredWithThisThread(entity: number): boolean;
    function N_0xb07d3185e11657a5(entity: number): boolean;
    function NetworkHasFollowInvite(): boolean;
    function N_0x76d9b976c4c09fde(): boolean;
    function NetworkHasGameBeenAltered(): boolean;
    function N_0x659cf2ef7f550c4f(): boolean;
    function NetworkHasHeadset(): boolean;
    function NetworkHasInviteBeenAcked(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function N_0x71dc455f5cd1c2b1(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkHasInvitedGamer(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkHasInvitedGamerToTransition(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkHasPendingInvite(): boolean;
    function NetworkHasPlayerStartedTransition(player: number): boolean;
    function NetworkHasReceivedHostBroadcastData(): boolean;
    function N_0x5d10b3795f3fc886(): boolean;
    function NetworkHasRosPrivilege(index: number): boolean;
    function N_0xa699957e60d80214(index: number): boolean;
    function NetworkHasRosPrivilegeEndDate(privilege: number): LuaMultiReturn<[boolean, number, Vector3]>;
    function N_0xc22912b1d85f26b1(privilege: number): LuaMultiReturn<[boolean, number, Vector3]>;
    function NetworkGetBanData(privilege: number): LuaMultiReturn<[boolean, number, Vector3]>;
    function NetworkHasSocialClubAccount(): boolean;
    function N_0x67a5589628e0cff6(): boolean;
    function NetworkHasSocialNetworkingSharingPriv(): boolean;
    function N_0x76bf03fadbf154f5(): boolean;
    function NetworkHasTransitionInviteBeenAcked(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function N_0x3f9990bf5f22759c(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkHasValidRosCredentials(): boolean;
    function N_0x85443ff4c328f53b(): boolean;
    function NetworkAreRosAvailable(): boolean;
    function NetworkHaveJustUploadLater(): boolean;
    function NetworkHasViewGamerUserContentResult(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function N_0xcca4318e1ab03f1f(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkHashFromGamerHandle(networkHandle: number): LuaMultiReturn<[number, number]>;
    function N_0x58575ac3cf2ca8ec(networkHandle: number): LuaMultiReturn<[number, number]>;
    function NetworkHashFromPlayerHandle(player: number): number;
    function N_0xbc1d768f2f5d6c05(player: number): number;
    function NetworkHaveCommunicationPrivileges(p0: number, player: number): boolean;
    function N_0xaeef48cdf5b6ce7c(p0: number, player: number): boolean;
    function NetworkHaveOnlinePrivilege_2(): boolean;
    function N_0x5ea784d197556507(): boolean;
    function NetworkHaveOnlinePrivileges(): boolean;
    function NetworkHaveRosBannedPriv(): boolean;
    function IsRockstarBanned(): boolean;
    function NetworkHasPlayerBeenBanned(): boolean;
    function NetworkHaveRosCreateTicketPriv(): boolean;
    function IsSocialclubBanned(): boolean;
    function NetworkHaveSocialClubPrivilege(): boolean;
    function NetworkHaveRosLeaderboardWritePriv(): boolean;
    function N_0x422d396f80a96547(): boolean;
    function NetworkGetRosPrivilege_4(): boolean;
    function NetworkHaveRosMultiplayerPriv(): boolean;
    function IsPlayerBanned(): boolean;
    function CanPlayOnline(): boolean;
    function NetworkGetRosPrivilege_3(): boolean;
    function NetworkHaveRosSocialClubPriv(): boolean;
    function N_0x606e4d3e3cccf3eb(): boolean;
    function NetworkGetRosPrivilege_10(): boolean;
    function NetworkHaveUserContentPrivileges(p0: number): boolean;
    function N_0x72d918c99bcacc54(p0: number): boolean;
    function NetworkHostTransition(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: boolean,
        p6: boolean,
        p7: number,
        p8: number,
        p9: number
    ): boolean;
    function NetworkInitializeCash(wallet: number, bank: number): void;
    function N_0x3da5ecd1a56cba6d(wallet: number, bank: number): void;
    function NetworkInviteGamers(p1: number): LuaMultiReturn<[boolean, number, number, number]>;
    function NetworkInviteGamersToTransition(p1: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsActivitySession(): boolean;
    function NetworkIsActivitySpectator(): boolean;
    function NetworkIsActivitySpectatorFromHandle(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsAddingFriend(): number;
    function NetworkIsCableConnected(): boolean;
    function N_0xeffb25453d8600f9(): boolean;
    function NetworkIsChattingInPlatformParty(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsClockTimeOverridden(): boolean;
    function N_0xd7c95d322ff57522(): boolean;
    function NetworkIsCloudAvailable(): boolean;
    function NetworkIsCloudBackgroundScriptRequestPending(): boolean;
    function N_0x8132c0eb8b2b3293(): boolean;
    function HasBgScriptBeenDownloaded(): boolean;
    function NetworkIsCloudBackgroundScriptsRequestPending(): boolean;
    function NetworkIsConnectionEndpointRelayServer(player: number): boolean;
    function N_0x16d3d49902f697bb(player: number): boolean;
    function NetworkIsDoorNetworked(doorHash: number): boolean;
    function N_0xc01e93fac20c3346(doorHash: number): boolean;
    function NetworkHasControlOfPavementStats(doorHash: number): boolean;
    function NetworkIsEntityConcealed(entity: number): boolean;
    function NetworkIsEntityFading(entity: number): boolean;
    function N_0x422f32cc7e56abad(entity: number): boolean;
    function NetworkIsFindingGamers(): boolean;
    function NetworkIsFriend(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsFriendHandleOnline(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function N_0x87eb7a3ffcb314db(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsFriendOnline_2(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsFriendInMultiplayer(friendName: string): boolean;
    function NetworkIsFriendInSameTitle(friendName: string): boolean;
    function NetworkIsFriendIndexOnline(friendIndex: number): boolean;
    function N_0xbad8f2a42b844821(friendIndex: number): boolean;
    function NetworkIsFriendOnline(name: string): boolean;
    function NetworkIsGameInProgress(): boolean;
    function NetworkIsGamerBlockedByMe(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsGamerInMySession(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsGamerMutedByMe(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsGamerTalking(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsGettingGamerStatus(): boolean;
    function N_0x94a8394d150b013a(): boolean;
    function NetworkIsHandleValid(bufferSize: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsHost(): boolean;
    function NetworkIsHostOfThisScript(): boolean;
    function NetworkIsInMpCutscene(): boolean;
    function NetworkIsInParty(): boolean;
    function NetworkIsInPlatformParty(): boolean;
    function N_0x2fc5650b0271cb57(): boolean;
    function NetworkIsInPlatformPartyChat(): boolean;
    function N_0xfd8b834a8ba05048(): boolean;
    function NetworkIsInSession(): boolean;
    function NetworkIsInSpectatorMode(): boolean;
    function NetworkIsInTransition(): boolean;
    function NetworkIsInTutorialSession(): boolean;
    function NetworkIsInactiveProfile(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsLocalPlayerInvincible(): boolean;
    function NetworkIsLocalTalking(): boolean;
    function N_0xc0d2af00bcc234ca(): boolean;
    function NetworkIsMultiplayerDisabled(): boolean;
    function N_0x9747292807126eda(): boolean;
    function NetworkIsNetworkIdAClone(netId: number): boolean;
    function N_0x7242f8b741ce1086(netId: number): boolean;
    function NetworkIsOfflineInvitePending(): boolean;
    function N_0x74698374c45701d2(): boolean;
    function NetworkIsParticipantActive(p0: number): boolean;
    function NetworkIsPartyMember(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsPendingFriend(p0: number): number;
    function NetworkIsPlayerAParticipant(player: number): boolean;
    function NetworkIsPlayerAParticipantOnScript(player1: number, script: string, player2: number): boolean;
    function N_0x1ad5b71586b94820(player1: number, script: string, player2: number): boolean;
    function NetworkIsPlayerActive(player: number): boolean;
    function NetworkIsPlayerBlockedByMe(player: number): boolean;
    function NetworkIsPlayerConcealed(player: number): boolean;
    function NetworkIsPlayerConnected(player: number): boolean;
    function NetworkIsPlayerEqualToIndex(player: number, index: number): boolean;
    function N_0x9de986fc9a87c474(player: number, index: number): boolean;
    function NetworkIsPlayerFading(player: number): boolean;
    function N_0x631dc5dff4b110e3(player: number): boolean;
    function NetworkIsPlayerInMpCutscene(player: number): boolean;
    function NetworkIsPlayerMutedByMe(player: number): boolean;
    function NetworkIsPlayerTalking(player: number): boolean;
    function NetworkIsPsnAvailable(): boolean;
    function N_0x8d11e61a4abf49cc(): boolean;
    function NetworkIsScriptActive(scriptName: string, player: number, p2: boolean, p3: number): boolean;
    function NetworkIsScriptActiveByHash(scriptHash: number, p1: number, p2: boolean, p3: number): boolean;
    function NetworkIsSessionActive(): boolean;
    function NetworkIsSessionBusy(): boolean;
    function NetworkIsSessionStarted(): boolean;
    function NetworkIsSignedIn(): boolean;
    function NetworkIsSignedOnline(): boolean;
    function NetworkIsTextChatActive(): boolean;
    function NetworkIsThisScriptMarked(p0: number, p1: boolean, p2: number): boolean;
    function N_0xd1110739eeadb592(p0: number, p1: boolean, p2: number): boolean;
    function NetworkSetThisScriptMarked(p0: number, p1: boolean, p2: number): boolean;
    function NetworkIsTransitionBusy(): boolean;
    function NetworkIsTransitionClosedCrew(): boolean;
    function N_0x0dbd5d7e3c5bec3b(): boolean;
    function NetworkIsTransitionClosedFriends(): boolean;
    function N_0x6512765e3be78c50(): boolean;
    function NetworkIsTransitionHost(): boolean;
    function NetworkIsTransitionHostFromHandle(networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkIsTransitionMatchmaking(): boolean;
    function N_0x292564c735375edf(): boolean;
    function NetworkIsTransitionOpenToMatchmaking(): boolean;
    function N_0x37a4494483b9f5c9(): boolean;
    function NetworkIsTransitionPrivate(): boolean;
    function N_0x5a6aa44ff8e931e6(): boolean;
    function NetworkIsTransitionSolo(): boolean;
    function N_0x5dc577201723960a(): boolean;
    function NetworkIsTransitionStarted(): boolean;
    function NetworkIsTransitionToGame(): boolean;
    function NetworkIsTransitionVisibilityLocked(): boolean;
    function N_0xd0a484cb2f829fbe(): boolean;
    function NetworkIsTunableCloudRequestPending(): boolean;
    function N_0x0467c11ed88b7d28(): boolean;
    function HasTunablesBeenDownloaded(): boolean;
    function NetworkIsTutorialSessionChangePending(): boolean;
    function N_0x35f0b98a8387274d(): boolean;
    function NetworkJoinGroupActivity(): number;
    function N_0xa06509a691d12be4(): number;
    function NetworkJoinPreviouslyFailedSession(): boolean;
    function N_0x59df79317f85a7e0(): boolean;
    function NetworkJoinPreviouslyFailedTransition(): boolean;
    function N_0xffe1e5b792d92b34(): boolean;
    function NetworkJoinTransition(player: number): boolean;
    function NetworkLaunchTransition(): boolean;
    function NetworkLeaveTransition(): boolean;
    function NetworkManualDeleteCharacter(characterSlot: number): void;
    function N_0x821418c727fcacd7(characterSlot: number): void;
    function NetworkMarkTransitionGamerAsFullyJoined(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkMemberIdFromGamerHandle(networkHandle: number): LuaMultiReturn<[string, number]>;
    function NetworkMoneyCanBet(amount: number, p1: boolean, p2: boolean): boolean;
    function N_0x81404f3dc124fe5b(amount: number, p1: boolean, p2: boolean): boolean;
    function NetworkOpenTransitionMatchmaking(): void;
    function N_0x2b3a8f7ca3a38fde(): void;
    function NetworkOverrideChatRestrictions(player: number, toggle: boolean): void;
    function N_0x3039ae5ad2c9c0c4(player: number, toggle: boolean): void;
    function NetworkOverrideClockMillisecondsPerGameMinute(ms: number): void;
    function NetworkOverrideClockTime(hours: number, minutes: number, seconds: number): void;
    function NetworkOverrideCoordsAndHeading(entity: number, x: number, y: number, z: number, heading: number): void;
    function N_0xa7e30de9272b6d49(entity: number, x: number, y: number, z: number, heading: number): void;
    function NetworkOverrideReceiveRestrictions(player: number, toggle: boolean): void;
    function N_0xddf73e2b1fec5ab4(player: number, toggle: boolean): void;
    function NetworkOverrideReceiveRestrictionsAll(toggle: boolean): void;
    function N_0x0ff2862b61a58af9(toggle: boolean): void;
    function NetworkOverrideSendRestrictions(player: number, toggle: boolean): void;
    function N_0x97dd4c5944cc2e6a(player: number, toggle: boolean): void;
    function NetworkOverrideSendRestrictionsAll(toggle: boolean): void;
    function N_0x57b192b4d4ad23d5(toggle: boolean): void;
    function NetworkChatMute(toggle: boolean): void;
    function NetworkOverrideTeamRestrictions(team: number, toggle: boolean): void;
    function N_0x6f697a66ce78674e(team: number, toggle: boolean): void;
    function NetworkOverrideTransitionChat(p0: boolean): void;
    function N_0xaf66059a131aa269(p0: boolean): void;
    function NetworkPayEmployeeWage(p0: number, p1: boolean, p2: boolean): void;
    function N_0x5fd5ed82cbbe9989(p0: number, p1: boolean, p2: boolean): void;
    function NetworkPayMatchEntryFee(amount: number, matchId: string, p2: boolean, p3: boolean): void;
    function N_0x9346e14f2af74d46(amount: number, matchId: string, p2: boolean, p3: boolean): void;
    function NetworkPayUtilityBill(amount: number, p1: boolean, p2: boolean): void;
    function N_0xafe08b35ec0c9eae(amount: number, p1: boolean, p2: boolean): void;
    function NetworkPedForceGameStateUpdate(ped: number): void;
    function N_0xf0bc9bcd24a511d5(ped: number): void;
    function NetworkPlayerGetCheaterReason(): number;
    function N_0x172f75b6ee2233ba(): number;
    function NetworkPlayerIsUnk(): number;
    function NetworkPlayerGetName(player: number): string;
    function NetworkPlayerGetUserid(player: number, userID: number): LuaMultiReturn<[string, number]>;
    function NetworkPlayerGetUserId(player: number, userID: number): LuaMultiReturn<[string, number]>;
    function NetworkPlayerHasHeadset(player: number): boolean;
    function NetworkPlayerIdToInt(): number;
    function NetworkPlayerIndexIsCheater(player: number): boolean;
    function N_0x565e430db3b05bec(player: number): boolean;
    function NetworkPlayerSomething(player: number): boolean;
    function NetworkPlayerIsBadsport(): boolean;
    function NetworkPlayerIsCheater(): boolean;
    function NetworkPlayerIsRockstarDev(player: number): boolean;
    function NetworkQueryRespawnResults(p0: number): LuaMultiReturn<[number, number]>;
    function N_0x3c891a251567dfce(p0: number): LuaMultiReturn<[number, number]>;
    function NetworkQueueGamerForStatus(p0: number): LuaMultiReturn<[boolean, number]>;
    function N_0x85a0ef54a500882c(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkGetGamerStatus(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkReceivePlayerJobshareCash(value: number, networkHandle: number): number;
    function NetworkRefundCash(index: number, context: string, reason: string, unk: boolean): void;
    function N_0xf9c812cd7c46e817(index: number, context: string, reason: string, unk: boolean): void;
    function NetworkRegisterEntityAsNetworked(entity: number): void;
    function N_0x06faacd625d80caa(entity: number): void;
    function NetworkRegisterHostBroadcastVariables(numVars: number): number;
    function NetworkRegisterPlayerBroadcastVariables(numVars: number): number;
    function NetworkRegisterTunableBoolHash(contextHash: number, nameHash: number): LuaMultiReturn<[boolean, boolean]>;
    function N_0x697f508861875b42(contextHash: number, nameHash: number): LuaMultiReturn<[boolean, boolean]>;
    function NetworkRegisterTunableFloatHash(
        contextHash: number,
        nameHash: number,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x1950dae9848a4739(
        contextHash: number,
        nameHash: number,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkRegisterTunableIntHash(
        contextHash: number,
        nameHash: number,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x3a8b55fda4c8ddef(
        contextHash: number,
        nameHash: number,
        value: number
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkRemoveAllTransitionInvite(): void;
    function N_0x726e0375c7a26368(): void;
    function NetworkRemoveEntityArea(p0: number): boolean;
    function NetworkRemovePresenceInvite(p0: number): boolean;
    function N_0xf0210268db0974b1(p0: number): boolean;
    function NetworkRemoveTransitionInvite(p0: number): void;
    function NetworkReportMyself(): void;
    function N_0x5626d9d6810730d5(): void;
    function NetworkRequestCloudBackgroundScripts(): boolean;
    function N_0x924426bffd82e915(): boolean;
    function NetworkRequestCloudTunables(): void;
    function N_0x42fb3b532d526e6c(): void;
    function NetworkRequestControlOfDoor(doorID: number): boolean;
    function NetworkRequestControlOfEntity(entity: number): boolean;
    function NetworkRequestControlOfNetworkId(netId: number): boolean;
    function NetworkResetBodyTracker(): void;
    function NetworkRespawnCoords(player: number, x: number, y: number, z: number, p4: boolean, p5: boolean): void;
    function N_0x9769f811d1785b03(player: number, x: number, y: number, z: number, p4: boolean, p5: boolean): void;
    function NetworkResurrectLocalPlayer(
        x: number,
        y: number,
        z: number,
        heading: number,
        unk: boolean,
        changetime: boolean
    ): void;
    function NetworkRivalDeliveryCompleted(earnedMoney: number): void;
    function NetworkSeedRandomNumberGenerator(seed: number): void;
    function N_0xf1b84178f8674195(seed: number): void;
    function NetworkSendInviteViaPresence(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0xc3c7a6afdb244624(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
    function NetworkSendPresenceInvite(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
    function NetworkSendPresenceTransitionInvite(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0xc116ff9b4d488291(p2: number, p3: number): LuaMultiReturn<[boolean, number, number]>;
    function NetworkSendTextMessage(message: string, networkHandle: number): LuaMultiReturn<[boolean, number]>;
    function NetworkSendTransitionGamerInstruction(
        p1: string,
        p2: number,
        p3: number,
        p4: boolean
    ): LuaMultiReturn<[boolean, number]>;
    function NetworkSessionActivityQuickmatch(p0: number, p1: number, p2: number, p3: number): boolean;
    function N_0xbe3e347a87aceb82(p0: number, p1: number, p2: number, p3: number): boolean;
    function NetworkSessionAddActiveMatchmakingGroup(groupId: number): void;
    function N_0xcae55f48d3d7875c(groupId: number): void;
    function NetworkSessionBlockJoinRequests(toggle: boolean): void;
    function N_0xa73667484d7037c3(toggle: boolean): void;
    function NetworkSessionCancelInvite(): void;
    function NetworkSessionChangeSlots(p0: number, p1: boolean): void;
    function N_0xb4ab419e0d86acae(p0: number, p1: boolean): void;
    function NetworkSessionCrewMatchmaking(
        p0: number,
        p1: number,
        p2: number,
        maxPlayers: number,
        p4: boolean
    ): boolean;
    function N_0x94bc51e9449d917f(p0: number, p1: number, p2: number, maxPlayers: number, p4: boolean): boolean;
    function NetworkSessionEnd(p0: boolean, p1: boolean): boolean;
    function NetworkSessionEnter(
        p0: number,
        p1: number,
        p2: number,
        maxPlayers: number,
        p4: number,
        p5: number
    ): number;
    function NetworkSessionForceCancelInvite(): void;
    function N_0xa29177f7703b5644(): void;
    function NetworkSessionFriendMatchmaking(p0: number, p1: number, maxPlayers: number, p3: boolean): boolean;
    function N_0x2cfc76e0d087c994(p0: number, p1: number, maxPlayers: number, p3: boolean): boolean;
    function NetworkSessionGetInviter(networkHandle: number): void;
    function NetworkSessionGetKickVote(player: number): boolean;
    function NetworkSessionArePlayersVotingToKick(player: number): boolean;
    function NetworkSessionIsPlayerVotedToKick(player: number): boolean;
    function NetworkSessionGetMatchmakingGroupFree(p0: number): number;
    function N_0x56ce820830ef040b(p0: number): number;
    function NetworkSessionGetUnk(p0: number): number;
    function NetworkSessionGetPrivateSlots(): number;
    function N_0x53afd64c6758f2f9(): number;
    function NetworkSessionHost(p0: number, maxPlayers: number, p2: boolean): boolean;
    function NetworkSessionHostClosed(p0: number, maxPlayers: number): boolean;
    function N_0xed34c0c02c098bb7(p0: number, maxPlayers: number): boolean;
    function NetworkSessionHostFriendsOnly(p0: number, maxPlayers: number): boolean;
    function NetworkSessionHostSinglePlayer(p0: number): void;
    function NetworkSessionIsClosedCrew(): boolean;
    function N_0x74732c6ca90da2b4(): boolean;
    function NetworkSessionIsClosedFriends(): boolean;
    function N_0xfbcfa2ea2e206890(): boolean;
    function NetworkSessionIsInVoiceSession(): boolean;
    function N_0x855bc38818f6f684(): boolean;
    function NetworkSessionIsPrivate(): boolean;
    function N_0xcef70aa5b3f89ba1(): boolean;
    function NetworkSessionIsSolo(): boolean;
    function N_0xf3929c2379b60cce(): boolean;
    function NetworkSessionIsVisible(): boolean;
    function N_0xba416d68c631496a(): boolean;
    function NetworkSessionIsVoiceSessionBusy(): boolean;
    function N_0xef0912ddf7c4cb4b(): boolean;
    function NetworkSessionJoinInvite(): void;
    function NetworkIsPlayerAnimationDrawingSynchronized(): void;
    function NetworkSessionKickPlayer(player: number): void;
    function NetworkSessionLeaveSinglePlayer(): void;
    function NetworkSessionMarkVisible(toggle: boolean): void;
    function N_0x271cc6ab59ebf9a5(toggle: boolean): void;
    function NetworkSessionSetMatchmakingGroup(matchmakingGroup: number): void;
    function N_0x49ec8030f5015f8b(matchmakingGroup: number): void;
    function NetworkSctvSlots(matchmakingGroup: number): void;
    function NetworkSessionSetMatchmakingGroupMax(playerType: number, playerCount: number): void;
    function N_0x8b6a4dd0af9ce215(playerType: number, playerCount: number): void;
    function NetworkSessionSetMaxPlayers(playerType: number, playerCount: number): void;
    function NetworkSessionSetMatchmakingMentalState(p0: number): void;
    function N_0xf1eea2dda9ffa69d(p0: number): void;
    function NetworkSessionSetMatchmakingPropertyId(p0: boolean): void;
    function N_0x3f52e880aaf6c8ca(p0: boolean): void;
    function NetworkSessionValidateJoin(p0: boolean): void;
    function N_0xc19f6c8e7865a6ff(p0: boolean): void;
    function NetworkSessionHosted(p0: boolean): void;
    function NetworkSessionVoiceConnectToPlayer(globalPtr: number): void;
    function N_0xabd5e88b8a2d3db2(globalPtr: number): void;
    function NetworkVoiceConnectToPlayer(globalPtr: number): void;
    function NetworkSessionVoiceHost(): void;
    function NetworkSessionVoiceLeave(): void;
    function NetworkSessionVoiceRespondToRequest(p0: boolean, p1: number): void;
    function NetworkSetKeepFocuspoint(p0: boolean, p1: number): void;
    function NetworkSessionVoiceSetTimeout(timeout: number): void;
    function N_0x5b8ed3db018927b1(timeout: number): void;
    function NetworkSessionWasInvited(): boolean;
    function N_0x23dfb504655d0ce4(): boolean;
    function NetworkSetActivityPlayerMax(playerCount: number): void;
    function N_0x0e4f77f7b9d74d84(playerCount: number): void;
    function NetworkSetActivitySpectator(toggle: boolean): void;
    function NetworkSetActivitySpectatorMax(maxSpectators: number): void;
    function NetworkSetChoiceMigrateOptions(toggle: boolean, player: number): void;
    function N_0x5c707a667df8b9fa(toggle: boolean, player: number): void;
    function NetworkSetCurrentDataManagerHandle(p0: number): LuaMultiReturn<[boolean, number]>;
    function N_0x796a87b3b68d1f3d(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkCheckDataManagerForHandle(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkSetCurrentMissionId(missionId: string): void;
    function NetworkSetCurrentSpawnSetting(mpSettingSpawn: number): void;
    function NetworkSetCurrentlySelectedGamerHandleFromInviteMenu(p0: number): LuaMultiReturn<[boolean, number]>;
    function NetworkSetEntityCanBlend(entity: number, toggle: boolean): void;
    function NetworkSetEntityGhostedWithOwner(entity: number, p1: boolean): void;
    function N_0x4ba166079d658ed4(entity: number, p1: boolean): void;
    function NetworkSetEntityInvisibleToNetwork(entity: number, toggle: boolean): void;
    function N_0xf1ca12b18aef5298(entity: number, toggle: boolean): void;
    function NetworkSetEntityVisibleToNetwork(entity: number, toggle: boolean): void;
    function NetworkSetFriendlyFireOption(toggle: boolean): void;
    function NetworkSetGamerInvitedToTransition(networkHandle: number): void;
    function NetworkSetInFreeCamMode(toggle: boolean): void;
    function N_0xfc18db55ae19e046(toggle: boolean): void;
    function NetworkSetInMpCutscene(p0: boolean, p1: boolean): void;
    function NetworkSetInSpectatorMode(toggle: boolean, playerPed: number): void;
    function NetworkSetInSpectatorModeExtended(toggle: boolean, playerPed: number, p2: boolean): void;
    function N_0x419594e137637120(toggle: boolean, playerPed: number, p2: boolean): void;
    function NetworkSetInviteOnCallForInviteMenu(networkHandle: number): void;
    function N_0x66f010a4b031a331(networkHandle: number): void;
    function NetworkSetLocalPlayerInvincibleTime(time: number): void;
    function NetworkSetLocalPlayerSyncLookAt(toggle: boolean): void;
    function N_0x524ff0aeff9c3973(toggle: boolean): void;
    function NetworkSetMissionFinished(): void;
    function NetworkSetNoSpectatorChat(toggle: boolean): void;
    function N_0xf46a1e03e8755980(toggle: boolean): void;
    function NetworkSetObjectForceStaticBlend(object: number, enabled: boolean): void;
    function N_0x0379daf89ba09aa5(object: number, enabled: boolean): void;
    function NetworkSetOverrideSpectatorMode(toggle: boolean): void;
    function NetworkSetPlayerIsPassive(toggle: boolean): void;
    function N_0x1b857666604b1a74(toggle: boolean): void;
    function NetworkSetPropertyId(id: number): void;
    function NetworkSetRichPresence(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSetRichPresenceString(p0: number, textLabel: string): void;
    function N_0x3e200c2bcf4164eb(p0: number, textLabel: string): void;
    function NetworkSetRichPresence_2(p0: number, textLabel: string): void;
    function NetworkSetScriptIsSafeForNetworkGame(): void;
    function NetworkSetScriptReadyForEvents(toggle: boolean): void;
    function N_0x7ac752103856fb20(toggle: boolean): void;
    function NetworkSetTalkerProximity(value: number): void;
    function NetworkSetTeamOnlyChat(toggle: boolean): void;
    function NetworkSetThisScriptIsNetworkScript(
        maxNumMissionParticipants: number,
        p1: boolean,
        instanceId: number
    ): void;
    function NetworkSetTransitionActivityId(p0: number): void;
    function N_0x30de938b516f0ad2(p0: number): void;
    function NetworkSetTransitionCreatorHandle(p0: number): void;
    function NetworkSetTransitionVisibilityLock(p0: boolean, p1: boolean): void;
    function N_0x0c978fda19692c2c(p0: boolean, p1: boolean): void;
    function NetworkSetVehicleTestDrive(toggle: boolean): void;
    function NetworkSetVehicleWheelsDestructible(vehicle: number, toggle: boolean): void;
    function N_0x890e2c5abed7236d(vehicle: number, toggle: boolean): void;
    function NetworkSetVoiceActive(toggle: boolean): void;
    function NetworkSetVoiceChannel(channel: number): void;
    function NetworkShouldShowConnectivityTroubleshooting(): boolean;
    function N_0x82a2b386716608f1(): boolean;
    function NetworkShowProfileUi(networkHandle: number): void;
    function NetworkSpentAmmoDrop(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentArcadeGame(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function NetworkSpentArcadeGeneric(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function NetworkSpentArenaJoinSpectator(amount: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkSpentArenaPremium(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentArenaSpectatorBox(amount: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkSpentArrestBail(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentAutoshopModifications(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x9bea350d7c48061b(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function NetworkSpentAutoshopPropertyUtilityFee(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xb40f96d6d252839b(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentBaService(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0xd7cccba28c4ecaf0(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function NetworkSpentBallisticEquipment(amount: number, p1: boolean, p2: boolean): void;
    function N_0x5d97630a8a0ef123(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentBankInterest(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentBeachPartyGeneric(p0: number): void;
    function NetworkSpentBetting(amount: number, p1: number, matchId: string, p3: boolean, p4: boolean): void;
    function NetworkSpentBikeShopModify(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentBoatPickup(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentBoss(): boolean;
    function N_0xffbe02cd385356bd(): boolean;
    function NetworkSpentBounty(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentBountyHunterMission(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentBullShark(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentBusiness(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x0035bb914316f1e3(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentBuyArena(amount: number, p1: boolean, p2: boolean, p3: string): void;
    function NetworkSpentBuyAutoshop(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xeeb7e5d1feb20869(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentBuyBase(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentBuyBunker(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x12d148d26538d0f9(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentBuyCasino(amount: number, p1: boolean, p2: boolean, data: number): number;
    function NetworkSpentBuyOfftheradar(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentBuyPassiveMode(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentBuyRevealPlayers(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentBuyTiltrotor(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentBuyTruck(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xac272c0ae01b4bd8(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentBuyWantedlevel(p0: number, p2: boolean, p3: boolean): number;
    function NetworkSpentCallPlayer(p0: number, p2: boolean, p3: boolean): number;
    function NetworkSpentCarclub(p0: number, p1: boolean, p2: boolean, p3: number): void;
    function N_0x925227803a0eaa1b(p0: number, p1: boolean, p2: boolean, p3: number): void;
    function NetworkSpentCarclubMembership(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x1464e17207cd36e2(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function NetworkSpentCarclubTakeover(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xd1e46824e6fb92b5(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentCargoSourcing(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function NetworkSpentCarwash(p0: number, p1: number, p2: number, p3: boolean, p4: boolean): void;
    function NetworkSpentCashDrop(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentCasinoClubGeneric(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): void;
    function NetworkSpentCasinoGeneric(amount: number, p1: number, p2: number, p3: number, p4: number): void;
    function NetworkSpentCasinoHeist(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number
    ): void;
    function NetworkSpentCasinoHeistSkipMission(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentCasinoMembership(amount: number, p1: boolean, p2: boolean, p3: number): void;
    function NetworkSpentCinema(p0: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkSpentEmployAssassins(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentFromBank(p0: number, p1: number, p2: number, p3: boolean): void;
    function N_0xb9f7a469460e7a4a(p0: number, p1: number, p2: number, p3: boolean): void;
    function NetworkSpentFromRockstar(bank: number, p1: boolean, p2: boolean): void;
    function N_0x6a445b64ed7abeb5(bank: number, p1: boolean, p2: boolean): void;
    function NetworkSpentGangopsCannon(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentGangopsStartMission(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentGangopsStartStrand(_type: number, amount: number, p2: boolean, p3: boolean): void;
    function NetworkSpentGangopsTripSkip(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentGunrunningContactService(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentHangarStaffCharges(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentHangarUtilityCharges(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentHeliPickup(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentHireMercenary(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentHireMugger(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentHoldups(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentImAbility(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x93aa4165cb67e925(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentImportExportRepair(p0: number, p1: number, p2: number): void;
    function N_0xc1952f3773ba18fe(p0: number, p1: number, p2: number): void;
    function NetworkSpentInStripclub(p0: number, p1: boolean, p2: number, p3: boolean): void;
    function N_0xee99784e4467689c(p0: number, p1: boolean, p2: number, p3: boolean): void;
    function NetworkSpentIslandHeist(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentJobSkip(amount: number, matchId: string, p2: boolean, p3: boolean): void;
    function NetworkSpentJukebox(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x5bcde0f640c773d2(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentMakeItRain(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentMoveYacht(amount: number, p1: boolean, p2: boolean): void;
    function N_0xe7df4e0545dfb56e(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentNightclubBarDrink(amount: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkSpentNightclubEntryFee(player: number, amount: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkSpentNoCops(p0: number, p1: boolean, p2: boolean): void;
    function N_0xd5bb406f4e04019f(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentOrderBodyguardVehicle(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xe8b0b270b6e7c76e(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentOrderWarehouseVehicle(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x05f04155a226fbbf(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentPaServiceDancer(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xb49eca122467d05f(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentPaServiceHeliPickup(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x0fe8e1fcd2b86b33(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentPayBoss(p0: number, p1: number, p2: number): void;
    function N_0xdbc966a01c02bca7(p0: number, p1: number, p2: number): void;
    function NetworkSpentPayGoon(p0: number, p1: number, amount: number): void;
    function N_0x08a1b82b91900682(p0: number, p1: number, amount: number): void;
    function NetworkSpentPayVehicleInsurancePremium(
        amount: number,
        vehicleModel: number,
        notBankrupt: boolean,
        hasTheMoney: boolean
    ): number;
    function NetworkSpentPlayerHealthcare(p0: number, p1: number, p2: boolean, p3: boolean): void;
    function N_0x7c99101f7fce2ee5(p0: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkSpentProstitutes(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentPurchaseHangar(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentPurchaseWarehouse(amount: number, data: number, p2: boolean, p3: boolean): void;
    function N_0x33981d6804e62f49(amount: number, data: number, p2: boolean, p3: boolean): void;
    function NetworkSpentRdrhatchetBonus(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentRehireDj(amount: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkSpentRenameOrganization(p0: number, p1: number, p2: number): void;
    function N_0xfc4ee00a7b3bfb76(p0: number, p1: number, p2: number): void;
    function NetworkSpentRequestHeist(p0: number, p1: boolean, p2: boolean): void;
    function N_0x9d26502bb97bfe62(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentRequestJob(p0: number, p1: boolean, p2: boolean): void;
    function N_0x8204da7934df3155(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentRobbedByMugger(amount: number, p1: boolean, p2: boolean): void;
    function N_0x995a65f15f581359(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentSalesDisplay(p0: boolean): void;
    function NetworkSpentSpinTheWheelPayment(amount: number, p1: number, p2: boolean, p3: boolean): void;
    function NetworkSpentSubmarine(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function NetworkSpentTaxi(amount: number, p1: boolean, p2: boolean): void;
    function NetworkSpentTelescope(p0: number, p1: boolean, p2: boolean): void;
    function NetworkSpentUpgradeArena(amount: number, p1: boolean, p2: boolean, p3: string): void;
    function NetworkSpentUpgradeAutoshop(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xdd829aa198fdc46c(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentUpgradeBase(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentUpgradeBunker(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x0c82d21a77c22d49(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentUpgradeCasino(amount: number, p1: boolean, p2: boolean, data: number): number;
    function NetworkSpentUpgradeHangar(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentUpgradeSub(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x89049a84065ce68e(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentUpgradeTiltrotor(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentUpgradeTruck(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x365e877c61d6988b(p0: number, p1: number, p2: number, p3: number): void;
    function NetworkSpentVehicleExportMods(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number
    ): void;
    function N_0xa75ccf58a60a5fd1(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number
    ): void;
    function NetworkSpentVehicleRequested(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function NetworkSpentVipUtilityCharges(p0: number, p1: number, p2: number): void;
    function N_0x5182a339a3474510(p0: number, p1: number, p2: number): void;
    function NetworkSpentWager(p0: number, p1: number, amount: number): void;
    function N_0xd99db210089617fe(p0: number, p1: number, amount: number): void;
    function NetworkStartRespawnSearchForPlayer(
        player: number,
        x: number,
        y: number,
        z: number,
        radius: number,
        p5: number,
        p6: number,
        p7: number,
        flags: number
    ): boolean;
    function N_0x5a6ffa2433e2f14c(
        player: number,
        x: number,
        y: number,
        z: number,
        radius: number,
        p5: number,
        p6: number,
        p7: number,
        flags: number
    ): boolean;
    function NetworkStartRespawnSearchInAngledAreaForPlayer(
        player: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number,
        p8: number,
        p9: number,
        p10: number,
        flags: number
    ): boolean;
    function N_0x4ba92a18502bca61(
        player: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number,
        p8: number,
        p9: number,
        p10: number,
        flags: number
    ): boolean;
    function NetworkStartSoloTutorialSession(): void;
    function N_0x17e0198b3882c2cb(): void;
    function NetworkStartSynchronisedScene(netScene: number): void;
    function NetworkStartUserContentPermissionsCheck(netHandle: number): number;
    function N_0xdeb2b99a1af1a2a6(netHandle: number): number;
    function NetworkStopLoadScene(): void;
    function NetworkStopSynchronisedScene(netScene: number): void;
    function NetworkSuppressInvite(toggle: boolean): void;
    function NetworkTransitionTrack(hash: number, p1: number, p2: number, state: number, p4: number): void;
    function N_0xc3bfed92026a2aad(hash: number, p1: number, p2: number, state: number, p4: number): void;
    function NetworkTryAccessTunableBoolHash(
        tunableContext: number,
        tunableName: number,
        defaultValue: boolean
    ): boolean;
    function N_0xc7420099936ce286(tunableContext: number, tunableName: number, defaultValue: boolean): boolean;
    function NetworkAccessTunableBoolHashFailVal(
        tunableContext: number,
        tunableName: number,
        defaultValue: boolean
    ): boolean;
    function NetworkUgcNav(p0: number, p1: number): void;
    function N_0xc1447451ddb512f0(p0: number, p1: number): void;
    function NetworkUnregisterNetworkedEntity(entity: number): void;
    function N_0x7368e683bb9038d6(entity: number): void;
    function NetworkUpdateLoadScene(): boolean;
    function NetworkUpdatePlayerScars(): void;
    function N_0xb7c7f6ad6424304b(): void;
    function NetworkUseHighPrecisionBlending(netID: number, toggle: boolean): void;
    function N_0x2b1813aba29016c5(netID: number, toggle: boolean): void;
    function NetworkSetNetworkIdDynamic(netID: number, toggle: boolean): void;
    function NetworkUseHighPrecisionVehicleBlending(vehicle: number, toggle: boolean): void;
    function N_0xec0c1d4922af9754(vehicle: number, toggle: boolean): void;
    function NetworkUseLogarithmicBlendingThisFrame(entity: number): void;
    function N_0xcd71a4ecab22709e(entity: number): void;
    function NewLoadSceneStart(
        posX: number,
        posY: number,
        posZ: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        radius: number,
        p7: number
    ): boolean;
    function NewLoadSceneStartSphere(x: number, y: number, z: number, radius: number, p4: number): boolean;
    function N_0xaccfb4acf53551b0(x: number, y: number, z: number, radius: number, p4: number): boolean;
    function NewLoadSceneStop(): void;
    function NextOnscreenKeyboardResultWillDisplayUsingTheseFonts(p0: number): void;
    function N_0x3ed1438c1f5c6612(p0: number): void;
    function ObjToNet(object: number): number;
    function OnEnterMp(): void;
    function LoadMpDlcMaps(): void;
    function OnEnterSp(): void;
    function N_0xd7c10c4a637992c9(): void;
    function LoadSpDlcMaps(): void;
    function OpenBombBayDoors(vehicle: number): void;
    function OpenVehicleBombBay(vehicle: number): void;
    function OpenCommerceStore(p0: string, p1: string): void;
    function N_0x58c21165f6545892(p0: string, p1: string): void;
    function OpenOnlinePoliciesMenu(): void;
    function ShowSocialClubLegalScreen(): void;
    function OpenPatrolRoute(patrolRoute: string): void;
    function OpenReportugcMenu(): void;
    function N_0x523a590c1a3cc0d3(): void;
    function DisplayJobReport(): void;
    function OpenSequenceTask(taskSequenceId: number): void;
    function OpenSocialClubMenu(): void;
    function N_0x75d3691713c3b05a(): void;
    function OrderedBossVehicle(p0: number, p1: number, vehicleHash: number): void;
    function N_0xcea553e35c2246e1(p0: number, p1: number, vehicleHash: number): void;
    function OverrideCamSplineMotionBlur(cam: number, p1: number, p2: number, p3: number): void;
    function OverrideCamSplineVelocity(cam: number, p1: number, p2: number, p3: number): void;
    function OverrideInteriorSmokeEnd(): void;
    function N_0xefb55e7c25d3b3be(): void;
    function OverrideInteriorSmokeLevel(level: number): void;
    function N_0x1600fd8cf72ebc12(level: number): void;
    function OverrideInteriorSmokeName(name: string): void;
    function N_0x2a2a52824db96700(name: string): void;
    function OverrideLodscaleThisFrame(scaling: number): void;
    function N_0xa76359fc80b2438e(scaling: number): void;
    function OverrideMicrophoneSettings(hash: number, toggle: boolean): void;
    function N_0x75773e11ba459e90(hash: number, toggle: boolean): void;
    function OverrideMultiplayerChatColour(p0: number, hudColor: number): void;
    function N_0xf47e567b3630dd12(p0: number, hudColor: number): void;
    function OverrideMultiplayerChatPrefix(gxtEntryHash: number): void;
    function N_0x6a1738b4323fe2d9(gxtEntryHash: number): void;
    function OverridePedBadgeTexture(ped: number, txd: string, txn: string): boolean;
    function N_0x95eb5e34f821babe(ped: number, txd: string, txn: string): boolean;
    function OverridePedsCanStandOnTopFlag(flag: boolean): void;
    function OverridePlayerGroundMaterial(hash: number, toggle: boolean): void;
    function N_0xd2cc78cd3d0b50f9(hash: number, toggle: boolean): void;
    function OverridePopGroups(path: string): void;
    function OverridePopscheduleVehicleModel(scheduleId: number, vehicleHash: number): void;
    function OverrideSaveHouse(
        p0: boolean,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: boolean
    ): LuaMultiReturn<[boolean, number, number]>;
    function OverrideTrevorRage(voiceEffect: string): void;
    function OverrideUnderwaterStream(p1: boolean): number;
    function OverrideVehHorn(vehicle: number, override: boolean, hornHash: number): void;
    function OverrideVehiclePedsCanStandOnTopFlag(vehicle: number, can: boolean): void;
    function ParticipantId(): number;
    function ParticipantIdToInt(): number;
    function PassKeyboardInputToScaleform(scaleformHandle: number): boolean;
    function N_0xd1c7cb175e012964(scaleformHandle: number): boolean;
    function PatchDecalDiffuseMap(decalType: number, textureDict: string, textureName: string): void;
    function N_0x8a35c742130c6080(decalType: number, textureDict: string, textureName: string): void;
    function AddDecalToMarker(decalType: number, textureDict: string, textureName: string): void;
    function OverrideDecalTexture(decalType: number, textureDict: string, textureName: string): void;
    function PauseClock(toggle: boolean): void;
    function PauseDeathArrestRestart(toggle: boolean): void;
    function DisableAutomaticRespawn(toggle: boolean): void;
    function PauseMenuActivateContext(hash: number): void;
    function N_0xdd564bdd0472c936(hash: number): void;
    function AddFrontendMenuContext(hash: number): void;
    function PauseMenuDeactivateContext(contextHash: number): void;
    function ObjectDecalToggle(contextHash: number): void;
    function PauseMenuDisableBusyspinner(toggle: boolean): void;
    function N_0x9245e81072704b8a(toggle: boolean): void;
    function PauseMenuGetIndexOfMouseHoveredSlot(): number;
    function N_0x359af31a4b52f5ed(): number;
    function PauseMenuGetUniqueIdOfMouseHoveredSlot(): number;
    function N_0x13c4b962653a5280(): number;
    function PauseMenuIsContextActive(contextHash: number): boolean;
    function N_0x84698ab38d0c6636(contextHash: number): boolean;
    function PauseMenuIsContextMenuActive(): number;
    function N_0x2a25adc48f87841f(): number;
    function PauseMenuRedrawInstructionalButtons(p0: number): void;
    function EnableDeathbloodSeethrough(p0: number): void;
    function N_0x4895bdea16e7c080(p0: number): void;
    function PauseMenuSetBusySpinner(p0: boolean, p1: number, p2: number): void;
    function N_0xc78e239ac5b2ddb9(p0: boolean, p1: number, p2: number): void;
    function PauseMenuSetWarnOnTabChange(setWarn: boolean): void;
    function N_0xf06ebb91a81e09e3(setWarn: boolean): void;
    function PauseMenuceptionGoDeeper(pageId: number): void;
    function N_0x77f16b447824da6c(pageId: number): void;
    function PauseMenuceptionTheKick(): void;
    function N_0xcdca26e80faecb8f(): void;
    function PausePlaybackRecordedVehicle(vehicle: number): void;
    function PauseScriptedConversation(p0: boolean): void;
    function PedHasUseScenarioTask(ped: number): boolean;
    function PedToNet(ped: number): number;
    function PinInteriorInMemory(interior: number): void;
    function N_0x2ca429c029ccf247(interior: number): void;
    function LoadInterior(interior: number): void;
    function PinRopeVertex(ropeId: number, vertex: number, x: number, y: number, z: number): void;
    function PlaceObjectOnGroundProperly(object: number): boolean;
    function PlaceObjectOnGroundProperly_2(object: number): boolean;
    function N_0xd76eeef746057fd6(object: number): boolean;
    function PlayAmbientSpeechFromPositionNative(
        speechName: string,
        voiceName: string,
        x: number,
        y: number,
        z: number,
        speechParam: string
    ): void;
    function N_0xed640017ed337e45(
        speechName: string,
        voiceName: string,
        x: number,
        y: number,
        z: number,
        speechParam: string
    ): void;
    function PlayAmbientSpeechAtCoords(
        speechName: string,
        voiceName: string,
        x: number,
        y: number,
        z: number,
        speechParam: string
    ): void;
    function PlayAnimOnRunningScenario(ped: number, animDict: string, animName: string): void;
    function PlayAnimalVocalization(pedHandle: number, p1: number, speechName: string): void;
    function N_0xee066c7006c49c0a(pedHandle: number, p1: number, speechName: string): void;
    function PlayBinkMovie(binkMovie: number): void;
    function PlayCamAnim(
        cam: number,
        animName: string,
        animDictionary: string,
        x: number,
        y: number,
        z: number,
        xRot: number,
        yRot: number,
        zRot: number,
        p9: boolean,
        p10: number
    ): boolean;
    function PlayDeferredSoundFrontend(soundName: string, soundsetName: string): void;
    function N_0xcada5a0d0702381e(soundName: string, soundsetName: string): void;
    function PlayEndCreditsMusic(play: boolean): void;
    function PlayEntityAnim(
        entity: number,
        animName: string,
        animDict: string,
        p3: number,
        loop: boolean,
        stayInAnim: boolean,
        p6: boolean,
        delta: number,
        bitset: number
    ): boolean;
    function PlayEntityScriptedAnim(p0: number, p4: number, p5: number): LuaMultiReturn<[number, number, number]>;
    function PlayFacialAnim(ped: number, animName: string, animDict: string): void;
    function PlayMissionCompleteAudio(audioName: string): void;
    function PlayPain(ped: number, painID: number, p1: number): void;
    function PlayPedAmbientSpeechAndCloneNative(ped: number, speechName: string, speechParam: string): void;
    function PlayAmbientSpeech2(ped: number, speechName: string, speechParam: string): void;
    function PlayPedAmbientSpeechNative(ped: number, speechName: string, speechParam: string): void;
    function PlayAmbientSpeech1(ped: number, speechName: string, speechParam: string): void;
    function PlayPedAmbientSpeechWithVoiceNative(
        ped: number,
        speechName: string,
        voiceName: string,
        speechParam: string,
        p4: boolean
    ): void;
    function PlayAmbientSpeechWithVoice(
        ped: number,
        speechName: string,
        voiceName: string,
        speechParam: string,
        p4: boolean
    ): void;
    function PlayPedRingtone(ringtoneName: string, ped: number, p2: boolean): void;
    function PlayPoliceReport(name: string, p1: number): number;
    function PlaySound(
        soundId: number,
        audioName: string,
        audioRef: string,
        p3: boolean,
        p4: number,
        p5: boolean
    ): void;
    function PlaySoundFromCoord(
        soundId: number,
        audioName: string,
        x: number,
        y: number,
        z: number,
        audioRef: string,
        isNetwork: boolean,
        range: number,
        p8: boolean
    ): void;
    function PlaySoundFromEntity(
        soundId: number,
        audioName: string,
        entity: number,
        audioRef: string,
        isNetwork: boolean,
        p5: number
    ): void;
    function PlaySoundFrontend(soundId: number, audioName: string, audioRef: string, p3: boolean): void;
    function PlayStreamFromObject(object: number): void;
    function PlayStreamFromPed(ped: number): void;
    function N_0x89049dd63c08b5d1(ped: number): void;
    function PlayStreamFromPosition(x: number, y: number, z: number): void;
    function SpecialFrontendEqual(x: number, y: number, z: number): void;
    function PlayStreamFromVehicle(vehicle: number): void;
    function PlayStreamFrontend(): void;
    function PlaySynchronizedAudioEvent(p0: number): boolean;
    function PlaySynchronizedCamAnim(camera: number, scene: number, animName: string, animDictionary: string): boolean;
    function PlaySynchronizedEntityAnim(
        entity: number,
        syncedScene: number,
        animation: string,
        propName: string,
        p4: number,
        p5: number,
        p6: number,
        p7: number
    ): boolean;
    function PlaySynchronizedMapEntityAnim(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number
    ): LuaMultiReturn<[boolean, number, number]>;
    function PlayTennisDiveAnim(ped: number, p1: number, p2: number, p3: number, p4: number, p5: boolean): void;
    function N_0x8fa9c42fc5d7c64b(ped: number, p1: number, p2: number, p3: number, p4: number, p5: boolean): void;
    function PlayTennisSwingAnim(
        ped: number,
        animDict: string,
        animName: string,
        p3: number,
        p4: number,
        p5: boolean
    ): void;
    function N_0xe266ed23311f24d4(
        ped: number,
        animDict: string,
        animName: string,
        p3: number,
        p4: number,
        p5: boolean
    ): void;
    function PlayVehicleDoorCloseSound(vehicle: number, doorIndex: number): void;
    function PlayVehicleDoorOpenSound(vehicle: number, doorIndex: number): void;
    function PlayerAttachVirtualBound(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number
    ): void;
    function PlayerDetachVirtualBound(): void;
    function PlayerId(): number;
    function PlayerPedId(): number;
    function PlaystatsAcquiredHiddenPackage(p0: number): void;
    function N_0x79ab33f0fbfac40c(p0: number): void;
    function PlaystatsActivityDone(p0: number, p1: number): void;
    function N_0xa071e0ed98f91286(p0: number, p1: number): void;
    function PlaystatsArcadegame(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function PlaystatsArenaWarSpectator(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function PlaystatsArenaWarsEnded(data: number): void;
    function PlaystatsAwardBadsport(id: number): void;
    function N_0x47b32f5611e6e483(id: number): void;
    function PlaystatsAwardXp(amount: number, _type: number, category: number): void;
    function PlaystatsBackgroundScriptAction(action: string, value: number): void;
    function N_0x5009dfd741329729(action: string, value: number): void;
    function PlaystatsBanAlert(p0: number): void;
    function N_0x516fc96eb88eefe5(p0: number): void;
    function PlaystatsBuyContraband(data: number): void;
    function N_0xd6781e42755531f7(data: number): void;
    function PlaystatsCarclubChallenge(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x1187cb58d7f3bed7(p0: number, p1: number, p2: number, p3: number): void;
    function PlaystatsCarclubPoints(p0: number): void;
    function N_0xff14d6feec507bbe(p0: number): void;
    function PlaystatsCarclubPrize(p0: number, p1: number): void;
    function N_0x69c922b677621428(p0: number, p1: number): void;
    function PlaystatsCasinoBlackjack(p0: number): void;
    function PlaystatsCasinoBlackjackLight(p0: number): void;
    function PlaystatsCasinoChip(p0: number): void;
    function PlaystatsCasinoInsidetrack(p0: number): void;
    function PlaystatsCasinoInsidetrackLight(p0: number): void;
    function PlaystatsCasinoLuckyseven(p0: number): void;
    function PlaystatsCasinoMissionEnded(data: number): void;
    function PlaystatsCasinoRoulette(p0: number): void;
    function PlaystatsCasinoRouletteLight(p0: number): void;
    function PlaystatsCasinoSlotmachine(p0: number): void;
    function PlaystatsCasinoSlotmachineLight(p0: number): void;
    function PlaystatsCasinoStoryMissionEnded(p0: number, p1: number): void;
    function PlaystatsCasinoThreecardpoker(p0: number): void;
    function PlaystatsCasinoThreecardpokerLight(p0: number): void;
    function PlaystatsChangeMcEmblem(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0x0a50d2604e05cb94(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function PlaystatsCheatApplied(cheat: string): void;
    function PlaystatsClothChange(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function PlaystatsCollectible(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number
    ): void;
    function PlaystatsCopyRankIntoNewSlot(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function N_0xb7257ba2550ea10a(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function PlaystatsCrateCreated(p0: number, p1: number, p2: number): void;
    function N_0xafc7e5e075a96f46(p0: number, p1: number, p2: number): void;
    function PlaystatsAmbientMissionCrateCreated(p0: number, p1: number, p2: number): void;
    function PlaystatsCrateCreatedMissionDone(p0: number, p1: number, p2: number): void;
    function PlaystatsCrateDropMissionDone(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number
    ): void;
    function N_0x1cae5d2e3f9a07f0(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function PlaystatsCrateDrop(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function PlaystatsDarMissionEnd(data: number): void;
    function PlaystatsDefendContraband(data: number): void;
    function N_0x2605663bd4f23b5d(data: number): void;
    function PlaystatsDirectorMode(p0: number): void;
    function N_0x46326e13da4e0546(p0: number): void;
    function PlaystatsDroneUsage(p0: number, p1: number, p2: number): void;
    function PlaystatsDupeDetection(data: number): void;
    function N_0x848b66100ee33b05(data: number): void;
    function PlaystatsEarnedMcPoints(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function N_0x501478855a6074ce(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function PlaystatsEnterSessionPack(data: number): void;
    function PlaystatsExtraEvent(p0: number): void;
    function N_0xfa5b74bab8a7ef99(p0: number): void;
    function PlaystatsFriendActivity(p0: number, p1: number): void;
    function PlaystatsGunrunMissionEnded(data: number): void;
    function N_0x0eacdf8487d5155a(data: number): void;
    function PlaystatsH2FmprepEnd(data: number): void;
    function PlaystatsH2InstanceEnd(p1: number, p2: number, p3: number): number;
    function PlaystatsHeistSaveCheat(hash: number, p1: number): void;
    function N_0xf4ff020a08bc8863(hash: number, p1: number): void;
    function PlaystatsHoldUpMissionDone(p0: number, p1: number, p2: number, p3: number): void;
    function N_0xcb00196b31c39eb1(p0: number, p1: number, p2: number, p3: number): void;
    function PlaystatsHoldUp(p0: number, p1: number, p2: number, p3: number): void;
    function PlaystatsIdleKick(time: number): void;
    function N_0x5da3a8de8cb6226f(time: number): void;
    function PlaystatsImportExportMissionDone(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x2b69f5074c894811(p0: number, p1: number, p2: number, p3: number): void;
    function PlaystatsImpExp(p0: number, p1: number, p2: number, p3: number): void;
    function PlaystatsInventory(p0: number): void;
    function PlaystatsJobBend(): LuaMultiReturn<[number, number, number, number]>;
    function N_0xf5bb8dac426a52c0(): LuaMultiReturn<[number, number, number, number]>;
    function PlaystatsLeaveJobChain(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function N_0xc5be134ec7ba96a0(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function PlaystatsMatchStarted(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function PlaystatsMissionCheckpoint(p1: number, p2: number, p3: number): number;
    function PlaystatsMissionOver(p1: number, p2: number, p3: boolean, p4: boolean, p5: boolean): number;
    function PlaystatsMissionStarted(p1: number, p2: number, p3: boolean): number;
    function PlaystatsNpcInvite(p0: number): void;
    function PlaystatsOddjobDone(p0: number, p1: number, p2: number): void;
    function PlaystatsPassiveMode(p0: boolean, p1: number, p2: number, p3: number): void;
    function PlaystatsPegasaircraft(modelHash: number): void;
    function PlaystatsPiMenuHideSettings(data: number): void;
    function N_0x203b381133817079(data: number): void;
    function PlaystatsPropChange(p0: number, p1: number, p2: number, p3: number): void;
    function PlaystatsQuickfixTool(element: number, item: string): void;
    function N_0x90d0622866e80445(element: number, item: string): void;
    function PlaystatsRaceCheckpoint(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function PlaystatsRaceToPointMissionDone(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number
    ): void;
    function N_0xaddd1c754e2e2914(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number
    ): void;
    function PlaystatsRaceToPoint(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number
    ): void;
    function PlaystatsRandomMissionDone(name: string, p1: number, p2: number, p3: number): void;
    function N_0x71862b1d855f32e1(name: string, p1: number, p2: number, p3: number): void;
    function PlaystatsRankUp(rank: number): void;
    function PlaystatsRecoverContraband(data: number): void;
    function N_0x04d90ba8207ada2d(data: number): void;
    function PlaystatsRobberyFinale(p0: number): void;
    function N_0xbba55be9aaaabf44(p0: number): void;
    function PlaystatsRobberyPrep(p0: number): void;
    function N_0x1a67dfbf1f5c3835(p0: number): void;
    function PlaystatsRosBet(amount: number, act: number, player: number, cm: number): void;
    function N_0x121fb4dddc2d5291(amount: number, act: number, player: number, cm: number): void;
    function PlaystatsSellContraband(data: number): void;
    function N_0xc729991a9065376e(data: number): void;
    function PlaystatsSetJoinType(joinType: number): void;
    function N_0xd1032e482629049e(joinType: number): void;
    function PlaystatsShopItem(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function PlaystatsSmugMissionEnded(data: number): void;
    function PlaystatsSpectatorWheelSpin(p0: number, p1: number, p2: number, p3: number): void;
    function PlaystatsSpentPiCustomLoadout(amount: number): void;
    function N_0xbe509b0a3693de8b(amount: number): void;
    function PlaystatsStartOfflineMode(): void;
    function N_0x098760c7461724cd(): void;
    function PlaystatsStoneHatchetEnd(data: number): void;
    function PlaystatsStuntPerformedEventAllowTrigger(): void;
    function N_0x928dbfb892638ef3(): void;
    function PlaystatsStuntPerformedEventDisallowTrigger(): void;
    function N_0x8a800daccc0da55d(): void;
    function PlaystatsWeaponModeChange(weaponHash: number, componentHashTo: number, componentHashFrom: number): void;
    function N_0xe95c8a1875a02ca4(weaponHash: number, componentHashTo: number, componentHashFrom: number): void;
    function PlaystatsWebsiteVisited(scaleformHash: number, p1: number): void;
    function N_0xddf24d535060f811(scaleformHash: number, p1: number): void;
    function PointCamAtCoord(cam: number, x: number, y: number, z: number): void;
    function PointCamAtEntity(
        cam: number,
        entity: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        p5: boolean
    ): void;
    function PointCamAtPedBone(
        cam: number,
        ped: number,
        boneIndex: number,
        x: number,
        y: number,
        z: number,
        p6: boolean
    ): void;
    function PopOutVehicleWindscreen(vehicle: number): void;
    function DetachVehicleWindscreen(vehicle: number): void;
    function PopTimecycleModifier(): void;
    function PopulateNow(): void;
    function Pow(base: number, exponent: number): number;
    function PrefetchSrl(srl: string): void;
    function PreloadBusyspinner(): void;
    function N_0xc65ab383cd91df98(): void;
    function PreloadCloudHat(name: string): void;
    function N_0x11b56fbbf7224868(name: string): void;
    function PreloadScriptConversation(p0: boolean, p1: boolean, p2: boolean, p3: boolean): void;
    function PreloadScriptPhoneConversation(p0: boolean, p1: boolean): void;
    function PreloadVehicleAudio(model: number): void;
    function N_0xca4cea6ae0000a7e(model: number): void;
    function PreloadVehicleMod(p0: number, modType: number, p2: number): void;
    function PrepareAlarm(alarmName: string): boolean;
    function PrepareMusicEvent(eventName: string): boolean;
    function PrepareSynchronizedAudioEvent(p0: string, p1: number): number;
    function PrepareSynchronizedAudioEventForScene(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function PresenceEventUpdatestatFloat(statHash: number, value: number, p2: number): void;
    function N_0x30a6614c1f7799b8(statHash: number, value: number, p2: number): void;
    function UpdateStatFloat(statHash: number, value: number, p2: number): void;
    function PresenceEventUpdatestatInt(statHash: number, value: number, p2: number): void;
    function N_0x11ff1c80276097ed(statHash: number, value: number, p2: number): void;
    function UpdateStatInt(statHash: number, value: number, p2: number): void;
    function PresetInteriorAmbientCache(timecycleModifierName: string): void;
    function N_0xd7021272eb0a451e(timecycleModifierName: string): void;
    function PreventCollectionOfPortablePickup(object: number, p1: boolean, p2: boolean): void;
    function N_0x92aefb5f6e294023(object: number, p1: boolean, p2: boolean): void;
    function ProcessCashGift(p2: string): LuaMultiReturn<[string, number, number]>;
    function N_0x20194d48eaec9a41(p2: string): LuaMultiReturn<[string, number, number]>;
    function ProcessEntityAttachments(entity: number): void;
    function ProfilerEnterScope(scopeName: string): void;
    function ProfilerExitScope(): void;
    function ProfilerIsRecording(): boolean;
    function PulseBlip(blip: number): void;
    function PushTimecycleModifier(): void;
    function QueryMovieMeshSetState(p0: number): number;
    function N_0x9b6e70c5ceef4eeb(p0: number): number;
    function QueueMissionRepeatLoad(): boolean;
    function N_0x72de52178c291cb5(): boolean;
    function QueueMissionRepeatSave(): boolean;
    function N_0x44a0bdc559b35f6e(): boolean;
    function RaceGalleryAddBlip(x: number, y: number, z: number): number;
    function N_0x551df99658db6ee8(x: number, y: number, z: number): number;
    function RaceGalleryFullscreen(toggle: boolean): void;
    function N_0x5354c5ba2ea868a4(toggle: boolean): void;
    function SetMapFullScreen(toggle: boolean): void;
    function RaceGalleryNextBlipSprite(spriteId: number): void;
    function N_0x1eae6dd17b7a5efa(spriteId: number): void;
    function RaiseConvertibleRoof(vehicle: number, instantlyRaise: boolean): void;
    function RaiseRetractableWheels(vehicle: number): void;
    function RaiseLowerableWheels(vehicle: number): void;
    function RecordBrokenGlass(x: number, y: number, z: number, radius: number): void;
    function N_0xfbe20329593dec9d(x: number, y: number, z: number, radius: number): void;
    function RefillAmmoInstantly(ped: number): boolean;
    function PedSkipNextReloading(ped: number): boolean;
    function RefreshInterior(interiorID: number): void;
    function RefreshPlayerListStats(p0: number): boolean;
    function UsingNetworkWeapontype(p0: number): boolean;
    function N_0xe26ccff8094d8c74(p0: number): boolean;
    function RefreshWaypoint(): void;
    function RegisterArchetypes(factory: any): void;
    function RegisterBoolToSave(name: string): number;
    function RegisterCommand(commandName: string, handler: any, restricted: boolean): void;
    function RegisterEntities(factory: any): void;
    function RegisterEntityForCutscene(
        cutsceneEntity: number,
        cutsceneEntName: string,
        p2: number,
        modelHash: number,
        p4: number
    ): void;
    function RegisterEnumToSave(name: string): number;
    function RegisterFloatToSave(name: string): number;
    function RegisterFontFile(fileName: string): void;
    function RegisterFontId(fontName: string): number;
    function RegisterHatedTargetsAroundPed(ped: number, radius: number): void;
    function RegisterInt64ToSave(name: string): number;
    function N_0xa735353c77334ea0(name: string): number;
    function RegisterIntToSave(name: string): number;
    function RegisterKeyMapping(
        commandString: string,
        description: string,
        defaultMapper: string,
        defaultParameter: string
    ): void;
    function RegisterNamedRendertarget(name: string, p1: boolean): boolean;
    function RegisterNoirScreenEffectThisFrame(): void;
    function N_0xa44ff770dfbc5dae(): void;
    function RegisterNuiCallback(callbackType: string, callback: any): void;
    function RegisterNuiCallbackType(callbackType: string): void;
    function RegisterObjectScriptBrain(
        scriptName: string,
        modelHash: number,
        p2: number,
        activationRange: number,
        p4: number,
        p5: number
    ): void;
    function RegisterPedheadshot(ped: number): number;
    function RegisterPedheadshotTransparent(ped: number): number;
    function N_0x953563ce563143af(ped: number): number;
    function RegisterPedheadshot_3(ped: number): number;
    function N_0xba8805a1108a2515(ped: number): number;
    function RegisterRawNuiCallback(callbackType: string, callback: any): void;
    function RegisterResourceAsEventHandler(eventName: string): void;
    function RegisterSaveHouse(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p5: number,
        p6: number
    ): LuaMultiReturn<[number, number]>;
    function RegisterScriptWithAudio(p0: number): void;
    function RegisterStreamingFileFromCache(resourceName: string, fileName: string, cacheString: string): void;
    function RegisterStreamingFileFromKvs(kvsKey: string): void;
    function RegisterStreamingFileFromUrl(registerAs: string, url: string): void;
    function RegisterSynchronisedScriptSpeech(): void;
    function RegisterTarget(ped: number, target: number): void;
    function RegisterTextLabelToSave(name: string): number;
    function RegisterTextLabelToSave_2(name: string): number;
    function N_0x6f7794f28c6b2535(name: string): number;
    function RegisterWorldPointScriptBrain(scriptName: string, activationRange: number, p2: number): void;
    function ReleaseAllCommerceItemImages(): void;
    function N_0x72d0706cd6ccdb58(): void;
    function ReleaseAmbientAudioBank(): void;
    function ReleaseBinkMovie(binkMovie: number): void;
    function ReleaseControlOfFrontend(): void;
    function N_0x14621bb1df14e2b2(): void;
    function ReleaseMissionAudioBank(): void;
    function ReleaseMovieMeshSet(movieMeshSet: number): void;
    function ReleaseNamedRendertarget(name: string): boolean;
    function ReleaseNamedScriptAudioBank(audioBank: string): void;
    function ReleasePedPreloadPropData(ped: number): void;
    function N_0xf79f9def0aade61a(ped: number): void;
    function ReleasePedPreloadVariationData(ped: number): void;
    function N_0x5aab586ffec0fd96(ped: number): void;
    function ReleasePedheadshotImgUpload(id: number): void;
    function N_0x5d517b27cf6ecd04(id: number): void;
    function ReleasePreloadMods(vehicle: number): void;
    function ReleaseScriptAudioBank(): void;
    function ReleaseScriptGuidFromEntity(entity: number): void;
    function N_0x2b3334bca57cd799(entity: number): void;
    function ShapeTestResultEntity(entity: number): void;
    function ReleaseSoundId(soundId: number): void;
    function ReleaseWeaponAudio(): void;
    function RemoteCheatDetected(): boolean;
    function N_0x472841a026d26d8b(): boolean;
    function RemoveActionModeAsset(asset: string): void;
    function RemoveAirDefenseZone(zoneId: number): boolean;
    function N_0x0abf535877897560(zoneId: number): boolean;
    function RemoveAllAirDefenseZones(): void;
    function N_0x1e45b34adebee48e(): void;
    function RemoveAllCoverBlockingAreas(): void;
    function RemoveAllPedWeapons(ped: number, p1: boolean): void;
    function RemoveAllPickupsOfType(pickupHash: number): void;
    function RemoveAllProjectilesOfType(weaponHash: number, explode: boolean): void;
    function RemoveAllShockingEvents(p0: boolean): void;
    function RemoveAllStickyBombsFromEntity(entity: number): void;
    function N_0x715135f4b82ac90d(entity: number): void;
    function RemoveAnimDict(animDict: string): void;
    function RemoveAnimSet(animSet: string): void;
    function RemoveBlip(blip: number): void;
    function RemoveClipSet(clipSet: string): void;
    function RemoveCoverPoint(coverpoint: number): void;
    function RemoveCurrentRise(p0: number): void;
    function N_0xb1252e3e59a82aaf(p0: number): void;
    function RemoveCutFile(cutsceneName: string): void;
    function N_0xd00d76a7dfc9d852(cutsceneName: string): void;
    function RemoveCutscene(): void;
    function RemoveDecal(decal: number): void;
    function RemoveDecalsFromObject(obj: number): void;
    function RemoveDecalsFromObjectFacing(obj: number, x: number, y: number, z: number): void;
    function RemoveDecalsFromVehicle(vehicle: number): void;
    function RemoveDecalsInRange(x: number, y: number, z: number, range: number): void;
    function RemoveDispatchSpawnBlockingArea(p0: number): void;
    function RemoveDoorFromSystem(doorHash: number): void;
    function RemoveDryVolume(handle: number): void;
    function RemoveEntityFromAudioMixGroup(entity: number, p1: number): void;
    function N_0x18eb48cfc41f2ea0(entity: number, p1: number): void;
    function RemoveForcedObject(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function RemoveFromItemset(p0: number, p1: number): void;
    function RemoveGroup(groupId: number): void;
    function RemoveIpl(iplName: string): void;
    function RemoveModelFromCreatorBudget(modelHash: number): void;
    function N_0xf086ad9354fac3a3(modelHash: number): void;
    function RemoveModelHide(x: number, y: number, z: number, radius: number, model: number, p5: boolean): void;
    function RemoveModelSwap(
        x: number,
        y: number,
        z: number,
        radius: number,
        originalModel: number,
        newModel: number,
        p6: boolean
    ): void;
    function RemoveMpGamerTag(gamerTagId: number): void;
    function N_0x31698aa80e0223f8(gamerTagId: number): void;
    function RemoveMultiplayerBankCash(): void;
    function RemoveMultiplayerHudCash(): void;
    function RemoveMultiplayerWalletCash(): void;
    function N_0x95cf81bd06ee1887(): void;
    function RemoveNamedPtfxAsset(fxName: string): void;
    function RemoveNavmeshBlockingObject(p0: number): void;
    function RemoveNavmeshRequiredRegions(): void;
    function RemoveObjectHighDetailModel(object: number): void;
    function N_0x4a39db43e47cf3aa(object: number): void;
    function RemoveParticleFx(ptfxHandle: number, p1: boolean): void;
    function RemoveParticleFxFromEntity(entity: number): void;
    function RemoveParticleFxInRange(X: number, Y: number, Z: number, radius: number): void;
    function RemovePedDefensiveArea(ped: number, toggle: boolean): void;
    function RemovePedElegantly(ped: number): void;
    function RemovePedFromGroup(ped: number): void;
    function RemovePedHelmet(ped: number, instantly: boolean): void;
    function RemovePedPreferredCoverSet(ped: number): void;
    function N_0xfddb234cf74073d9(ped: number): void;
    function RemovePickUpRopeForCargobob(cargobob: number): void;
    function RetractCargobobHook(cargobob: number): void;
    function RemovePickup(pickup: number): void;
    function RemovePlayerHelmet(player: number, p2: boolean): void;
    function RemovePopMultiplierArea(id: number, p1: boolean): void;
    function N_0xb129e447a2eda4bf(id: number, p1: boolean): void;
    function RemovePopMultiplierSphere(id: number, p1: boolean): void;
    function N_0xe6869becdd8f2403(id: number, p1: boolean): void;
    function RemovePortalSettingsOverride(p0: string): void;
    function N_0xb4bbfd9cd8b3922b(p0: string): void;
    function RemovePtfxAsset(): void;
    function RemoveRelationshipGroup(groupHash: number): void;
    function RemoveReplaceTexture(origTxd: string, origTxn: string): void;
    function RemoveRoadNodeSpeedZone(speedzone: number): boolean;
    function N_0x1033371fc8e842a7(speedzone: number): boolean;
    function RemoveSpeedZone(speedzone: number): boolean;
    function RemoveScaleformScriptHudMovie(hudComponent: number): void;
    function N_0xf44a5456ac3f4f97(hudComponent: number): void;
    function RemoveScenarioBlockingArea(p0: number, p1: boolean): void;
    function RemoveScenarioBlockingAreas(): void;
    function RemoveScriptFire(fireHandle: number): void;
    function RemoveShockingEvent(event: number): boolean;
    function RemoveShockingEventSpawnBlockingAreas(): void;
    function RemoveStateBagChangeHandler(cookie: number): void;
    function RemoveStealthKill(hash: number, p1: boolean): void;
    function N_0xa6a12939f16d85be(hash: number, p1: boolean): void;
    function RemoveStealthModeAsset(asset: string): void;
    function RemoveTcmodifierOverride(p0: string): void;
    function N_0x15e33297c3e8dc60(p0: string): void;
    function RemoveTimecycleModifier(modifierName: string): void;
    function RemoveTimecycleModifierVar(modifierName: string, varName: string): void;
    function RemoveVehicleAsset(vehicleAsset: number): void;
    function RemoveVehicleCombatAvoidanceArea(p0: number): void;
    function N_0xe30524e1871f481d(p0: number): void;
    function RemoveVehicleCrewEmblem(vehicle: number, p1: number): void;
    function N_0xd2300034310557e4(vehicle: number, p1: number): void;
    function RemoveVehicleHighDetailModel(vehicle: number): void;
    function RemoveVehicleMod(vehicle: number, modType: number): void;
    function RemoveVehicleRecording(recording: number, script: string): void;
    function RemoveVehicleShadowEffect(vehicle: number): void;
    function N_0xf87d9f2301f7d206(vehicle: number): void;
    function RemoveVehicleStuckCheck(vehicle: number): void;
    function RemoveVehicleUpsidedownCheck(vehicle: number): void;
    function RemoveVehicleWindow(vehicle: number, windowIndex: number): void;
    function RemoveVehiclesFromGeneratorsInArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        unk: number
    ): void;
    function RemoveWarningMessageListItems(): void;
    function N_0x6ef54ab721dc6242(): void;
    function RemoveWaypointRecording(name: string): void;
    function RemoveWeaponAsset(weaponHash: number): void;
    function RemoveWeaponComponentFromPed(ped: number, weaponHash: number, componentHash: number): void;
    function RemoveWeaponComponentFromWeaponObject(weaponObject: number, addonHash: number): void;
    function RemoveWeaponFromPed(ped: number, weaponHash: number): void;
    function RenderFakePickupGlow(x: number, y: number, z: number, colorIndex: number): void;
    function N_0x3430676b11cdf21d(x: number, y: number, z: number, colorIndex: number): void;
    function HighlightPlacementCoords(x: number, y: number, z: number, colorIndex: number): void;
    function RenderScriptCams(render: boolean, ease: boolean, easeTime: number, p3: boolean, p4: boolean): void;
    function ReplaceHudColour(hudColorIndex: number, hudColorIndex2: number): void;
    function N_0x1ccc708f0f850613(hudColorIndex: number, hudColorIndex2: number): void;
    function SetHudColoursSwitch(hudColorIndex: number, hudColorIndex2: number): void;
    function ReplaceHudColourWithRgba(hudColorIndex: number, r: number, g: number, b: number, a: number): void;
    function N_0xf314cf4f0211894e(hudColorIndex: number, r: number, g: number, b: number, a: number): void;
    function SetHudColour(hudColorIndex: number, r: number, g: number, b: number, a: number): void;
    function ReplayFreeCamGetMaxRange(): number;
    function N_0x8bfceb5ea1b161b6(): number;
    function ReportCrime(player: number, crimeType: number, wantedLvlThresh: number): void;
    function ReportPoliceSpottedPlayer(player: number): void;
    function N_0xdc64d2c53493ed12(player: number): void;
    function RequestActionModeAsset(asset: string): void;
    function RequestAdditionalCollisionAtCoord(x: number, y: number, z: number): void;
    function RequestAdditionalText(gxt: string, slot: number): void;
    function RequestAdditionalTextForDlc(gxt: string, slot: number): void;
    function RequestAdditionalText_2(gxt: string, slot: number): void;
    function RequestAmbientAudioBank(p0: string, p1: boolean): boolean;
    function RequestAnimDict(animDict: string): void;
    function RequestAnimSet(animSet: string): void;
    function RequestClipSet(clipSet: string): void;
    function RequestCollisionAtCoord(x: number, y: number, z: number): void;
    function RequestCollisionForModel(model: number): void;
    function RequestCommerceItemImage(index: number): boolean;
    function N_0xa2f952104fc6dd4b(index: number): boolean;
    function RequestCutFile(cutsceneName: string): void;
    function N_0x06a3524161c502ba(cutsceneName: string): void;
    function RequestCutscene(cutsceneName: string, flags: number): void;
    function RequestCutsceneWithPlaybackList(cutsceneName: string, playbackFlags: number, flags: number): void;
    function N_0xc23de0e91c30b58c(cutsceneName: string, playbackFlags: number, flags: number): void;
    function RequestCutsceneEx(cutsceneName: string, playbackFlags: number, flags: number): void;
    function RequestIpl(iplName: string): void;
    function RequestMenuPedModel(model: number): void;
    function N_0xa0261aef7acfc51e(model: number): void;
    function RequestMissionAudioBank(p0: string, p1: boolean): boolean;
    function RequestModel(model: number): void;
    function RequestModelsInRoom(interior: number, roomName: string): void;
    function N_0x8a7a40100edfec58(interior: number, roomName: string): void;
    function RequestInteriorRoomByName(interior: number, roomName: string): void;
    function RequestNamedPtfxAsset(fxName: string): void;
    function RequestPathsPreferAccurateBoundingstruct(x1: number, y1: number, x2: number, y2: number): boolean;
    function N_0x07fb139b592fa687(x1: number, y1: number, x2: number, y2: number): boolean;
    function RequestPedVehicleVisibilityTracking(ped: number, p1: boolean): void;
    function GetPedFloodInvincibility(ped: number, p1: boolean): void;
    function RequestPedVisibilityTracking(ped: number): void;
    function N_0x7d7a2e43e74e2eb8(ped: number): void;
    function RequestPedheadshotImgUpload(id: number): boolean;
    function N_0xf0daef2f545bee25(id: number): boolean;
    function RequestPtfxAsset(): void;
    function RequestResourceFileSet(setName: string): boolean;
    function RequestScaleformMovie(scaleformName: string): number;
    function RequestScaleformMovieInstance(scaleformName: string): number;
    function RequestScaleformMovieInteractive(scaleformName: string): number;
    function RequestScaleformMovie3(scaleformName: string): number;
    function RequestScaleformMovie_2(scaleformName: string): number;
    function N_0x65e7e78842e74cdb(scaleformName: string): number;
    function RequestScaleformScriptHudMovie(hudComponent: number): void;
    function N_0x9304881d6f6537ea(hudComponent: number): void;
    function RequestHudScaleform(hudComponent: number): void;
    function RequestScript(scriptName: string): void;
    function RequestScriptAudioBank(p0: string, p1: boolean): boolean;
    function RequestScriptWithNameHash(scriptHash: number): void;
    function RequestStreamedScript(scriptHash: number): void;
    function RequestStealthModeAsset(asset: string): void;
    function RequestStreamedTextureDict(textureDict: string, p1: boolean): void;
    function RequestTaskMoveNetworkStateTransition(ped: number, name: string): boolean;
    function N_0xd01015c7316ae176(ped: number, name: string): boolean;
    function RequestVehicleAsset(vehicleHash: number, vehicleAsset: number): void;
    function RequestVehicleDashboardScaleformMovie(vehicle: number): void;
    function N_0xdba3c090e3d74690(vehicle: number): void;
    function RequestVehicleHighDetailModel(vehicle: number): void;
    function RequestVehicleRecording(recording: number, script: string): void;
    function RequestWaypointRecording(name: string): void;
    function RequestWeaponAsset(weaponHash: number, p1: number, p2: number): void;
    function RequestWeaponHighDetailModel(weaponObject: number): void;
    function ReserveNetworkLocalObjects(amount: number): void;
    function N_0x797f9c5e661d920e(amount: number): void;
    function ReserveNetworkLocalPeds(amount: number): void;
    function N_0x2c8df5d129595281(amount: number): void;
    function ReserveNetworkLocalVehicles(amount: number): void;
    function N_0x42613035157e4208(amount: number): void;
    function ReserveNetworkMissionObjects(amount: number): void;
    function ReserveNetworkMissionPeds(amount: number): void;
    function ReserveNetworkMissionVehicles(amount: number): void;
    function ResetAiMeleeWeaponDamageModifier(): void;
    function ResetAiWeaponDamageModifier(): void;
    function ResetBenchmarkRecording(): void;
    function N_0x437138b6a830166a(): void;
    function ResetDeepOceanScaler(): void;
    function N_0x5e5e99285ae812db(): void;
    function ResetWavesIntensity(): void;
    function ResetCurrentIntensity(): void;
    function ResetDispatchIdealSpawnDistance(): void;
    function ResetDispatchSpawnBlockingAreas(): void;
    function ResetDispatchSpawnLocation(): void;
    function ResetDispatchTimeBetweenSpawnAttempts(p0: number): void;
    function ResetEditorValues(): void;
    function N_0x3353d13f09307691(): void;
    function ResetEntityAlpha(entity: number): void;
    function ResetExclusiveScenarioGroup(): void;
    function ResetExtraTimecycleModifierStrength(): void;
    function N_0x2bf72ad5b41aa739(): void;
    function ResetFlyThroughWindscreenParams(): void;
    function ResetGhostedEntityAlpha(): void;
    function N_0x17330ebf2f2124a8(): void;
    function ResetGlobalActionscriptFlag(flagIndex: number): void;
    function N_0xb99c4e4d9499df29(flagIndex: number): void;
    function ResetGroupFormationDefaultSpacing(groupHandle: number): void;
    function ResetHudComponentValues(id: number): void;
    function ResetInputMappingScheme(): void;
    function N_0x643ed62d5ea3bebd(): void;
    function ResetMapZoomDataLevel(index: number): void;
    function ResetMapdataEntityMatrix(mapDataHash: number, entityInternalIdx: number): boolean;
    function ResetParticleFxOverride(name: string): void;
    function N_0x89c8553dd3274aae(name: string): void;
    function ResetParticleFxAssetOldToNew(name: string): void;
    function ResetPausedRenderphases(): void;
    function N_0xe1c8709406f2c41c(): void;
    function ResetPedAudioFlags(ped: number): void;
    function ResetPedInVehicleContext(ped: number): void;
    function ResetPedLastVehicle(ped: number): void;
    function ResetPedModelPersonality(modelHash: number): void;
    function ResetPedMovementClipset(ped: number, transitionSpeed: number): void;
    function ResetPedRagdollTimer(ped: number): void;
    function ResetPedStrafeClipset(ped: number): void;
    function ResetPedVisibleDamage(ped: number): void;
    function ResetPedWeaponMovementClipset(ped: number): void;
    function ResetPlayerArrestState(player: number): void;
    function ResetPlayerInputGait(player: number): void;
    function ResetPlayerStamina(player: number): void;
    function ResetReticuleValues(): void;
    function ResetScenarioGroupsEnabled(): void;
    function ResetScenarioTypesEnabled(): void;
    function ResetScriptGfxAlign(): void;
    function N_0xe3a3db414a373dab(): void;
    function ScreenDrawPositionEnd(): void;
    function ResetTrevorRage(): void;
    function ResetVehiclePedsCanStandOnTopFlag(vehicle: number): void;
    function ResetVehicleStuckTimer(vehicle: number, nullAttributes: number): void;
    function ResetVehicleWheels(vehicle: number, toggle: boolean): void;
    function ResetWantedLevelDifficulty(player: number): void;
    function ResetWater(): void;
    function ResetWorldBoundaryForPlayer(): void;
    function RestartFrontendMenu(menuHash: number, p1: number): void;
    function RestartGame(): void;
    function N_0xe574a662acaefbb1(): void;
    function RestartScriptedConversation(): void;
    function RestorePlayerStamina(player: number, percentage: number): void;
    function ResurrectPed(ped: number): void;
    function ReturnTwo(p0: number): number;
    function N_0x40afb081f8add4ee(p0: number): number;
    function ReviveInjuredPed(ped: number): void;
    function RockstarMessageGetString(): string;
    function N_0xdf649c4e9afdd788(): string;
    function RollDownWindow(vehicle: number, windowIndex: number): void;
    function RollDownWindows(vehicle: number): void;
    function RollUpWindow(vehicle: number, windowIndex: number): void;
    function RopeAreTexturesLoaded(): boolean;
    function RopeConvertToSimple(ropeId: number): void;
    function RopeDrawShadowEnabled(toggle: boolean): number;
    function RopeForceLength(ropeId: number, length: number): void;
    function RopeGetDistanceBetweenEnds(ropeId: number): number;
    function GetRopeLength(ropeId: number): number;
    function RopeLoadTextures(): void;
    function RopeResetLength(ropeId: number, length: number): void;
    function RopeSetUpdateOrder(ropeId: number, p1: number): void;
    function N_0xdc57a637a20006ed(ropeId: number, p1: number): void;
    function RopeSetUpdatePinverts(ropeId: number): void;
    function RopeUnloadTextures(): void;
    function Round(value: number): number;
    function SaveBenchmarkRecording(): void;
    function N_0x37deb0aa183fb6d8(): void;
    function SaveHighQualityPhoto(unused: number): boolean;
    function N_0x3dec726c25a11bac(unused: number): boolean;
    function SaveRecordingClip(): boolean;
    function N_0x644546ec5287471b(): boolean;
    function ScEmailMessageClearRecipList(): void;
    function N_0x55df6db45179236e(): void;
    function ScEmailMessagePushGamerToRecipList(networkHandle: number): void;
    function ScGamerdataGetBool(name: string): boolean;
    function N_0x8416fe4e4629d7d7(name: string): boolean;
    function ScGetIsProfileAttributeSet(name: string): boolean;
    function ScGamerdataGetFloat(name: string, outValue: number): LuaMultiReturn<[boolean, number]>;
    function N_0xa770c8eec6fb2ac5(name: string, outValue: number): LuaMultiReturn<[boolean, number]>;
    function ScGamerdataGetInt(name: string, outValue: number): LuaMultiReturn<[boolean, number]>;
    function N_0xc85a7127e7ad02aa(name: string, outValue: number): LuaMultiReturn<[boolean, number]>;
    function ScGetHasAchievementBeenPassed(achievement: number): boolean;
    function N_0x418dc16fae452c1c(achievement: number): boolean;
    function ScGetNickname(): string;
    function ScInboxGetEmails(offset: number, limit: number): void;
    function N_0x040addcbafa1018a(offset: number, limit: number): void;
    function ScInboxGetMessageIsReadAtIndex(msgIndex: number): boolean;
    function N_0x93028f1db42bfd08(msgIndex: number): boolean;
    function IsScInboxValid(msgIndex: number): boolean;
    function ScInboxGetMessageTypeAtIndex(msgIndex: number): number;
    function N_0xbb8ea16ecbc976c4(msgIndex: number): number;
    function ScInboxMessageInit(msgIndex: number): number;
    function ScInboxGetTotalNumMessages(): number;
    function N_0x03a93ff1a2ca0864(): number;
    function GetTotalScInboxIds(): number;
    function ScInboxMessageDoApply(p0: number): boolean;
    function N_0x9a2c8064b6c1e41a(p0: number): boolean;
    function ScInboxMessagePush(p0: number): boolean;
    function ScInboxMessageGetBountyData(index: number, outData: number): LuaMultiReturn<[boolean, number]>;
    function N_0x87e0052f08bd64e6(index: number, outData: number): LuaMultiReturn<[boolean, number]>;
    function ScInboxMessageGetDataBool(p0: number, p1: string): boolean;
    function N_0xffe5c16f402d851d(p0: number, p1: string): boolean;
    function ScInboxMessageGetDataInt(p0: number, context: string, out: number): LuaMultiReturn<[boolean, number]>;
    function ScInboxMessageGetDataString(p0: number, context: string, out: string): boolean;
    function ScInboxMessageGetString(p0: number): string;
    function N_0xf3e31d16cbdcb304(p0: number): string;
    function ScInboxMessageGetUgcdata(p0: number, p1: number): LuaMultiReturn<[boolean, number]>;
    function ScInboxMessagePop(p0: number): boolean;
    function N_0x2c015348cf19ca1d(p0: number): boolean;
    function ScInboxMessagePushGamerToEventRecipList(networkHandle: number): void;
    function N_0xda024bdbd600f44a(networkHandle: number): void;
    function ScInboxMessageSendBountyPresenceEvent(data: string): boolean;
    function N_0x6afd2cd753feef83(data: string): boolean;
    function ScInboxMessageSendUgcStatUpdateEvent(data: string): void;
    function N_0xa68d3d229f4f3b06(data: string): void;
    function ScLicenseplateAdd(
        plateText: string,
        plateData: string,
        tokenOut: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x1989c6e6f67e76a8(
        plateText: string,
        plateData: string,
        tokenOut: number
    ): LuaMultiReturn<[boolean, number]>;
    function ScLicenseplateGetAddIsPending(token: number): boolean;
    function N_0x07c61676e5bb52cd(token: number): boolean;
    function ScLicenseplateGetAddStatus(token: number): number;
    function N_0x8147fff6a718e1ad(token: number): number;
    function ScLicenseplateGetCount(token: number): number;
    function N_0x700569dba175a77c(token: number): number;
    function ScLicenseplateGetIsvalidIsPending(token: number): boolean;
    function N_0xd302e99edf0449cf(token: number): boolean;
    function ScLicenseplateGetIsvalidStatus(token: number): number;
    function N_0x5c4ebffa98bdb41c(token: number): number;
    function ScLicenseplateGetPlate(token: number, plateIndex: number): string;
    function ScLicenseplateGetPlateData(token: number, plateIndex: number): string;
    function N_0x2e89990ddff670c3(token: number, plateIndex: number): string;
    function ScLicenseplateIsvalid(plateText: string, tokenOut: number): LuaMultiReturn<[boolean, number]>;
    function N_0x0f73393bac7e6730(plateText: string, tokenOut: number): LuaMultiReturn<[boolean, number]>;
    function ScLicenseplateSetPlateData(oldPlateText: string, newPlateText: string, plateData: string): boolean;
    function N_0xd0ee05fe193646ea(oldPlateText: string, newPlateText: string, plateData: string): boolean;
    function ScPresenceAttrSetFloat(): boolean;
    function N_0xc4c4575f62534a24(): boolean;
    function ScPresenceAttrSetInt(attrHash: number, value: number): boolean;
    function N_0x1f1e9682483697c7(attrHash: number, value: number): boolean;
    function ScPresenceAttrSetString(attrHash: number, value: string): boolean;
    function N_0x287f1f75d2803595(attrHash: number, value: string): boolean;
    function ScProfanityCheckString(_string: string, token: number): LuaMultiReturn<[boolean, number]>;
    function N_0x75632c5ecd7ed843(_string: string, token: number): LuaMultiReturn<[boolean, number]>;
    function ScStartCheckStringTask(_string: string, token: number): LuaMultiReturn<[boolean, number]>;
    function ScProfanityCheckUgcString(_string: string, token: number): LuaMultiReturn<[boolean, number]>;
    function N_0xeb2bf817463dfa28(_string: string, token: number): LuaMultiReturn<[boolean, number]>;
    function ScProfanityGetCheckIsPending(token: number): boolean;
    function N_0x82e4a58babc15ae7(token: number): boolean;
    function ScGetCheckStringStatus(token: number): boolean;
    function ScProfanityGetCheckIsValid(token: number): boolean;
    function N_0x1753344c770358ae(token: number): boolean;
    function ScHasCheckStringTaskCompleted(token: number): boolean;
    function ScProfanityGetStringPassed(token: number): boolean;
    function N_0x85535acf97fc0969(token: number): boolean;
    function ScProfanityGetStringStatus(token: number): number;
    function N_0x930de22f07b1cce3(token: number): number;
    function ScaleformMovieMethodAddParamBool(value: boolean): void;
    function PushScaleformMovieFunctionParameterBool(value: boolean): void;
    function PushScaleformMovieMethodParameterBool(value: boolean): void;
    function ScaleformMovieMethodAddParamFloat(value: number): void;
    function PushScaleformMovieFunctionParameterFloat(value: number): void;
    function PushScaleformMovieMethodParameterFloat(value: number): void;
    function ScaleformMovieMethodAddParamInt(value: number): void;
    function PushScaleformMovieFunctionParameterInt(value: number): void;
    function PushScaleformMovieMethodParameterInt(value: number): void;
    function ScaleformMovieMethodAddParamLatestBriefString(value: number): void;
    function N_0xec52c631a1831c03(value: number): void;
    function ScaleformMovieMethodAddParamIntString(value: number): void;
    function ScaleformMovieMethodAddParamPlayerNameString(_string: string): void;
    function N_0xe83a3e3557a56640(_string: string): void;
    function PushScaleformMovieMethodParameterButtonName(_string: string): void;
    function ScaleformMovieMethodAddParamTextureNameString(_string: string): void;
    function PushScaleformMovieFunctionParameterString(_string: string): void;
    function PushScaleformMovieMethodParameterString(_string: string): void;
    function ScaleformMovieMethodAddParamTextureNameString_2(_string: string): void;
    function N_0x77fe3402004cd1b0(_string: string): void;
    function PushScaleformMovieMethodParameterString_2(_string: string): void;
    function ScriptIsMovingMobilePhoneOffscreen(toggle: boolean): void;
    function ScriptRaceGetPlayerSplitTime(player: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0x8ef5573a1f801a5c(player: number): LuaMultiReturn<[boolean, number, number]>;
    function ScriptRaceInit(p0: number, p1: number, p2: number, p3: number): void;
    function N_0x0a60017f841a54f2(p0: number, p1: number, p2: number, p3: number): void;
    function ScriptRaceShutdown(): void;
    function N_0x1ff6bf9a63e5757f(): void;
    function ScriptThreadIteratorGetNextThreadId(): number;
    function N_0x30b4fa1c82dd4b9f(): number;
    function GetIdOfNextThreadInEnumeration(): number;
    function ScriptThreadIteratorReset(): void;
    function N_0xdadfada5a20143a8(): void;
    function BeginEnumeratingThreads(): void;
    function SeethroughGetMaxThickness(): number;
    function SeethroughReset(): void;
    function SeethroughSetColorNear(red: number, green: number, blue: number): void;
    function N_0x1086127b3a63505e(red: number, green: number, blue: number): void;
    function SeethroughSetFadeEndDistance(distance: number): void;
    function N_0x9d75795b9dc6ebbf(distance: number): void;
    function SeethroughSetFadeStartDistance(distance: number): void;
    function N_0xa78de25577300ba1(distance: number): void;
    function SeethroughSetHeatscale(index: number, heatScale: number): void;
    function N_0xd7d0b00177485411(index: number, heatScale: number): void;
    function SeethroughSetHiLightIntensity(intensity: number): void;
    function N_0x19e50eb6e33e1d28(intensity: number): void;
    function SeethroughSetHiLightNoise(noise: number): void;
    function N_0x1636d7fc127b10d2(noise: number): void;
    function SeethroughSetMaxThickness(thickness: number): void;
    function N_0x0c8fac83902a62df(thickness: number): void;
    function SeethroughSetNoiseAmountMax(amount: number): void;
    function N_0xfebfbfdfb66039de(amount: number): void;
    function SeethroughSetNoiseAmountMin(amount: number): void;
    function N_0xff5992e1c9e65d05(amount: number): void;
    function SelectEntityAtCursor(hitFlags: number, precise: boolean): number;
    function SelectEntityAtPos(fracX: number, fracY: number, hitFlags: number, precise: boolean): number;
    function SendDuiMessage(duiObject: number, jsonString: string): void;
    function SendDuiMouseDown(duiObject: number, button: string): void;
    function SendDuiMouseMove(duiObject: number, x: number, y: number): void;
    function SendDuiMouseUp(duiObject: number, button: string): void;
    function SendDuiMouseWheel(duiObject: number, deltaY: number, deltaX: number): void;
    function SendLoadingScreenMessage(jsonString: string): boolean;
    function SendNuiMessage(jsonString: string): boolean;
    function SetAbilityBarValue(value: number, maxValue: number): void;
    function SetAbilityBarVisibilityInMultiplayer(visible: boolean): void;
    function SetAchievementProgress(achievement: number, progress: number): boolean;
    function N_0xc2afffdabbdc2c5c(achievement: number, progress: number): boolean;
    function SetAchievementProgression(achievement: number, progress: number): boolean;
    function SetActivateObjectPhysicsAsSoonAsItIsUnfrozen(object: number, toggle: boolean): void;
    function SetAggressiveHorns(toggle: boolean): void;
    function SetAiGlobalPathNodesType(_type: number): void;
    function SetAiMeleeWeaponDamageModifier(modifier: number): void;
    function SetAiWeaponDamageModifier(value: number): void;
    function SetAimCooldown(value: number): void;
    function SetAirDragMultiplierForPlayersVehicle(player: number, multiplier: number): void;
    function SetAllLowPriorityVehicleGeneratorsActive(active: boolean): void;
    function SetAllPathsCacheBoundingstruct(toggle: boolean): void;
    function N_0x228e5c6ad4d74bfd(toggle: boolean): void;
    function SetAllRandomPedsFlee(player: number, toggle: boolean): void;
    function SetAllRandomPedsFleeThisFrame(player: number): void;
    function SetAllVehicleGeneratorsActive(): void;
    function SetAllVehicleGeneratorsActiveInArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        p6: boolean,
        p7: boolean
    ): void;
    function SetAllowAbilityBarInMultiplayer(toggle: boolean): void;
    function SetAmbientPedRangeMultiplierThisFrame(multiplier: number): void;
    function N_0x0b919e1fb47cc4e0(multiplier: number): void;
    function SetAmbientPedsDropMoney(p0: boolean): void;
    function N_0x6b0e6172c9a4d902(p0: boolean): void;
    function SetAmbientVehicleRangeMultiplierThisFrame(range: number): void;
    function N_0x90b6da738a9a25da(range: number): void;
    function SetSomeVehicleDensityMultiplierThisFrame(range: number): void;
    function SetAmbientVoiceName(ped: number, name: string): void;
    function SetAmbientVoiceNameHash(ped: number, hash: number): void;
    function N_0x9a53ded9921de990(ped: number, hash: number): void;
    function SetAmbientZoneListState(p0: string, p1: boolean, p2: boolean): void;
    function SetAmbientZoneListStatePersistent(ambientZone: string, p1: boolean, p2: boolean): void;
    function SetAmbientZoneState(zoneName: string, p1: boolean, p2: boolean): void;
    function SetAmbientZoneStatePersistent(ambientZone: string, p1: boolean, p2: boolean): void;
    function SetAmmoInClip(ped: number, weaponHash: number, ammo: number): boolean;
    function SetAnimLooped(p0: number, p1: boolean, p2: number, p3: boolean): void;
    function SetAnimPhase(entity: number, p1: number, p2: number, p3: boolean): void;
    function N_0xddf3cb5a0a4c0b49(entity: number, p1: number, p2: number, p3: boolean): void;
    function SetAnimPlaybackTime(entity: number, p1: number, p2: number, p3: boolean): void;
    function SetAnimRate(p0: number, p1: number, p2: number, p3: boolean): void;
    function SetAnimWeight(p0: number, p1: number, p2: number, p3: number, p4: boolean): void;
    function SetAnimalMood(animal: number, mood: number): void;
    function SetArtificialLightsState(state: boolean): void;
    function SetBlackout(state: boolean): void;
    function SetArtificialLightsStateAffectsVehicles(toggle: boolean): void;
    function SetAudioFlag(flagName: string, toggle: boolean): void;
    function SetAudioSceneVariable(scene: string, variable: string, value: number): void;
    function SetAudioScriptCleanupTime(time: number): void;
    function N_0xa5f377b175a699c5(time: number): void;
    function SetAudioSpecialEffectMode(mode: number): void;
    function N_0x12561fcbb62d5b9c(mode: number): void;
    function SetAudioSubmixEffectParamFloat(
        submixId: number,
        effectSlot: number,
        paramIndex: number,
        paramValue: number
    ): void;
    function SetAudioSubmixEffectParamInt(
        submixId: number,
        effectSlot: number,
        paramIndex: number,
        paramValue: number
    ): void;
    function SetAudioSubmixEffectRadioFx(submixId: number, effectSlot: number): void;
    function SetAudioSubmixOutputVolumes(
        submixId: number,
        outputSlot: number,
        frontLeftVolume: number,
        frontRightVolume: number,
        rearLeftVolume: number,
        rearRightVolume: number,
        channel5Volume: number,
        channel6Volume: number
    ): void;
    function SetAudioVehiclePriority(vehicle: number, p1: number): void;
    function SetAutoGiveParachuteWhenEnterPlane(player: number, toggle: boolean): void;
    function SetAutoGiveScubaGearWhenExitVehicle(player: number, toggle: boolean): void;
    function N_0xd2b315b6689d537d(player: number, toggle: boolean): void;
    function SetBackfaceculling(toggle: boolean): void;
    function N_0x23ba6b0c2ad7b0d3(toggle: boolean): void;
    function SetBalanceAddMachine(contentId: string, contentTypeName: string): boolean;
    function SetBalanceAddMachines(dataCount: number, contentTypeName: string): LuaMultiReturn<[boolean, number]>;
    function SetBeastModeActive(player: number): void;
    function N_0x438822c279b73b93(player: number): void;
    function SetBigmapActive(toggleBigMap: boolean, showFullMap: boolean): void;
    function SetRadarBigmapEnabled(toggleBigMap: boolean, showFullMap: boolean): void;
    function SetBikeOnStand(vehicle: number, x: number, y: number): void;
    function SetBikeLeanAngle(vehicle: number, x: number, y: number): void;
    function SetBinkMovie(name: string): number;
    function SetBinkMovieRequested(name: string): number;
    function SetBinkMovieTime(binkMovie: number, progress: number): void;
    function SetBinkMovieProgress(binkMovie: number, progress: number): void;
    function SetBinkMovieUnk_2(binkMovie: number, p1: boolean): void;
    function SetBinkMovieVolume(binkMovie: number, value: number): void;
    function SetBinkMovieUnk(binkMovie: number, value: number): void;
    function SetBinkShouldSkip(binkMovie: number, shouldSkip: boolean): void;
    function N_0x6805d58caa427b72(binkMovie: number, shouldSkip: boolean): void;
    function SetBit(offset: number): number;
    function SetBitsInRange(rangeStart: number, rangeEnd: number, p3: number): number;
    function SetBlipAlpha(blip: number, alpha: number): void;
    function SetBlipAsFriendly(blip: number, toggle: boolean): void;
    function SetBlipAsMissionCreatorBlip(blip: number, toggle: boolean): void;
    function SetBlipAsShortRange(blip: number, toggle: boolean): void;
    function SetBlipBright(blip: number, toggle: boolean): void;
    function SetBlipCategory(blip: number, index: number): void;
    function SetBlipColour(blip: number, color: number): void;
    function SetBlipCoords(blip: number, posX: number, posY: number, posZ: number): void;
    function SetBlipDisplay(blip: number, displayId: number): void;
    function SetBlipDisplayIndicatorOnBlip(blip: number, toggle: boolean): void;
    function N_0xc4278f70131baa6d(blip: number, toggle: boolean): void;
    function SetBlipFade(blip: number, opacity: number, duration: number): void;
    function SetBlipFlashInterval(blip: number, interval: number): void;
    function SetBlipFlashTimer(blip: number, duration: number): void;
    function SetBlipFlashes(blip: number, toggle: boolean): void;
    function SetBlipFlashesAlternate(blip: number, toggle: boolean): void;
    function SetBlipHiddenOnLegend(blip: number, toggle: boolean): void;
    function N_0x54318c915d27e4ce(blip: number, toggle: boolean): void;
    function SetBlipHighDetail(blip: number, toggle: boolean): void;
    function SetBlipNameFromTextFile(blip: number, gxtEntry: string): void;
    function SetBlipNameToPlayerName(blip: number, player: number): void;
    function SetBlipPriority(blip: number, priority: number): void;
    function SetBlipRotation(blip: number, rotation: number): void;
    function SetBlipRoute(blip: number, enabled: boolean): void;
    function SetBlipRouteColour(blip: number, colour: number): void;
    function SetBlipScale(blip: number, scale: number): void;
    function SetBlipScaleTransformation(blip: number, xScale: number, yScale: number): void;
    function SetBlipSecondaryColour(blip: number, r: number, g: number, b: number): void;
    function SetBlipShowCone(blip: number, toggle: boolean): void;
    function SetBlipShrink(blip: number, toggle: boolean): void;
    function N_0x2b6d467dab714e8d(blip: number, toggle: boolean): void;
    function SetBlipSprite(blip: number, spriteId: number): void;
    function SetBlipSquaredRotation(blip: number, heading: number): void;
    function N_0xa8b6afdac320ac87(blip: number, heading: number): void;
    function SetBlockingOfNonTemporaryEvents(ped: number, toggle: boolean): void;
    function SetBoatAnchor(vehicle: number, toggle: boolean): void;
    function SetBoatBoomPositionRatio(vehicle: number, ratio: number): void;
    function N_0xf488c566413b4232(vehicle: number, ratio: number): void;
    function SetBoatDisableAvoidance(vehicle: number, p1: boolean): void;
    function N_0x0a6a279f3aa4fd70(vehicle: number, p1: boolean): void;
    function SetBoatFrozenWhenAnchored(vehicle: number, toggle: boolean): void;
    function N_0xe3ebaae484798530(vehicle: number, toggle: boolean): void;
    function SetBoatIsSinking(vehicle: number): void;
    function N_0xbd32e46aa95c1dd2(vehicle: number): void;
    function SetBoatSinking(vehicle: number): void;
    function SetBoatMovementResistance(vehicle: number, value: number): void;
    function N_0xe842a9398079bd82(vehicle: number, value: number): void;
    function SetBoatAnchorBuoyancyCoefficient(vehicle: number, value: number): void;
    function SetBoatSinksWhenWrecked(vehicle: number, toggle: boolean): void;
    function N_0x8f719973e1445ba2(vehicle: number, toggle: boolean): void;
    function SetBoatExplodesOnWreckedAction(vehicle: number, toggle: boolean): void;
    function SetCalmingQuadBounds(waterQuad: number, minX: number, minY: number, maxX: number, maxY: number): boolean;
    function SetCalmingQuadDampening(calmingQuad: number, dampening: number): boolean;
    function SetCamActive(cam: number, active: boolean): void;
    function SetCamActiveWithInterp(
        camTo: number,
        camFrom: number,
        duration: number,
        easeLocation: number,
        easeRotation: number
    ): void;
    function SetCamAffectsAiming(cam: number, toggle: boolean): void;
    function SetCamAnimCurrentPhase(cam: number, phase: number): void;
    function SetCamCoord(cam: number, posX: number, posY: number, posZ: number): void;
    function SetCamDebugName(camera: number, name: string): void;
    function SetCamDofFnumberOfLens(camera: number, p1: number): void;
    function N_0x7dd234d6f3914c5b(camera: number, p1: number): void;
    function SetCamDofFocalLengthMultiplier(camera: number, multiplier: number): void;
    function N_0x47b595d60664cffa(camera: number, multiplier: number): void;
    function SetCamDofFocusDistanceBias(camera: number, p1: number): void;
    function N_0xc669eea5d031b7de(camera: number, p1: number): void;
    function SetCamDofMaxNearInFocusDistance(camera: number, p1: number): void;
    function N_0xc3654a441402562d(camera: number, p1: number): void;
    function SetCamDofMaxNearInFocusDistanceBlendLevel(camera: number, p1: number): void;
    function N_0x2c654b4943bddf7c(camera: number, p1: number): void;
    function SetCamDofPlanes(cam: number, p1: number, p2: number, p3: number, p4: number): void;
    function SetCamDofStrength(cam: number, dofStrength: number): void;
    function SetCamEffect(p0: number): void;
    function SetCamFarClip(cam: number, farClip: number): void;
    function SetCamFarDof(cam: number, farDOF: number): void;
    function SetCamFov(cam: number, fieldOfView: number): void;
    function SetCamInheritRollVehicle(cam: number, p1: boolean): void;
    function SetCamMotionBlurStrength(cam: number, strength: number): void;
    function SetCamNearClip(cam: number, nearClip: number): void;
    function SetCamNearDof(cam: number, nearDOF: number): void;
    function SetCamParams(
        cam: number,
        posX: number,
        posY: number,
        posZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        fieldOfView: number,
        transitionSpeed: number,
        p9: number,
        p10: number,
        rotationOrder: number
    ): void;
    function SetCamRot(cam: number, rotX: number, rotY: number, rotZ: number, rotationOrder: number): void;
    function SetCamShakeAmplitude(cam: number, amplitude: number): void;
    function SetCamSplineDuration(cam: number, timeDuration: number): void;
    function SetCamSplineNodeEase(cam: number, p1: number, p2: number, p3: number): void;
    function N_0x83b8201ed82a9a2d(cam: number, p1: number, p2: number, p3: number): void;
    function SetCamSplineNodeExtraFlags(cam: number, p1: number, flags: number): void;
    function N_0x7bf1a54ae67ac070(cam: number, p1: number, flags: number): void;
    function SetCamSplineNodeVelocityScale(cam: number, p1: number, scale: number): void;
    function N_0xa6385deb180f319f(cam: number, p1: number, scale: number): void;
    function SetCamSplinePhase(cam: number, p1: number): void;
    function SetCamSplineSmoothingStyle(cam: number, smoothingStyle: number): void;
    function N_0xd1b0f412f109ea5d(cam: number, smoothingStyle: number): void;
    function SetCamUseShallowDofMode(cam: number, toggle: boolean): void;
    function SetCamViewModeForContext(context: number, viewMode: number): void;
    function N_0x2a2173e46daecd12(context: number, viewMode: number): void;
    function SetCamberedWheelsDisabled(vehicle: number, toggle: boolean): void;
    function N_0x1201e8a3290a3b98(vehicle: number, toggle: boolean): void;
    function SetCanAttackFriendly(ped: number, toggle: boolean, p2: boolean): void;
    function SetCanAutoVaultOnEntity(entity: number, toggle: boolean): void;
    function N_0xe12abe5e3a389a6c(entity: number, toggle: boolean): void;
    function SetCanClimbOnEntity(entity: number, toggle: boolean): void;
    function N_0xa80ae305e0a3044f(entity: number, toggle: boolean): void;
    function SetCanPedEquipAllWeapons(ped: number, toggle: boolean): void;
    function N_0xeff296097ff1e509(ped: number, toggle: boolean): void;
    function SetCanPedEquipWeapon(ped: number, weaponHash: number, toggle: boolean): void;
    function N_0xb4771b9aaf4e68e4(ped: number, weaponHash: number, toggle: boolean): void;
    function SetCanPedSelectWeapon(ped: number, weaponHash: number, toggle: boolean): void;
    function SetCanResprayVehicle(vehicle: number, state: boolean): void;
    function SetCarBootOpen(vehicle: number): void;
    function N_0xfc40cbf7b90ca77c(vehicle: number): void;
    function SetCarHighSpeedBumpSeverityMultiplier(multiplier: number): void;
    function N_0x84fd40f56075e816(multiplier: number): void;
    function SetCargobobForceDontDetachVehicle(cargobob: number, toggle: boolean): void;
    function N_0x571feb383f629926(cargobob: number, toggle: boolean): void;
    function SetCargobobHookCanDetach(cargobob: number, toggle: boolean): void;
    function SetCargobobHookCanAttach(vehicle: number, toggle: boolean): void;
    function N_0x94a68da412c4007d(vehicle: number, toggle: boolean): void;
    function SetCargobobPickupMagnetActive(cargobob: number, isActive: boolean): void;
    function CargobobMagnetGrabVehicle(cargobob: number, isActive: boolean): void;
    function SetCargobobPickupMagnetEffectRadius(vehicle: number, p1: number): void;
    function N_0xa17bad153b51547e(vehicle: number, p1: number): void;
    function SetCargobobPickupMagnetFalloff(vehicle: number, p1: number): void;
    function N_0x685d5561680d088b(vehicle: number, p1: number): void;
    function SetCargobobPickupMagnetPullRopeLength(cargobob: number, p1: number): void;
    function N_0x6d8eac07506291fb(cargobob: number, p1: number): void;
    function SetCargobobPickupMagnetPullStrength(cargobob: number, p1: number): void;
    function N_0xed8286f71a819baa(cargobob: number, p1: number): void;
    function SetCargobobPickupMagnetReducedFalloff(cargobob: number, p1: number): void;
    function N_0x66979acf5102fd2f(cargobob: number, p1: number): void;
    function SetCargobobPickupMagnetReducedStrength(cargobob: number, vehicle: number): void;
    function N_0xe301bd63e9e13cf0(cargobob: number, vehicle: number): void;
    function SetCargobobPickupMagnetStrength(cargobob: number, strength: number): void;
    function N_0xbcbfcd9d1dac19e2(cargobob: number, strength: number): void;
    function SetCargobobPickupRopeDampingMultiplier(cargobob: number, p1: number): void;
    function N_0xcf1182f682f65307(cargobob: number, p1: number): void;
    function SetCargobobPickupRopeType(vehicle: number, state: number): void;
    function N_0x0d5f65a8f4ebdab5(vehicle: number, state: number): void;
    function SetCgAtBoundcenter(entity: number): void;
    function SetCgoffset(entity: number, x: number, y: number, z: number): void;
    function SetCheckpointCylinderHeight(
        checkpoint: number,
        nearHeight: number,
        farHeight: number,
        radius: number
    ): void;
    function SetCheckpointIconHeight(checkpoint: number, height_multiplier: number): void;
    function N_0x4b5b4da5d79f1943(checkpoint: number, height_multiplier: number): void;
    function SetCheckpointScale(checkpoint: number, height_multiplier: number): void;
    function SetCheckpointIconScale(checkpoint: number, scale: number): void;
    function N_0x44621483ff966526(checkpoint: number, scale: number): void;
    function SetCheckpointRgba(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
    function SetCheckpointRgba2(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
    function SetCheckpointIconRgba(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
    function SetCinematicButtonActive(p0: boolean): void;
    function SetCinematicCamShakeAmplitude(p0: number): void;
    function SetCinematicModeActive(toggle: boolean): void;
    function SetCinematicNewsChannelActiveThisUpdate(): void;
    function N_0xdc9da9e8789f5246(): void;
    function SetClockDate(day: number, month: number, year: number): void;
    function SetClockTime(hour: number, minute: number, second: number): void;
    function SetCloudsAlpha(opacity: number): void;
    function N_0xf36199225d6d8c86(opacity: number): void;
    function SetCloudHatOpacity(opacity: number): void;
    function SetColourOfNextTextComponent(hudColor: number): void;
    function N_0x39bbf623fc803eac(hudColor: number): void;
    function SetNotificationColorNext(hudColor: number): void;
    function SetCombatFloat(ped: number, combatType: number, p2: number): void;
    function SetControlLightEffectColor(padIndex: number, red: number, green: number, blue: number): void;
    function N_0x8290252fff36acb5(padIndex: number, red: number, green: number, blue: number): void;
    function SetControlGroupColor(padIndex: number, red: number, green: number, blue: number): void;
    function SetControlNormal(padIndex: number, control: number, amount: number): boolean;
    function N_0xe8a25867fba3b05e(padIndex: number, control: number, amount: number): boolean;
    function SetConvertibleRoof(vehicle: number, toggle: boolean): void;
    function SetConvertibleRoofLatchState(vehicle: number, state: boolean): void;
    function N_0x1a78ad3d8240536f(vehicle: number, state: boolean): void;
    function SetCreateRandomCops(toggle: boolean): void;
    function SetCreateRandomCopsNotOnScenarios(toggle: boolean): void;
    function SetCreateRandomCopsOnScenarios(toggle: boolean): void;
    function SetCreateWeaponObjectLightSource(object: number, toggle: boolean): void;
    function N_0xbce595371a5fbaaf(object: number, toggle: boolean): void;
    function SetCreditsActive(toggle: boolean): void;
    function SetCurrentPedVehicleWeapon(ped: number, weaponHash: number): boolean;
    function SetCurrentPedWeapon(ped: number, weaponHash: number, bForceInHand: boolean): void;
    function SetCurrentPlayerTcmodifier(modifierName: string): void;
    function N_0xbbf327ded94e4deb(modifierName: string): void;
    function SetCursorLocation(x: number, y: number): boolean;
    function N_0xfc695459d4d0e219(x: number, y: number): boolean;
    function SetCustomRadioTrackList(radioStation: string, trackListName: string, p2: boolean): void;
    function N_0x4e404a9361f75bb2(radioStation: string, trackListName: string, p2: boolean): void;
    function SetCutsceneAudioOverride(name: string): void;
    function SetCutsceneCanBeSkipped(p0: boolean): void;
    function N_0x41faa8fb2ece8720(p0: boolean): void;
    function SetCutsceneEntityStreamingFlags(cutsceneEntName: string, p1: number, p2: number): void;
    function N_0x4c61c75bee8184c2(cutsceneEntName: string, p1: number, p2: number): void;
    function SetCutsceneFadeValues(p0: boolean, p1: boolean, p2: boolean, p3: boolean): void;
    function SetCutsceneOrigin(x: number, y: number, z: number, heading: number, p4: number): void;
    function SetCutscenePedComponentVariation(
        cutsceneEntName: string,
        componentId: number,
        drawableId: number,
        textureId: number,
        modelHash: number
    ): void;
    function SetCutscenePedComponentVariationFromPed(cutsceneEntName: string, ped: number, modelHash: number): void;
    function N_0x2a56c06ebef2b0d9(cutsceneEntName: string, ped: number, modelHash: number): void;
    function SetCutscenePedPropVariation(
        cutsceneEntName: string,
        componentId: number,
        drawableId: number,
        textureId: number,
        modelHash: number
    ): void;
    function N_0x0546524ade2e9723(
        cutsceneEntName: string,
        componentId: number,
        drawableId: number,
        textureId: number,
        modelHash: number
    ): void;
    function SetCutsceneTriggerArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function SetDamping(entity: number, vertex: number, value: number): void;
    function SetDebugLinesAndSpheresDrawingActive(enabled: boolean): void;
    function SetDecisionMaker(ped: number, name: number): void;
    function SetDeepOceanScaler(intensity: number): void;
    function N_0xb96b00e976be977f(intensity: number): void;
    function SetWavesIntensity(intensity: number): void;
    function SetCurrentIntensity(intensity: number): void;
    function SetDefaultVehicleNumberPlateTextPattern(plateIndex: number, pattern: string): void;
    function SetDeployHeliStubWings(vehicle: number, deploy: boolean, p2: boolean): void;
    function N_0xb251e0b33e58b424(vehicle: number, deploy: boolean, p2: boolean): void;
    function SetDirectorModeClearTriggeredFlag(): void;
    function N_0x2632482fd6b9ab87(): void;
    function SetDisableAmbientMeleeMove(player: number, toggle: boolean): void;
    function SetDisableBreaking(object: number, toggle: boolean): void;
    function SetDisableDecalRenderingThisFrame(): void;
    function N_0x4b5cfc83122df602(): void;
    function SetDisableFragDamage(object: number, toggle: boolean): void;
    function SetDisableHoverModeFlight(vehicle: number, toggle: boolean): void;
    function SetVehicleHoverTransformActive(vehicle: number, toggle: boolean): void;
    function SetDisablePretendOccupants(vehicle: number, toggle: boolean): void;
    function N_0x25367de49d64cf16(vehicle: number, toggle: boolean): void;
    function SetDisableRandomTrainsThisFrame(toggle: boolean): void;
    function N_0xd4b8e3d1917bc86b(toggle: boolean): void;
    function SetSomethingMultiplierThisFrame(toggle: boolean): void;
    function SetDisableSuperdummyMode(vehicle: number, p1: boolean): void;
    function N_0xb088e9a47ae6edd5(vehicle: number, p1: boolean): void;
    function SetDisableTurretMovementThisFrame(vehicle: number, turretIdx: number): void;
    function N_0xe615bb7a7752c76a(vehicle: number, turretIdx: number): void;
    function SetDisableTurretMovement(vehicle: number, turretIdx: number): void;
    function SetDisableVehicleEngineFires(vehicle: number, toggle: boolean): void;
    function N_0x91a0bd635321f145(vehicle: number, toggle: boolean): void;
    function SetDisableVehicleFlightNozzlePosition(vehicle: number, direction: boolean): void;
    function SetPlaneVtolAnimationDisabled(vehicle: number, direction: boolean): void;
    function SetDisableVehiclePetrolTankDamage(vehicle: number, toggle: boolean): void;
    function SetDisableVehiclePetrolTankFires(vehicle: number, toggle: boolean): void;
    function N_0x465bf26ab9684352(vehicle: number, toggle: boolean): void;
    function SetDisableVehicleUnk(toggle: boolean): void;
    function SetDisableVehicleUnk_2(toggle: boolean): void;
    function SetDisableVehicleWindowCollisions(vehicle: number, toggle: boolean): void;
    function N_0x1087bc8ec540daeb(vehicle: number, toggle: boolean): void;
    function SetDiscordAppId(appId: string): void;
    function SetDiscordRichPresenceAction(index: number, label: string, url: string): void;
    function SetDiscordRichPresenceAsset(assetName: string): void;
    function SetDiscordRichPresenceAssetSmall(assetName: string): void;
    function SetDiscordRichPresenceAssetSmallText(text: string): void;
    function SetDiscordRichPresenceAssetText(text: string): void;
    function SetDispatchCopsForPlayer(player: number, toggle: boolean): void;
    function SetDispatchIdealSpawnDistance(p0: number): void;
    function SetDispatchSpawnLocation(x: number, y: number, z: number): void;
    function N_0xd10f442036302d50(x: number, y: number, z: number): void;
    function SetDispatchTimeBetweenSpawnAttempts(p0: number, p1: number): void;
    function SetDispatchTimeBetweenSpawnAttemptsMultiplier(p0: number, p1: number): void;
    function SetDistantCarsEnabled(toggle: boolean): void;
    function N_0xf796359a959df65d(toggle: boolean): void;
    function DisplayDistantVehicles(toggle: boolean): void;
    function SetDitchPoliceModels(toggle: boolean): void;
    function SetDrawOrigin(x: number, y: number, z: number, p3: number): void;
    function SetDriftTyresEnabled(vehicle: number, toggle: boolean): void;
    function SetDriveTaskCruiseSpeed(driver: number, cruiseSpeed: number): void;
    function SetDriveTaskDrivingStyle(ped: number, drivingStyle: number): void;
    function SetDriveTaskMaxCruiseSpeed(p0: number, p1: number): void;
    function SetDrivebyTaskTarget(
        shootingPed: number,
        targetPed: number,
        targetVehicle: number,
        x: number,
        y: number,
        z: number
    ): void;
    function SetDriverAbility(driver: number, ability: number): void;
    function SetDriverAggressiveness(driver: number, aggressiveness: number): void;
    function SetDriverRacingModifier(driver: number, modifier: number): void;
    function N_0xded5af5a0ea4b297(driver: number, modifier: number): void;
    function SetDuiUrl(duiObject: number, url: string): void;
    function SetEmitterRadioStation(emitterName: string, radioStation: string): void;
    function SetEnableArenaPropPhysics(entity: number, toggle: boolean, p2: number): void;
    function N_0x911024442f4898f0(entity: number, toggle: boolean, p2: number): void;
    function SetEnableArenaPropPhysicsOnPed(entity: number, toggle: boolean, p2: number, ped: number): void;
    function N_0xb20834a7dd3d8896(entity: number, toggle: boolean, p2: number, ped: number): void;
    function SetEnableBoundAnkles(ped: number, toggle: boolean): void;
    function SetEnableHandcuffs(ped: number, toggle: boolean): void;
    function SetEnablePedEnveffScale(ped: number, toggle: boolean): void;
    function SetEnableScuba(ped: number, toggle: boolean): void;
    function SetEnableScubaGearLight(ped: number, toggle: boolean): void;
    function SetEnableVehicleSlipstreaming(toggle: boolean): void;
    function N_0xe6c0c80b8c867537(toggle: boolean): void;
    function SetEntityAlpha(entity: number, alphaLevel: number, skin: boolean): void;
    function SetEntityAlwaysPrerender(entity: number, toggle: boolean): void;
    function SetEntityAngularVelocity(entity: number, x: number, y: number, z: number): void;
    function N_0x8339643499d1222e(entity: number, x: number, y: number, z: number): void;
    function SetEntityAnimCurrentTime(entity: number, animDictionary: string, animName: string, time: number): void;
    function SetEntityAnimSpeed(
        entity: number,
        animDictionary: string,
        animName: string,
        speedMultiplier: number
    ): void;
    function SetEntityAsMissionEntity(entity: number, p1: boolean, p2: boolean): void;
    function SetEntityAsNoLongerNeeded(entity: number): void;
    function SetEntityCanBeDamaged(entity: number, toggle: boolean): void;
    function SetEntityCanBeDamagedByRelationshipGroup(entity: number, bCanBeDamaged: boolean, relGroup: number): void;
    function SetEntityCanBeTargetedWithoutLos(entity: number, toggle: boolean): void;
    function SetEntityCleanupByEngine(entity: number, toggle: boolean): void;
    function N_0x3910051ccecdb00c(entity: number, toggle: boolean): void;
    function SetEntityRegister(entity: number, toggle: boolean): void;
    function SetEntitySomething(entity: number, toggle: boolean): void;
    function SetEntityCollision(entity: number, toggle: boolean, keepPhysics: boolean): void;
    function SetEntityCompletelyDisableCollision(entity: number, toggle: boolean, keepPhysics: boolean): void;
    function N_0x9ebc85ed0fffe51c(entity: number, toggle: boolean, keepPhysics: boolean): void;
    function SetEntityCollision_2(entity: number, toggle: boolean, keepPhysics: boolean): void;
    function SetEntityCoords(
        entity: number,
        xPos: number,
        yPos: number,
        zPos: number,
        alive: boolean,
        deadFlag: boolean,
        ragdollFlag: boolean,
        clearArea: boolean
    ): void;
    function SetEntityCoordsNoOffset(
        entity: number,
        xPos: number,
        yPos: number,
        zPos: number,
        alive: boolean,
        deadFlag: boolean,
        ragdollFlag: boolean
    ): void;
    function SetEntityCoordsWithoutPlantsReset(
        entity: number,
        xPos: number,
        yPos: number,
        zPos: number,
        alive: boolean,
        deadFlag: boolean,
        ragdollFlag: boolean,
        clearArea: boolean
    ): void;
    function SetEntityCoords_2(
        entity: number,
        xPos: number,
        yPos: number,
        zPos: number,
        alive: boolean,
        deadFlag: boolean,
        ragdollFlag: boolean,
        clearArea: boolean
    ): void;
    function SetEntityDecalsDisabled(entity: number, p1: boolean): void;
    function N_0x2c2e3dc128f44309(entity: number, p1: boolean): void;
    function SetEntityDrawOutline(entity: number, enabled: boolean): void;
    function SetEntityDrawOutlineColor(red: number, green: number, blue: number, alpha: number): void;
    function SetEntityDrawOutlineShader(shader: number): void;
    function SetEntityDynamic(entity: number, toggle: boolean): void;
    function SetEntityHasGravity(entity: number, toggle: boolean): void;
    function SetEntityHeading(entity: number, heading: number): void;
    function SetEntityHealth(entity: number, health: number): void;
    function SetEntityIconColor(entity: number, red: number, green: number, blue: number, alpha: number): void;
    function SetEntityIconVisibility(entity: number, toggle: boolean): void;
    function SetEntityInvincible(entity: number, toggle: boolean): void;
    function SetEntityIsTargetPriority(entity: number, p1: boolean, p2: number): void;
    function SetEntityLights(entity: number, toggle: boolean): void;
    function SetEntityLoadCollisionFlag(entity: number, toggle: boolean): void;
    function SetEntityLocallyInvisible(entity: number): void;
    function SetEntityLocallyVisible(entity: number): void;
    function SetEntityLodDist(entity: number, value: number): void;
    function SetEntityMatrix(
        entity: number,
        forwardX: number,
        forwardY: number,
        forwardZ: number,
        rightX: number,
        rightY: number,
        rightZ: number,
        upX: number,
        upY: number,
        upZ: number,
        atX: number,
        atY: number,
        atZ: number
    ): void;
    function SetEntityMaxHealth(entity: number, value: number): void;
    function SetEntityMaxSpeed(entity: number, speed: number): void;
    function SetEntityMotionBlur(entity: number, toggle: boolean): void;
    function SetEntityNoCollisionEntity(entity1: number, entity2: number, thisFrameOnly: boolean): void;
    function SetEntityOnlyDamagedByPlayer(entity: number, toggle: boolean): void;
    function SetEntityOnlyDamagedByRelationshipGroup(entity: number, p1: boolean, relationshipHash: number): void;
    function SetEntityProofUnk(entity: number, toggle: boolean): void;
    function N_0x15f944730c832252(entity: number, toggle: boolean): void;
    function SetEntityProofs(
        entity: number,
        bulletProof: boolean,
        fireProof: boolean,
        explosionProof: boolean,
        collisionProof: boolean,
        meleeProof: boolean,
        steamProof: boolean,
        p7: boolean,
        drownProof: boolean
    ): void;
    function SetEntityQuaternion(entity: number, x: number, y: number, z: number, w: number): void;
    function SetEntityRecordsCollisions(entity: number, toggle: boolean): void;
    function SetEntityRenderScorched(entity: number, toggle: boolean): void;
    function SetEntityRotation(
        entity: number,
        pitch: number,
        roll: number,
        yaw: number,
        rotationOrder: number,
        p5: boolean
    ): void;
    function SetEntityTrafficlightOverride(entity: number, state: number): void;
    function SetEntityVelocity(entity: number, x: number, y: number, z: number): void;
    function SetEntityVisible(entity: number, toggle: boolean, unk: boolean): void;
    function SetEntityVisibleInCutscene(p0: number, p1: boolean, p2: boolean): void;
    function SetEveryoneIgnorePlayer(player: number, toggle: boolean): void;
    function SetExclusiveScenarioGroup(scenarioGroup: string): void;
    function SetExplosiveAmmoThisFrame(player: number): void;
    function SetExplosiveMeleeThisFrame(player: number): void;
    function SetExtraTimecycleModifier(modifierName: string): void;
    function SetExtraTimecycleModifierStrength(strength: number): void;
    function N_0x2c328af17210f009(strength: number): void;
    function SetFacialClipsetOverride(ped: number, animDict: string): void;
    function N_0x5687c7f05b39e401(ped: number, animDict: string): void;
    function SetFacialIdleAnimOverride(ped: number, animName: string, animDict: string): void;
    function SetFadeInAfterDeathArrest(toggle: boolean): void;
    function SetFadeInAfterLoad(toggle: boolean): void;
    function SetFadeOutAfterArrest(toggle: boolean): void;
    function SetFadeOutAfterDeath(toggle: boolean): void;
    function SetFakeWantedLevel(fakeWantedLevel: number): void;
    function SetFarDrawVehicles(toggle: boolean): void;
    function SetFireAmmoThisFrame(player: number): void;
    function SetFireSpreadRate(p0: number): void;
    function SetFirstPersonAimCamNearClipThisUpdate(distance: number): void;
    function N_0x0af7b437918103b3(distance: number): void;
    function SetFirstPersonCamNearClip(distance: number): void;
    function SetFirstPersonAimCamZoomFactor(zoomFactor: number): void;
    function N_0x70894bd0915c5bca(zoomFactor: number): void;
    function SetFirstPersonCamPitchRange(minAngle: number, maxAngle: number): void;
    function N_0xbcfc632db7673bf0(minAngle: number, maxAngle: number): void;
    function SetFlash(p0: number, p1: number, fadeIn: number, duration: number, fadeOut: number): void;
    function SetFlashLightEnabled(ped: number, toggle: boolean): void;
    function SetFlashLightFadeDistance(distance: number): number;
    function SetFlashLightKeepOnWhileMoving(state: boolean): void;
    function SetFloatingHelpTextScreenPosition(hudIndex: number, x: number, y: number): void;
    function N_0x7679cc1bcebe3d4c(hudIndex: number, x: number, y: number): void;
    function SetFloatingHelpTextStyle(
        hudIndex: number,
        style: number,
        hudColor: number,
        alpha: number,
        arrowPosition: number,
        boxOffset: number
    ): void;
    function N_0x788e7fd431bd67f1(
        hudIndex: number,
        style: number,
        hudColor: number,
        alpha: number,
        arrowPosition: number,
        boxOffset: number
    ): void;
    function SetFloatingHelpTextToEntity(hudIndex: number, entity: number, offsetX: number, offsetY: number): void;
    function N_0xb094bc1db4018240(hudIndex: number, entity: number, offsetX: number, offsetY: number): void;
    function SetFloatingHelpTextWorldPosition(hudIndex: number, x: number, y: number, z: number): void;
    function N_0x784ba7e0eceb4178(hudIndex: number, x: number, y: number, z: number): void;
    function SetFlyCamCoordAndConstrain(cam: number, x: number, y: number, z: number): void;
    function N_0xc91c6c55199308ca(cam: number, x: number, y: number, z: number): void;
    function SetFlyCamHorizontalResponse(cam: number, p1: number, p2: number, p3: number): void;
    function N_0x503f5920162365b2(cam: number, p1: number, p2: number, p3: number): void;
    function SetFlyCamMaxHeight(cam: number, height: number): void;
    function N_0xf9d02130ecdd1d77(cam: number, height: number): void;
    function SetCameraRange(cam: number, height: number): void;
    function SetFlyCamVerticalSpeedMultiplier(cam: number, p1: number, p2: number, p3: number): void;
    function N_0xe827b9382cfb41ba(cam: number, p1: number, p2: number, p3: number): void;
    function SetFlyThroughWindscreenParams(
        vehMinSpeed: number,
        unkMinSpeed: number,
        unkModifier: number,
        minDamage: number
    ): boolean;
    function SetFocusEntity(entity: number): void;
    function SetFocusPosAndVel(
        x: number,
        y: number,
        z: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number
    ): void;
    function SetFocusArea(x: number, y: number, z: number, offsetX: number, offsetY: number, offsetZ: number): void;
    function SetFollowPedCamThisUpdate(camName: string, p1: number): boolean;
    function SetFollowPedCamCutsceneChat(camName: string, p1: number): boolean;
    function SetFollowPedCamViewMode(viewMode: number): void;
    function SetFollowTurretSeatCam(seatIndex: number): void;
    function N_0x5c90cab09951a12f(seatIndex: number): void;
    function SetFollowVehicleCamViewMode(viewMode: number): void;
    function SetFollowVehicleCamZoomLevel(zoomLevel: number): void;
    function SetForceFootstepUpdate(ped: number, toggle: boolean): void;
    function N_0x129466ed55140f8d(ped: number, toggle: boolean): void;
    function SetForceHdVehicle(vehicle: number, toggle: boolean): void;
    function N_0x97ce68cb032583f0(vehicle: number, toggle: boolean): void;
    function SetForceObjectThisFrame(x: number, y: number, z: number, p3: number): void;
    function SetForcePedFootstepsTracks(toggle: boolean): void;
    function SetForcePlayerToJump(player: number): void;
    function N_0xa1183bcfee0f93d1(player: number): void;
    function SetForceStepType(ped: number, p1: boolean, _type: number, p3: number): void;
    function N_0xcb968b53fc7f916d(ped: number, p1: boolean, _type: number, p3: number): void;
    function SetForceVehicleTrails(toggle: boolean): void;
    function SetForcedBoatLocationWhenAnchored(vehicle: number, toggle: boolean): void;
    function N_0xb28b1fe5bfadd7f5(vehicle: number, toggle: boolean): void;
    function SetForkliftForkHeight(vehicle: number, height: number): void;
    function N_0x37ebbf3117bd6a25(vehicle: number, height: number): void;
    function SetFrontendActive(active: boolean): void;
    function SetFrontendRadioActive(active: boolean): void;
    function SetGamePaused(toggle: boolean): void;
    function SetGamePausesForStreaming(toggle: boolean): void;
    function SetGameplayCamFollowPedThisUpdate(ped: number): void;
    function N_0x8bbacbf51da047a8(ped: number): void;
    function SetGameplayCamHash(camName: string): void;
    function N_0x425a920fdb9a0dda(camName: string): void;
    function SetGameplayCamRawPitch(pitch: number): void;
    function SetGameplayCamRawYaw(yaw: number): void;
    function SetGameplayCamRelativeHeading(heading: number): void;
    function SetGameplayCamRelativePitch(angle: number, scalingFactor: number): void;
    function SetGameplayCamRelativeRotation(roll: number, pitch: number, yaw: number): void;
    function N_0x48608c3464f58ab4(roll: number, pitch: number, yaw: number): void;
    function SetGameplayCamShakeAmplitude(amplitude: number): void;
    function SetGameplayCamVehicleCamera(vehicleName: string): void;
    function N_0x21e253a7f8da5dfb(vehicleName: string): void;
    function SetGameplayCamVehicleCameraName(vehicleModel: number): void;
    function N_0x11fa5d3479c7dd47(vehicleModel: number): void;
    function SetGameplayCoordHint(
        x: number,
        y: number,
        z: number,
        duration: number,
        blendOutDuration: number,
        blendInDuration: number,
        unk: number
    ): void;
    function SetGameplayEntityHint(
        entity: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        p4: boolean,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): void;
    function SetGameplayHintAnimCloseup(toggle: boolean): void;
    function GetIsMultiplayerBrief(toggle: boolean): void;
    function N_0xe3433eadaaf7ee40(toggle: boolean): void;
    function SetGameplayHintAnimOffsetx(xOffset: number): void;
    function N_0x5d7b620dae436138(xOffset: number): void;
    function SetGameplayHintAnimOffsety(yOffset: number): void;
    function N_0xc92717ef615b6704(yOffset: number): void;
    function SetGameplayHintBaseOrbitPitchOffset(value: number): void;
    function N_0xd1f8363dfad03848(value: number): void;
    function SetGameplayHintAngle(value: number): void;
    function SetGameplayHintFollowDistanceScalar(value: number): void;
    function N_0xf8bdbf3d573049a1(value: number): void;
    function SetGameplayHintAnimOffsetz(value: number): void;
    function SetGameplayHintFov(FOV: number): void;
    function SetGameplayObjectHint(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: boolean,
        p5: number,
        p6: number,
        p7: number
    ): void;
    function SetGameplayPedHint(
        p0: number,
        x1: number,
        y1: number,
        z1: number,
        p4: boolean,
        duration: number,
        blendOutDuration: number,
        blendInDuration: number
    ): void;
    function SetGameplayVehicleHint(
        vehicle: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        p4: boolean,
        time: number,
        easeInTime: number,
        easeOutTime: number
    ): void;
    function SetGarbageTrucks(toggle: boolean): void;
    function SetGhostedEntityAlpha(alpha: number): void;
    function N_0x658500ae6d723a7e(alpha: number): void;
    function SetGlobalMinBirdFlightHeight(height: number): void;
    function SetGpsActive(active: boolean): void;
    function SetGpsCustomRouteRender(toggle: boolean, radarThickness: number, mapThickness: number): void;
    function N_0x900086f371220b6f(toggle: boolean, radarThickness: number, mapThickness: number): void;
    function SetGpsDisabledZone(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    function SetGpsDisabledZoneAtIndex(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        index: number
    ): void;
    function N_0xd0bc1c6fb18ee154(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        index: number
    ): void;
    function SetGpsFlags(p0: number, p1: number): void;
    function SetGpsFlashes(toggle: boolean): void;
    function SetGpsMultiRouteRender(toggle: boolean): void;
    function N_0x3dda37128dd1aca8(toggle: boolean): void;
    function SetGravityLevel(level: number): void;
    function SetGroupFormation(groupId: number, formationType: number): void;
    function SetGroupFormationSpacing(groupId: number, p1: number, p2: number, p3: number): void;
    function SetGroupSeparationRange(groupHandle: number, separationRange: number): void;
    function SetHandleRockstarMessageViaScript(toggle: boolean): void;
    function N_0xbfa0a56a817c6c7d(toggle: boolean): void;
    function SetHandlingField(vehicle: string, class_: string, fieldName: string, value: number): void;
    function SetHandlingFloat(vehicle: string, class_: string, fieldName: string, value: number): void;
    function SetHandlingInt(vehicle: string, class_: string, fieldName: string, value: number): void;
    function SetHandlingVector(vehicle: string, class_: string, fieldName: string): void;
    function SetHasContentUnlocksFlags(value: number): void;
    function N_0xdac073c7901f9e15(value: number): void;
    function SetHdArea(x: number, y: number, z: number, radius: number): void;
    function SetHeadBlendPaletteColor(ped: number, r: number, g: number, b: number, id: number): void;
    function N_0xcc9682b8951c5229(ped: number, r: number, g: number, b: number, id: number): void;
    function SetHealthHudDisplayValues(health: number, capacity: number, wasAdded: boolean): void;
    function N_0x3f5cc444dcaaa8f2(health: number, capacity: number, wasAdded: boolean): void;
    function SetHeliBladesFullSpeed(vehicle: number): void;
    function SetHeliBladesSpeed(vehicle: number, speed: number): void;
    function SetHeliCombatOffset(vehicle: number, x: number, y: number, z: number): void;
    function N_0x0a3f820a9a9a9ac5(vehicle: number, x: number, y: number, z: number): void;
    function SetHeliMainRotorHealth(vehicle: number, health: number): void;
    function N_0x4056ea1105f5abd7(vehicle: number, health: number): void;
    function SetHeliTailExplodeThrowDashboard(vehicle: number, p1: boolean): void;
    function WasCounterActivated(vehicle: number, p1: boolean): void;
    function N_0x3ec8bf18aa453fe9(vehicle: number, p1: boolean): void;
    function SetHeliTailRotorHealth(vehicle: number, health: number): void;
    function N_0xfe205f38aaa58e5b(vehicle: number, health: number): void;
    function SetHeliTurbulenceScalar(vehicle: number, p1: number): void;
    function N_0xe6f13851780394da(vehicle: number, p1: number): void;
    function SetHelicopterRollPitchYawMult(helicopter: number, multiplier: number): void;
    function SetHelpMessageTextStyle(style: number, hudColor: number, alpha: number, p3: number, p4: number): void;
    function N_0xb9c362babecddc7a(style: number, hudColor: number, alpha: number, p3: number, p4: number): void;
    function SetHidofOverride(
        p0: boolean,
        p1: boolean,
        nearplaneOut: number,
        nearplaneIn: number,
        farplaneOut: number,
        farplaneIn: number
    ): void;
    function N_0xba3d65906822bed5(
        p0: boolean,
        p1: boolean,
        nearplaneOut: number,
        nearplaneIn: number,
        farplaneOut: number,
        farplaneIn: number
    ): void;
    function SetHidofEnvBlurParams(
        p0: boolean,
        p1: boolean,
        nearplaneOut: number,
        nearplaneIn: number,
        farplaneOut: number,
        farplaneIn: number
    ): void;
    function SetHighFallTask(ped: number, duration: number, p2: number, p3: number): void;
    function SetHornEnabled(vehicle: number, toggle: boolean): void;
    function SetHoverModeWingRatio(vehicle: number, ratio: number): void;
    function SetSpecialflightWingRatio(vehicle: number, ratio: number): void;
    function SetHudComponentAlign(id: number, horizontalAlign: number, verticalAlign: number): void;
    function SetHudComponentPosition(id: number, x: number, y: number): void;
    function SetHudComponentSize(id: number, x: number, y: number): void;
    function SetHydraulicRaised(vehicle: number, toggle: boolean): void;
    function N_0x28b18377eb6e25f6(vehicle: number, toggle: boolean): void;
    function SetHydraulicWheelState(vehicle: number, state: number): void;
    function N_0x8ea86df356801c7d(vehicle: number, state: number): void;
    function SetHydraulicWheelStateTransition(
        vehicle: number,
        wheelId: number,
        state: number,
        value: number,
        p4: number
    ): void;
    function N_0xc24075310a8b9cd1(vehicle: number, wheelId: number, state: number, value: number, p4: number): void;
    function SetHydraulicWheelValue(vehicle: number, wheelId: number, value: number): void;
    function N_0x84ea99c62cb3ef0c(vehicle: number, wheelId: number, value: number): void;
    function SetHydraulicState(vehicle: number, wheelId: number, value: number): void;
    function SetIgnoreLowPriorityShockingEvents(player: number, toggle: boolean): void;
    function SetIgnoreNoGpsFlag(toggle: boolean): void;
    function SetIgnoreSecondaryRouteNodes(toggle: boolean): void;
    function N_0x1fc289a0c3ff470f(toggle: boolean): void;
    function SetIkTarget(
        ped: number,
        ikIndex: number,
        entityLookAt: number,
        boneLookAt: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        p7: number,
        blendInDuration: number,
        blendOutDuration: number
    ): void;
    function SetInVehicleCamStateThisUpdate(p0: number, p1: number): void;
    function N_0xe9ea16d6e54cdca4(p0: number, p1: number): void;
    function SetIncidentRequestedUnits(incidentId: number, dispatchService: number, numUnits: number): void;
    function N_0xb08b85d860e7ba3c(incidentId: number, dispatchService: number, numUnits: number): void;
    function SetIncidentUnk(incidentId: number, p1: number): void;
    function N_0xd261ba3e7e998072(incidentId: number, p1: number): void;
    function SetInitialPlayerStation(radioStation: string): void;
    function SetInputExclusive(padIndex: number, control: number): void;
    function SetInstancePriorityHint(flag: number): void;
    function SetUnkMapFlag(flag: number): void;
    function SetInstancePriorityMode(toggle: number): void;
    function EnableMpDlcMaps(toggle: number): void;
    function UseFreemodeMapBehavior(toggle: number): void;
    function LowerMapPropDensity(toggle: number): void;
    function SetInteriorActive(interiorID: number, toggle: boolean): void;
    function SetInteriorEntitySetColor(interior: number, entitySetName: string, color: number): void;
    function SetInteriorPropColor(interior: number, entitySetName: string, color: number): void;
    function SetInteriorPortalCornerPosition(
        interiorId: number,
        portalIndex: number,
        cornerIndex: number,
        posX: number,
        posY: number,
        posZ: number
    ): void;
    function SetInteriorPortalEntityFlag(
        interiorId: number,
        portalIndex: number,
        entityIndex: number,
        flag: number
    ): void;
    function SetInteriorPortalFlag(interiorId: number, portalIndex: number, flag: number): void;
    function SetInteriorPortalRoomFrom(interiorId: number, portalIndex: number, roomFrom: number): void;
    function SetInteriorPortalRoomTo(interiorId: number, portalIndex: number, roomTo: number): void;
    function SetInteriorRoomExtents(
        interiorId: number,
        roomIndex: number,
        bbMinX: number,
        bbMinY: number,
        bbMinZ: number,
        bbMaxX: number,
        bbMaxY: number,
        bbMaxZ: number
    ): void;
    function SetInteriorRoomFlag(interiorId: number, roomIndex: number, flag: number): void;
    function SetInteriorRoomTimecycle(interiorId: number, roomIndex: number, timecycleHash: number): void;
    function SetInteriorZoomLevelDecreased(toggle: boolean): void;
    function N_0x7ec8aba5e74b3d7a(toggle: boolean): void;
    function SetInteriorZoomLevelIncreased(toggle: boolean): void;
    function N_0x504dfe62a1692296(toggle: boolean): void;
    function SetIslandEnabled(islandName: string, toggle: boolean): void;
    function SetIslandHopperEnabled(islandName: string, toggle: boolean): void;
    function SetLastDrivenVehicle(vehicle: number): void;
    function N_0xacfb2463cc22bed2(vehicle: number): void;
    function SetLaunchControlEnabled(toggle: boolean): void;
    function N_0xaa6a6098851c396f(toggle: boolean): void;
    function SetLightsCutoffDistanceTweak(distance: number): void;
    function N_0xbc3cca5844452b06(distance: number): void;
    function SetLocalPlayerAsGhost(toggle: boolean): void;
    function SetLocalPlayerCanCollectPortablePickups(p0: boolean): void;
    function N_0x78857fc65cadb909(p0: boolean): void;
    function SetLocalPlayerCanUsePickupsWithThisModel(modelHash: number, toggle: boolean): void;
    function N_0x88eaec617cd26926(modelHash: number, toggle: boolean): void;
    function SetLocalPlayerInvisibleLocally(p0: boolean): void;
    function SetLocalPlayerVisibleInCutscene(p0: boolean, p1: boolean): void;
    function SetLocalPlayerVisibleLocally(p0: boolean): void;
    function SetMainPlayerBlipColour(color: number): void;
    function N_0x7b21e0bb01e8224a(color: number): void;
    function SetManualShutdownLoadingScreenNui(manualShutdown: boolean): void;
    function SetMapZoomDataLevel(
        index: number,
        zoomScale: number,
        zoomSpeed: number,
        scrollSpeed: number,
        tilesX: number,
        tilesY: number
    ): void;
    function SetMapdatacullboxEnabled(name: string, toggle: boolean): void;
    function N_0xaf12610c644a35c9(name: string, toggle: boolean): void;
    function SetMaxArmourHudDisplay(maximumValue: number): void;
    function N_0x06a320535f5f0248(maximumValue: number): void;
    function SetMaxHealthHudDisplay(maximumValue: number): void;
    function N_0x975d66a0bc17064c(maximumValue: number): void;
    function SetMaxNumPortablePickupsCarriedByPlayer(modelHash: number, p1: number): void;
    function N_0x0bf3b3bd47d79c08(modelHash: number, p1: number): void;
    function SetMaxWantedLevel(maxWantedLevel: number): void;
    function SetMicrophonePosition(
        p0: boolean,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        x3: number,
        y3: number,
        z3: number
    ): void;
    function SetMillisecondsPerGameMinute(value: number): void;
    function SetMinigameInProgress(toggle: boolean): void;
    function SetMinimapAltitudeIndicatorLevel(altitude: number, p1: boolean): void;
    function SetMinimapAttitudeIndicatorLevel(altitude: number, p1: boolean): void;
    function SetMinimapBlockWaypoint(toggle: boolean): void;
    function SetMinimapClipType(_type: number): void;
    function SetMinimapComponent(componentID: number, toggle: boolean, hudColor: number): number;
    function SetMinimapComponentPosition(
        name: string,
        alignX: string,
        alignY: string,
        posX: number,
        posY: number,
        sizeX: number,
        sizeY: number
    ): void;
    function SetMinimapFowRevealCoordinate(x: number, y: number, z: number): void;
    function N_0x0923dbf87dff735e(x: number, y: number, z: number): void;
    function SetMinimapGolfCourse(hole: number): void;
    function N_0x71bdb63dbaf8da59(hole: number): void;
    function SetMinimapGolfCourseOff(): void;
    function N_0x35edd5b2e3ff01c0(): void;
    function SetMinimapHideFow(toggle: boolean): void;
    function N_0xf8dee0a5600cbb93(toggle: boolean): void;
    function SetMinimapRevealed(toggle: boolean): void;
    function SetMinimapInPrologue(toggle: boolean): void;
    function SetDrawMapVisible(toggle: boolean): void;
    function SetNorthYanktonMap(toggle: boolean): void;
    function SetMinimapInSpectatorMode(toggle: boolean, ped: number): void;
    function KeyHudColour(toggle: boolean, ped: number): void;
    function SetMinimapOverlayDisplay(
        miniMap: number,
        x: number,
        y: number,
        xScale: number,
        yScale: number,
        alpha: number
    ): void;
    function SetMinimapSonarSweep(toggle: boolean): void;
    function SetMinimapSonarEnabled(toggle: boolean): void;
    function SetMissionFlag(toggle: boolean): void;
    function SetMissionName(p0: boolean, name: string): void;
    function SetMissionName_2(p0: boolean, name: string): void;
    function N_0xe45087d85f468bc2(p0: boolean, name: string): void;
    function SetMissionTrainAsNoLongerNeeded(p1: boolean): number;
    function SetMissionTrainCoords(train: number, x: number, y: number, z: number): void;
    function SetMobilePhonePosition(posX: number, posY: number, posZ: number): void;
    function SetMobilePhoneRadioState(state: boolean): void;
    function SetMobilePhoneRotation(rotX: number, rotY: number, rotZ: number, p3: number): void;
    function SetMobilePhoneScale(scale: number): void;
    function SetMobilePhoneUnk(toggle: boolean): void;
    function N_0x375a706a5c2fd084(toggle: boolean): void;
    function SetMobileRadioEnabledDuringGameplay(toggle: boolean): void;
    function SetModelAsNoLongerNeeded(model: number): void;
    function SetModelHeadlightConfiguration(
        modelHash: number,
        ratePerSecond: number,
        headlightRotation: number,
        invertRotation: boolean
    ): void;
    function SetMountedWeaponTarget(
        shootingPed: number,
        targetPed: number,
        targetVehicle: number,
        x: number,
        y: number,
        z: number
    ): void;
    function SetMouseCursorActiveThisFrame(): void;
    function ShowCursorThisFrame(): void;
    function SetMouseCursorSprite(spriteId: number): void;
    function N_0x8db8cffd58b62552(spriteId: number): void;
    function SetCursorSprite(spriteId: number): void;
    function SetMouseCursorVisibleInMenus(enable: boolean): void;
    function N_0x98215325a695e78a(enable: boolean): void;
    function SetMovementModeOverride(ped: number, name: string): void;
    function N_0x781de8fa214e87d2(ped: number, name: string): void;
    function SetMpGamerTagAlpha(gamerTagId: number, component: number, alpha: number): void;
    function N_0xd48fe545cd46f857(gamerTagId: number, component: number, alpha: number): void;
    function SetMpGamerTagBigText(gamerTagId: number, _string: string): void;
    function N_0x7b7723747ccb55b6(gamerTagId: number, _string: string): void;
    function SetMpGamerTagChatting(gamerTagId: number, _string: string): void;
    function SetMpGamerTagColour(gamerTagId: number, component: number, hudColorIndex: number): void;
    function N_0x613ed644950626ae(gamerTagId: number, component: number, hudColorIndex: number): void;
    function SetMpGamerTagDisablePlayerHealthSync(gamerTagId: number, toggle: boolean): void;
    function N_0xd29ec58c2f6b5014(gamerTagId: number, toggle: boolean): void;
    function SetMpGamerHealthBarDisplay(gamerTagId: number, toggle: boolean): void;
    function SetMpGamerTagHealthBarColour(gamerTagId: number, hudColorIndex: number): void;
    function N_0x3158c77a7e888ab4(gamerTagId: number, hudColorIndex: number): void;
    function SetMpGamerTagHealthBarColor(gamerTagId: number, hudColorIndex: number): void;
    function SetMpGamerTagMpBagLargeCount(gamerTagId: number, count: number): void;
    function N_0x9b9aa95688f78dd3(gamerTagId: number, count: number): void;
    function SetMpGamerTagUnk(gamerTagId: number, count: number): void;
    function SetMpGamerTagName(gamerTagId: number, _string: string): void;
    function N_0xdea2b8283baa3944(gamerTagId: number, _string: string): void;
    function SetMpGamerTagOverridePlayerHealth(gamerTagId: number, health: number, maximumHealth: number): void;
    function N_0x1563fe35e9928e67(gamerTagId: number, health: number, maximumHealth: number): void;
    function SetMpGamerHealthBarMax(gamerTagId: number, health: number, maximumHealth: number): void;
    function SetMpGamerTagUseVehicleHealth(gamerTagId: number, toggle: boolean): void;
    function N_0xa67f9c46d612b6f1(gamerTagId: number, toggle: boolean): void;
    function SetMpGamerTagIcons(gamerTagId: number, toggle: boolean): void;
    function SetMpGamerTagVisibility(gamerTagId: number, component: number, toggle: boolean): void;
    function N_0x63bb75abedc1f6a0(gamerTagId: number, component: number, toggle: boolean): void;
    function SetMpGamerTagVisibilityAll(gamerTagId: number, toggle: boolean): void;
    function N_0xee76ff7e6a0166b0(gamerTagId: number, toggle: boolean): void;
    function SetMpGamerTag_(gamerTagId: number, toggle: boolean): void;
    function SetMpGamerTag(gamerTagId: number, toggle: boolean): void;
    function SetMpGamerTagEnabled(gamerTagId: number, toggle: boolean): void;
    function SetMpGamerTagWantedLevel(gamerTagId: number, wantedlvl: number): void;
    function N_0xcf228e2aa03099c3(gamerTagId: number, wantedlvl: number): void;
    function SetMpGamerTagsUseVehicleBehavior(enabled: boolean): void;
    function SetMpGamerTagsVisibleDistance(distance: number): void;
    function SetMultiplayerBankCash(): void;
    function SetMultiplayerHudCash(p0: number, p1: number): void;
    function SetMultiplayerWalletCash(): void;
    function N_0xc2d15bef167e27bc(): void;
    function SetNetworkCutsceneEntities(toggle: boolean): void;
    function N_0xaaa553e7dd28a457(toggle: boolean): void;
    function SetNetworkEnableVehiclePositionCorrection(vehicle: number, toggle: boolean): void;
    function N_0x838da0936a24ed4d(vehicle: number, toggle: boolean): void;
    function SetNetworkIdAlwaysExistsForPlayer(netId: number, player: number, toggle: boolean): void;
    function N_0xa8a024587329f36a(netId: number, player: number, toggle: boolean): void;
    function SetNetworkIdSyncToPlayer(netId: number, player: number, toggle: boolean): void;
    function SetNetworkIdCanMigrate(netId: number, toggle: boolean): void;
    function SetNetworkIdExistsOnAllMachines(netId: number, toggle: boolean): void;
    function SetNetworkIdVisibleInCutscene(netId: number, p1: boolean, p2: boolean): void;
    function SetNetworkVehicleAsGhost(vehicle: number, toggle: boolean): void;
    function N_0x6274c4712850841e(vehicle: number, toggle: boolean): void;
    function SetNetworkObjectNonContact(vehicle: number, toggle: boolean): void;
    function SetNetworkVehiclePositionUpdateMultiplier(vehicle: number, multiplier: number): void;
    function N_0xa2a707979fe754dc(vehicle: number, multiplier: number): void;
    function SetNetworkVehicleBlenderDistanceMultiplier(vehicle: number, multiplier: number): void;
    function SetNetworkVehicleRespotTimer(netId: number, time: number): void;
    function SetNewWaypoint(x: number, y: number): void;
    function SetNextDesiredMoveState(p0: number): void;
    function SetNextPlayerTcmodifier(modifierName: string): void;
    function N_0xbf59707b3e5ed531(modifierName: string): void;
    function SetNightvision(toggle: boolean): void;
    function SetNoLoadingScreen(toggle: boolean): void;
    function SetNoiseoveride(toggle: boolean): void;
    function SetNoisinessoveride(value: number): void;
    function SetNuiFocus(hasFocus: boolean, hasCursor: boolean): void;
    function SetNuiFocusKeepInput(keepInput: boolean): void;
    function SetNumberOfParkedVehicles(value: number): void;
    function SetObjectAllowLowLodBuoyancy(object: number, toggle: boolean): void;
    function N_0x4d89d607cb3dd1d2(object: number, toggle: boolean): void;
    function SetObjectCanClimbOn(object: number, toggle: boolean): void;
    function SetObjectAsNoLongerNeeded(object: number): void;
    function SetObjectForceVehiclesToAvoid(object: number, toggle: boolean): void;
    function N_0x77f33f2ccf64b3aa(object: number, toggle: boolean): void;
    function SetObjectSomething(object: number, toggle: boolean): void;
    function SetObjectLightColor(object: number, p1: boolean, r: number, g: number, b: number): number;
    function SetObjectPhysicsParams(
        object: number,
        mass: number,
        gravityFactor: number,
        linearC: number,
        linearV: number,
        linearV2: number,
        angularC: number,
        angularV: number,
        angularV2: number,
        p9: number,
        maxAngSpeed: number,
        buoyancyFactor: number
    ): void;
    function SetObjectStuntPropDuration(object: number, duration: number): void;
    function N_0xdf6ca0330f2e737b(object: number, duration: number): void;
    function SetObjectStuntPropSpeedup(object: number, intensity: number): void;
    function N_0x96ee0eba0163df80(object: number, intensity: number): void;
    function SetObjectTargettable(object: number, targettable: boolean): void;
    function SetObjectTextureVariation(object: number, textureVariation: number): void;
    function N_0x971da0055324d033(object: number, textureVariation: number): void;
    function SetObjectTextureVariant(object: number, textureVariation: number): void;
    function SetOpenRearDoorsOnExplosion(vehicle: number, toggle: boolean): void;
    function N_0x1b212b26dd3c04df(vehicle: number, toggle: boolean): void;
    function SetOppressorTransformState(vehicle: number, extend: boolean): void;
    function N_0x544996c0081abdeb(vehicle: number, extend: boolean): void;
    function SetOverrideWeather(weatherType: string): void;
    function SetPadShake(padIndex: number, duration: number, frequency: number): void;
    function SetParachuteTaskTarget(ped: number, x: number, y: number, z: number): void;
    function SetParachuteTaskThrust(ped: number, thrust: number): void;
    function SetParkedVehicleDensityMultiplierThisFrame(multiplier: number): void;
    function SetParticleFxBulletImpactScale(scale: number): void;
    function N_0x27e32866e9a5c416(scale: number): void;
    function SetParticleFxCamInsideNonplayerVehicle(vehicle: number, p1: boolean): void;
    function SetParticleFxCamInsideVehicle(p0: boolean): void;
    function SetParticleFxLoopedAlpha(ptfxHandle: number, alpha: number): void;
    function SetParticleFxLoopedColour(ptfxHandle: number, r: number, g: number, b: number, p4: boolean): void;
    function SetParticleFxLoopedEvolution(
        ptfxHandle: number,
        propertyName: string,
        amount: number,
        noNetwork: boolean
    ): void;
    function SetParticleFxLoopedFarClipDist(ptfxHandle: number, range: number): void;
    function SetParticleFxLoopedRange(ptfxHandle: number, range: number): void;
    function SetParticleFxLoopedOffsets(
        ptfxHandle: number,
        x: number,
        y: number,
        z: number,
        rotX: number,
        rotY: number,
        rotZ: number
    ): void;
    function SetParticleFxLoopedScale(ptfxHandle: number, scale: number): void;
    function SetParticleFxNonLoopedAlpha(alpha: number): void;
    function SetParticleFxNonLoopedColour(r: number, g: number, b: number): void;
    function SetParticleFxNonLoopedEmitterScale(p0: number, p1: number, scale: number): void;
    function SetParticleFxOverride(oldAsset: string, newAsset: string): void;
    function SetPtfxAssetOld_2New(oldAsset: string, newAsset: string): void;
    function SetParticleFxAssetOldToNew(oldAsset: string, newAsset: string): void;
    function SetParticleFxShootoutBoat(p0: number): void;
    function SetPauseMenuActive(toggle: boolean): void;
    function SetPauseMenuPedLighting(state: boolean): void;
    function N_0x3ca6050692bc61b0(state: boolean): void;
    function SetPauseMenuPedSleepState(state: boolean): void;
    function N_0xecf128344e9ff9f1(state: boolean): void;
    function SetPedAccuracy(ped: number, accuracy: number): void;
    function SetPedAiBlipForcedOn(ped: number, toggle: boolean): void;
    function N_0x0c4bbf625ca98c4e(ped: number, toggle: boolean): void;
    function IsAiBlipAlwaysShown(ped: number, toggle: boolean): void;
    function SetPedAiBlipGangId(ped: number, gangId: number): void;
    function N_0xe52b8e7f85d39a08(ped: number, gangId: number): void;
    function SetAiBlipType(ped: number, gangId: number): void;
    function SetPedAiBlipHasCone(ped: number, toggle: boolean): void;
    function HideSpecialAbilityLockonOperation(ped: number, toggle: boolean): void;
    function SetPedAiBlipNoticeRange(ped: number, range: number): void;
    function N_0x97c65887d4b37fa9(ped: number, range: number): void;
    function SetAiBlipMaxDistance(ped: number, range: number): void;
    function SetPedAiBlipSprite(ped: number, spriteId: number): void;
    function N_0xfcfacd0db9d7a57d(ped: number, spriteId: number): void;
    function SetPedAlertness(ped: number, value: number): void;
    function SetPedAllowVehiclesOverride(ped: number, toggle: boolean): void;
    function SetPedAllowedToDuck(ped: number, toggle: boolean): void;
    function SetPedAlternateMovementAnim(
        ped: number,
        stance: number,
        animDictionary: string,
        animationName: string,
        p4: number,
        p5: boolean
    ): void;
    function SetPedAlternateWalkAnim(ped: number, animDict: string, animName: string, p3: number, p4: boolean): void;
    function SetPedAmmo(ped: number, weaponHash: number, ammo: number): void;
    function SetPedAmmoByType(ped: number, ammoType: number, ammo: number): void;
    function SetPedAmmoToDrop(ped: number, ammo: number): void;
    function SetPedAngledDefensiveArea(
        ped: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: boolean,
        p9: boolean
    ): void;
    function SetPedAoBlobRendering(ped: number, toggle: boolean): void;
    function N_0x2b5aa717a181fb4c(ped: number, toggle: boolean): void;
    function SetPedArmour(ped: number, amount: number): void;
    function SetPedAsCop(ped: number, toggle: boolean): void;
    function SetPedAsEnemy(ped: number, toggle: boolean): void;
    function SetPedAsGroupLeader(ped: number, groupId: number): void;
    function SetPedAsGroupMember(ped: number, groupId: number): void;
    function SetPedAsNoLongerNeeded(ped: number): void;
    function SetPedAudioFootstepLoud(ped: number, toggle: boolean): void;
    function N_0x0653b735bfbdfe87(ped: number, toggle: boolean): void;
    function SetPedAudioFootstepQuiet(ped: number, toggle: boolean): void;
    function N_0x29da3ca8d8b2692d(ped: number, toggle: boolean): void;
    function SetPedAudioGender(ped: number, p1: boolean): void;
    function N_0xa5342d390cda41d6(ped: number, p1: boolean): void;
    function SetPedBlendFromParents(
        ped: number,
        father: number,
        mother: number,
        fathersSide: number,
        mothersSide: number
    ): void;
    function SetPedBlocksPathingWhenDead(ped: number, toggle: boolean): void;
    function N_0x576594e8d64375e2(ped: number, toggle: boolean): void;
    function SetPedBoundsOrientation(ped: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function SetPedCanArmIk(ped: number, toggle: boolean): void;
    function SetPedCanBeDraggedOut(ped: number, toggle: boolean): void;
    function SetPedCanBeKnockedOffVehicle(ped: number, state: number): void;
    function SetPedCanBeShotInVehicle(ped: number, toggle: boolean): void;
    function SetPedCanBeTargetedWhenInjured(ped: number, toggle: boolean): void;
    function SetPedCanBeTargetedWithoutLos(ped: number, toggle: boolean): void;
    function SetPedCanBeTargetted(ped: number, toggle: boolean): void;
    function SetPedCanBeTargettedByPlayer(ped: number, player: number, toggle: boolean): void;
    function SetPedCanBeTargettedByTeam(ped: number, team: number, toggle: boolean): void;
    function SetPedCanCowerInCover(ped: number, toggle: boolean): void;
    function SetPedCanEvasiveDive(ped: number, toggle: boolean): void;
    function SetPedCanHeadIk(ped: number, toggle: boolean): void;
    function SetPedCanLegIk(ped: number, toggle: boolean): void;
    function SetPedCanLosePropsOnDamage(ped: number, loseProps: boolean, p2: number): void;
    function N_0xe861d0b05c7662b8(ped: number, loseProps: boolean, p2: number): void;
    function SetPedCanPeekInCover(ped: number, toggle: boolean): void;
    function SetPedCanPlayAmbientAnims(ped: number, toggle: boolean): void;
    function SetPedCanPlayAmbientBaseAnims(ped: number, toggle: boolean): void;
    function SetPedCanPlayAmbientIdles(ped: number, p1: boolean, p2: boolean): void;
    function N_0x8fd89a6240813fd0(ped: number, p1: boolean, p2: boolean): void;
    function SetPedCanPlayGestureAnims(ped: number, toggle: boolean): void;
    function SetPedCanPlayInjuredAnims(ped: number, p1: boolean): void;
    function N_0x33a60d8bdd6e508c(ped: number, p1: boolean): void;
    function SetPedCanPlayVisemeAnims(ped: number, toggle: boolean, p2: boolean): void;
    function SetPedCanRagdoll(ped: number, toggle: boolean): void;
    function SetPedCanRagdollFromPlayerImpact(ped: number, toggle: boolean): void;
    function SetPedCanSmashGlass(ped: number, p1: boolean, p2: boolean): void;
    function SetPedCanSwitchWeapon(ped: number, toggle: boolean): void;
    function SetPedCanTeleportToGroupLeader(pedHandle: number, groupHandle: number, toggle: boolean): void;
    function SetPedCanTorsoIk(ped: number, toggle: boolean): void;
    function SetPedCanTorsoReactIk(ped: number, p1: boolean): void;
    function N_0xf5846edb26a98a24(ped: number, p1: boolean): void;
    function SetPedCanTorsoVehicleIk(ped: number, p1: boolean): void;
    function N_0x6647c5f6f5792496(ped: number, p1: boolean): void;
    function SetPedCanUseAutoConversationLookat(ped: number, toggle: boolean): void;
    function SetPedCapsule(ped: number, value: number): void;
    function SetPedChanceOfFiringBlanks(ped: number, xBias: number, yBias: number): void;
    function SetPedClothPackageIndex(ped: number, p1: number): void;
    function N_0x78c4e9961db3eb5b(ped: number, p1: number): void;
    function SetPedClothProne(p0: number, p1: number): void;
    function N_0x82a3d6d9cc2cb8e3(p0: number, p1: number): void;
    function SetPedCombatAbility(ped: number, p1: number): void;
    function SetPedCombatAttributes(ped: number, attributeIndex: number, enabled: boolean): void;
    function SetPedCombatMovement(ped: number, combatMovement: number): void;
    function SetPedCombatRange(ped: number, p1: number): void;
    function SetPedComponentVariation(
        ped: number,
        componentId: number,
        drawableId: number,
        textureId: number,
        paletteId: number
    ): void;
    function SetPedConfigFlag(ped: number, flagId: number, value: boolean): void;
    function SetPedCoordsKeepVehicle(ped: number, posX: number, posY: number, posZ: number): void;
    function SetPedCoordsNoGang(ped: number, posX: number, posY: number, posZ: number): void;
    function SetPedCoverClipsetOverride(ped: number, p1: string): void;
    function N_0x9dba107b4937f809(ped: number, p1: string): void;
    function SetPedCowerHash(ped: number, p1: string): void;
    function SetPedCurrentWeaponVisible(
        ped: number,
        visible: boolean,
        deselectWeapon: boolean,
        p3: boolean,
        p4: boolean
    ): void;
    function SetPedDefaultComponentVariation(ped: number): void;
    function SetPedDefensiveAreaAttachedToPed(
        ped: number,
        attachPed: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: boolean,
        p10: boolean
    ): void;
    function SetPedDefensiveAreaDirection(ped: number, p1: number, p2: number, p3: number, p4: boolean): void;
    function SetPedDefensiveSphereAttachedToPed(
        ped: number,
        target: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        radius: number,
        p6: boolean
    ): void;
    function N_0xf9b8f91aad3b953e(
        ped: number,
        target: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        radius: number,
        p6: boolean
    ): void;
    function SetPedDefensiveSphereAttachedToVehicle(
        ped: number,
        target: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        radius: number,
        p6: boolean
    ): void;
    function N_0xe4723db6e736ccff(
        ped: number,
        target: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        radius: number,
        p6: boolean
    ): void;
    function SetPedDensityMultiplierThisFrame(multiplier: number): void;
    function SetPedDesiredHeading(ped: number, heading: number): void;
    function SetPedDesiredMoveBlendRatio(ped: number, p1: number): void;
    function SetPedDiesInSinkingVehicle(ped: number, toggle: boolean): void;
    function SetPedDiesInVehicle(ped: number, toggle: boolean): void;
    function SetPedDiesInWater(ped: number, toggle: boolean): void;
    function SetPedDiesInstantlyInWater(ped: number, toggle: boolean): void;
    function SetPedDiesWhenInjured(ped: number, toggle: boolean): void;
    function SetPedDriveByClipsetOverride(ped: number, clipset: string): void;
    function SetPedDropsInventoryWeapon(
        ped: number,
        weaponHash: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        ammoCount: number
    ): void;
    function SetPedDropsWeapon(ped: number): void;
    function SetPedDropsWeaponsWhenDead(ped: number, toggle: boolean): void;
    function SetPedDucking(ped: number, toggle: boolean): void;
    function SetPedEmissiveIntensity(ped: number, intensity: number): void;
    function N_0x4e90d746056e273d(ped: number, intensity: number): void;
    function SetPedIlluminatedClothingGlowIntensity(ped: number, intensity: number): void;
    function SetPedEnableWeaponBlocking(ped: number, toggle: boolean): void;
    function SetPedEnveffColorModulator(ped: number, r: number, g: number, b: number): void;
    function N_0xd69411aa0cebf9e9(ped: number, r: number, g: number, b: number): void;
    function SetPedEnveffScale(ped: number, value: number): void;
    function SetPedEyeColor(ped: number, index: number): void;
    function SetPedFaceFeature(ped: number, index: number, scale: number): void;
    function SetPedFiringPattern(ped: number, patternHash: number): void;
    function SetPedFleeAttributes(ped: number, attributeFlags: number, enable: boolean): void;
    function SetPedGadget(ped: number, gadgetHash: number, p2: boolean): void;
    function SetPedGeneratesDeadBodyEvents(ped: number, toggle: boolean): void;
    function SetPedGestureGroup(ped: number, animGroupGesture: string): void;
    function SetPedGetOutUpsideDownVehicle(ped: number, toggle: boolean): void;
    function SetPedGravity(ped: number, toggle: boolean): void;
    function SetPedGroupMemberPassengerIndex(ped: number, index: number): void;
    function SetPedHairColor(ped: number, colorID: number, highlightColorID: number): void;
    function SetPedHasAiBlip(ped: number, hasCone: boolean): void;
    function N_0xd30c50df888d58b5(ped: number, hasCone: boolean): void;
    function SetPedEnemyAiBlip(ped: number, hasCone: boolean): void;
    function SetPedAiBlip(ped: number, hasCone: boolean): void;
    function SetPedHasAiBlipWithColor(ped: number, hasCone: boolean, color: number): void;
    function N_0xb13dcb4c6faad238(ped: number, hasCone: boolean, color: number): void;
    function SetPedHeadBlendData(
        ped: number,
        shapeFirstID: number,
        shapeSecondID: number,
        shapeThirdID: number,
        skinFirstID: number,
        skinSecondID: number,
        skinThirdID: number,
        shapeMix: number,
        skinMix: number,
        thirdMix: number,
        isParent: boolean
    ): void;
    function SetPedHeadOverlay(ped: number, overlayID: number, index: number, opacity: number): void;
    function SetPedHeadOverlayColor(
        ped: number,
        overlayID: number,
        colorType: number,
        colorID: number,
        secondColorID: number
    ): void;
    function SetPedHearingRange(ped: number, value: number): void;
    function SetPedHeatscaleOverride(ped: number, heatScale: number): void;
    function N_0xc1f6ebf9a3d55538(ped: number, heatScale: number): void;
    function SetPedHelmet(ped: number, canWearHelmet: boolean): void;
    function SetPedHelmetFlag(ped: number, helmetFlag: number): void;
    function SetPedHelmetPropIndex(ped: number, propIndex: number): void;
    function SetPedHelmetTextureIndex(ped: number, textureIndex: number): void;
    function SetPedHelmetUnk(ped: number, p1: boolean, p2: number, p3: number): void;
    function N_0x3f7325574e41b44d(ped: number, p1: boolean, p2: number, p3: number): void;
    function SetPedHighlyPerceptive(ped: number, toggle: boolean): void;
    function N_0x52d59ab61ddc05dd(ped: number, toggle: boolean): void;
    function SetPedIdRange(ped: number, value: number): void;
    function SetPedInVehicleContext(ped: number, context: number): void;
    function SetPedIncreasedAvoidanceRadius(ped: number): void;
    function N_0x570389d1c3de3c6b(ped: number): void;
    function SetPedInfiniteAmmo(ped: number, toggle: boolean, weaponHash: number): void;
    function SetPedInfiniteAmmoClip(ped: number, toggle: boolean): void;
    function SetPedIntoVehicle(ped: number, vehicle: number, seatIndex: number): void;
    function SetPedIsDrunk(ped: number, toggle: boolean): void;
    function SetPedKeepTask(ped: number, toggle: boolean): void;
    function SetPedLegIkMode(ped: number, mode: number): void;
    function SetPedLodMultiplier(ped: number, multiplier: number): void;
    function SetPedMaxHealth(ped: number, value: number): void;
    function SetPedMaxMoveBlendRatio(ped: number, value: number): void;
    function SetPedMaxTimeInWater(ped: number, value: number): void;
    function SetPedMaxTimeUnderwater(ped: number, value: number): void;
    function SetPedMinGroundTimeForStungun(ped: number, ms: number): void;
    function SetPedMinMoveBlendRatio(ped: number, value: number): void;
    function SetPedModelIsSuppressed(model: number, toggle: boolean): void;
    function SetPedModelPersonality(modelHash: number, personalityHash: number): void;
    function SetPedMoney(ped: number, amount: number): void;
    function SetPedMotionBlur(ped: number, toggle: boolean): void;
    function SetPedMoveAnimsBlendOut(ped: number): void;
    function SetPedMoveRateOverride(ped: number, value: number): void;
    function SetPedMovementClipset(ped: number, clipSet: string, transitionSpeed: number): void;
    function SetPedNameDebug(ped: number, name: string): void;
    function SetPedNeverLeavesGroup(ped: number, toggle: boolean): void;
    function SetPedNonCreationArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    function SetPedPanicExitScenario(ped: number, x: number, y: number, z: number): number;
    function N_0xfe07ff6495d52e2a(ped: number, x: number, y: number, z: number): number;
    function SetPedParachuteTintIndex(ped: number, tintIndex: number): void;
    function SetPedPathAvoidFire(ped: number, avoidFire: boolean): void;
    function SetPedPathCanDropFromHeight(ped: number, Toggle: boolean): void;
    function SetPedPathCanUseClimbovers(ped: number, Toggle: boolean): void;
    function SetPedPathCanUseLadders(ped: number, Toggle: boolean): void;
    function SetPedPathClimbCostModifier(ped: number, modifier: number): void;
    function N_0x88e32db8c1a4aa4b(ped: number, modifier: number): void;
    function SetPedPathMayEnterWater(ped: number, mayEnterWater: boolean): void;
    function SetPedPathsWidthPlant(ped: number, mayEnterWater: boolean): void;
    function SetPedPathPreferToAvoidWater(ped: number, avoidWater: boolean): void;
    function SetPedPathsBackToOriginal(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function SetPedPathsInArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        unknown: boolean
    ): void;
    function SetPedPinnedDown(ped: number, pinned: boolean, i: number): number;
    function SetPedPlaysHeadOnHornAnimWhenDiesInVehicle(ped: number, toggle: boolean): void;
    function SetPedPopulationBudget(p0: number): void;
    function SetPedPreferredCoverSet(ped: number, itemSet: number): void;
    function N_0x8421eb4da7e391b9(ped: number, itemSet: number): void;
    function SetPedPreloadPropData(ped: number, componentId: number, drawableId: number, textureId: number): boolean;
    function N_0x2b16a3bff1fbce49(ped: number, componentId: number, drawableId: number, textureId: number): boolean;
    function IsPedPropValid(ped: number, componentId: number, drawableId: number, textureId: number): boolean;
    function SetPedPreloadVariationData(ped: number, slot: number, drawableId: number, textureId: number): number;
    function N_0x39d55a620fcb6a3a(ped: number, slot: number, drawableId: number, textureId: number): number;
    function SetPedPrimaryLookat(ped: number, lookAt: number): void;
    function SetPedPropIndex(
        ped: number,
        componentId: number,
        drawableId: number,
        textureId: number,
        attach: boolean
    ): void;
    function SetPedRagdollForceFall(ped: number): void;
    function SetPedRagdollOnCollision(ped: number, toggle: boolean): void;
    function SetPedRandomComponentVariation(ped: number, p1: number): void;
    function SetPedRandomProps(ped: number): void;
    function SetPedRelationshipGroupDefaultHash(ped: number, hash: number): void;
    function SetPedRelationshipGroupHash(ped: number, hash: number): void;
    function SetPedReserveParachuteTintIndex(ped: number, p1: number): void;
    function SetPedResetFlag(ped: number, flagId: number, doReset: boolean): void;
    function SetPedScream(ped: number): void;
    function N_0x40cf0d12d142a9e8(ped: number): void;
    function SetPedScubaGearVariation(ped: number): void;
    function N_0x36c6984c3ed0c911(ped: number): void;
    function SetPedSeeingRange(ped: number, value: number): void;
    function SetPedShootOrdnanceWeapon(ped: number, p1: number): number;
    function N_0xb4c8d77c80c0421e(ped: number, p1: number): number;
    function SetPedShootRate(ped: number, shootRate: number): void;
    function SetPedShootsAtCoord(ped: number, x: number, y: number, z: number, toggle: boolean): void;
    function SetPedShouldPlayDirectedScenarioExit(p0: number, p1: number, p2: number, p3: number): number;
    function N_0xec6935ebe0847b90(p0: number, p1: number, p2: number, p3: number): number;
    function SetPedShouldPlayFleeScenarioExit(ped: number, p1: number, p2: number, p3: number): number;
    function N_0xeeed8fafec331a70(ped: number, p1: number, p2: number, p3: number): number;
    function SetPedShouldPlayImmediateScenarioExit(ped: number): void;
    function N_0xf1c03a5352243a30(ped: number): void;
    function SetPedShouldPlayNormalScenarioExit(ped: number): void;
    function N_0xa3a9299c4f2adb98(ped: number): void;
    function SetPedSphereDefensiveArea(
        ped: number,
        x: number,
        y: number,
        z: number,
        radius: number,
        p5: boolean,
        p6: boolean
    ): void;
    function SetPedStayInVehicleWhenJacked(ped: number, toggle: boolean): void;
    function SetPedStealthMovement(ped: number, p1: boolean, action: string): void;
    function SetPedSteersAroundObjects(ped: number, toggle: boolean): void;
    function SetPedSteersAroundPeds(ped: number, toggle: boolean): void;
    function SetPedSteersAroundVehicles(ped: number, toggle: boolean): void;
    function SetPedStrafeClipset(ped: number, clipSet: string): void;
    function SetPedSuffersCriticalHits(ped: number, toggle: boolean): void;
    function SetPedSweat(ped: number, sweat: number): void;
    function SetPedTalk(ped: number): void;
    function N_0x4ada3f19be4a6047(ped: number): void;
    function SetPedTargetLossResponse(ped: number, responseType: number): void;
    function SetPedToInformRespectedFriends(ped: number, radius: number, maxFriends: number): void;
    function SetPedToLoadCover(ped: number, toggle: boolean): void;
    function SetPedToRagdoll(
        ped: number,
        time1: number,
        time2: number,
        ragdollType: number,
        p4: boolean,
        p5: boolean,
        p6: boolean
    ): boolean;
    function SetPedToRagdollWithFall(
        ped: number,
        time: number,
        p2: number,
        ragdollType: number,
        x: number,
        y: number,
        z: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number,
        p12: number,
        p13: number
    ): boolean;
    function SetPedTurningThresholds(min: number, max: number): void;
    function SetPedUsingActionMode(ped: number, p1: boolean, p2: number, action: string): void;
    function SetPedVehicleForcedSeatUsage(ped: number, vehicle: number, seatIndex: number, flags: number): void;
    function N_0x952f06beecd775cc(ped: number, vehicle: number, seatIndex: number, flags: number): void;
    function SetPedVisualFieldCenterAngle(ped: number, angle: number): void;
    function SetPedVisualFieldMaxAngle(ped: number, value: number): void;
    function SetPedVisualFieldMaxElevationAngle(ped: number, angle: number): void;
    function SetPedVisualFieldMinAngle(ped: number, value: number): void;
    function SetPedVisualFieldMinElevationAngle(ped: number, angle: number): void;
    function SetPedVisualFieldPeripheralRange(ped: number, range: number): void;
    function SetPedVoiceGroup(ped: number, voiceGroupHash: number): void;
    function N_0x7cdc8c3b89f661b3(ped: number, voiceGroupHash: number): void;
    function SetPedVoiceGroupRace(ped: number, voiceGroupHash: number): void;
    function SetPedWaypointRouteOffset(p0: number, p1: number, p2: number, p3: number): number;
    function SetPedWeaponLiveryColor(
        ped: number,
        weaponHash: number,
        camoComponentHash: number,
        colorIndex: number
    ): void;
    function N_0x9fe5633880ecd8ed(ped: number, weaponHash: number, camoComponentHash: number, colorIndex: number): void;
    function SetPedWeaponMovementClipset(ped: number, clipSet: string): void;
    function SetPedWeaponTintIndex(ped: number, weaponHash: number, tintIndex: number): void;
    function SetPedWetnessEnabledThisFrame(ped: number): void;
    function SetPedWetnessHeight(ped: number, height: number): void;
    function SetPickupAmmoAmountScaler(p0: number): void;
    function N_0xe620fd3512a04f18(p0: number): void;
    function SetPickupGenerationRangeMultiplier(multiplier: number): void;
    function N_0x318516e02de3ece2(multiplier: number): void;
    function SetPickupHiddenWhenUncollectable(p0: number, p1: number): void;
    function N_0x3ed2b83ab2e82799(p0: number, p1: number): void;
    function SetPickupRegenerationTime(pickup: number, duration: number): void;
    function SetPickupRopeLengthForCargobob(cargobob: number, length1: number, length2: number, state: boolean): void;
    function N_0x877c1eaeac531023(cargobob: number, length1: number, length2: number, state: boolean): void;
    function SetCargobobHookPosition(cargobob: number, length1: number, length2: number, state: boolean): void;
    function SetPickupUncollectable(p0: number, p1: number): void;
    function N_0x1c1b69fae509ba97(p0: number, p1: number): void;
    function SetPlaneEngineHealth(vehicle: number, health: number): void;
    function N_0x2a86a0475b6a1434(vehicle: number, health: number): void;
    function SetPlanePropellersHealth(plane: number, health: number): void;
    function N_0x4c815eb175086f84(plane: number, health: number): void;
    function SetPlaneResistToExplosion(vehicle: number, toggle: boolean): void;
    function N_0xe16142b94664defd(vehicle: number, toggle: boolean): void;
    function SetPlaneSectionDamageScale(vehicle: number, damageSection: number, damageScale: number): void;
    function N_0x0bbb9a7a8ffe931b(vehicle: number, damageSection: number, damageScale: number): void;
    function SetPlaneTurbulenceMultiplier(vehicle: number, multiplier: number): void;
    function N_0xad2d28a1afdff131(vehicle: number, multiplier: number): void;
    function SetPlaybackSpeed(vehicle: number, speed: number): void;
    function SetPlaybackToUseAi(vehicle: number, drivingStyle: number): void;
    function SetPlaybackToUseAiTryToRevertBackLater(
        vehicle: number,
        time: number,
        drivingStyle: number,
        p3: boolean
    ): void;
    function SetPlayerAirDefenseZoneFlag(player: number, zoneId: number, enable: boolean): void;
    function N_0xecdc202b25e5cf48(player: number, zoneId: number, enable: boolean): void;
    function SetPlayerAngry(ped: number, toggle: boolean): void;
    function SetPlayerBlipPositionThisFrame(x: number, y: number): void;
    function SetPlayerBluetoothState(player: number, state: boolean): void;
    function N_0x5dc40a8869c22141(player: number, state: boolean): void;
    function SetPlayerCanBeHassledByGangs(player: number, toggle: boolean): void;
    function SetPlayerCanDoDriveBy(player: number, toggle: boolean): void;
    function SetPlayerCanLeaveParachuteSmokeTrail(player: number, enabled: boolean): void;
    function SetPlayerCanUseCover(player: number, toggle: boolean): void;
    function SetPlayerClothLockCounter(value: number): void;
    function SetPlayerClothPackageIndex(index: number): void;
    function SetPlayerClothPinFrames(player: number, p1: number): void;
    function SetPlayerControl(player: number, bHasControl: boolean, flags: number): void;
    function SetPlayerFallDistance(player: number, distance: number): void;
    function N_0xefd79fa81dfba9cb(player: number, distance: number): void;
    function SetPlayerForceSkipAimIntro(player: number, toggle: boolean): void;
    function SetPlayerForcedAim(player: number, toggle: boolean): void;
    function SetPlayerForcedZoom(player: number, toggle: boolean): void;
    function SetPlayerHasReserveParachute(player: number): void;
    function SetPlayerHealthRechargeLimit(player: number, limit: number): void;
    function N_0xc388a0f065f5bc34(player: number, limit: number): void;
    function SetPlayerHealthRechargeMultiplier(player: number, regenRate: number): void;
    function SetPlayerHomingRocketDisabled(player: number, p1: boolean): void;
    function N_0xee4ebdd2593ba844(player: number, p1: boolean): void;
    function SetPlayerInvincible(player: number, toggle: boolean): void;
    function SetPlayerInvincibleKeepRagdollEnabled(player: number, toggle: boolean): void;
    function N_0x6bc97f4f4bb3c04b(player: number, toggle: boolean): void;
    function SetPlayerInvisibleLocally(player: number, toggle: boolean): void;
    function SetPlayerIsInAnimalForm(toggle: boolean): void;
    function N_0x4ebb7e87aa0dbed4(toggle: boolean): void;
    function ShowPedInPauseMenu(toggle: boolean): void;
    function SetPlayerIsInDirectorMode(toggle: boolean): void;
    function N_0x808519373fd336a3(toggle: boolean): void;
    function SetDirectorMode(toggle: boolean): void;
    function SetPlayerLeavePedBehind(player: number, toggle: boolean): void;
    function N_0xff300c7649724a0b(player: number, toggle: boolean): void;
    function SetPlayerLockon(player: number, toggle: boolean): void;
    function SetPlayerLockonRangeOverride(player: number, range: number): void;
    function SetPlayerMaxArmour(player: number, value: number): void;
    function SetPlayerMaxStamina(playerId: number, maxStamina: number): boolean;
    function SetPlayerMayNotEnterAnyVehicle(player: number): void;
    function SetPlayerMayOnlyEnterThisVehicle(player: number, vehicle: number): void;
    function SetPlayerMeleeWeaponDamageModifier(player: number, modifier: number): void;
    function SetPlayerMeleeWeaponDefenseModifier(player: number, modifier: number): void;
    function SetPlayerModel(player: number, model: number): void;
    function SetPlayerNoiseMultiplier(player: number, multiplier: number): void;
    function SetPlayerParachuteModelOverride(player: number, model: number): void;
    function SetPlayerParachutePackModelOverride(player: number, model: number): void;
    function SetPlayerParachutePackTintIndex(player: number, tintIndex: number): void;
    function SetPlayerParachuteSmokeTrailColor(player: number, r: number, g: number, b: number): void;
    function SetPlayerParachuteTintIndex(player: number, tintIndex: number): void;
    function SetPlayerParachuteVariationOverride(player: number, p1: number, p2: number, p3: number, p4: boolean): void;
    function SetPlayerReserveParachuteModelOverride(player: number, model: number): void;
    function SetPlayerReserveParachuteTintIndex(player: number, index: number): void;
    function SetPlayerResetFlagPreferRearSeats(player: number, flags: number): void;
    function SetPlayerRockstarEditorDisabled(toggle: boolean): void;
    function N_0x9d8d44adbba61ef2(toggle: boolean): void;
    function SetPlayerShortSwitchStyle(style: number): void;
    function N_0x5f2013f8bc24ee69(style: number): void;
    function SetPlayerSimulateAiming(player: number, toggle: boolean): void;
    function SetPlayerSneakingNoiseMultiplier(player: number, multiplier: number): void;
    function SetPlayerSprint(player: number, toggle: boolean): void;
    function SetPlayerStamina(playerId: number, stamina: number): boolean;
    function SetPlayerStealthPerceptionModifier(player: number, value: number): void;
    function SetPlayerSwitchEstablishingShot(name: string): void;
    function N_0x0fde9dbfc0a6bc65(name: string): void;
    function SetPlayerSwitchOutro(
        cameraCoordX: number,
        cameraCoordY: number,
        cameraCoordZ: number,
        camRotationX: number,
        camRotationY: number,
        camRotationZ: number,
        camFov: number,
        camFarClip: number,
        rotationOrder: number
    ): void;
    function N_0xc208b673ce446b61(
        cameraCoordX: number,
        cameraCoordY: number,
        cameraCoordZ: number,
        camRotationX: number,
        camRotationY: number,
        camRotationZ: number,
        camFov: number,
        camFarClip: number,
        rotationOrder: number
    ): void;
    function SetPlayerTalkingOverride(player: number, state: boolean): void;
    function SetPlayerTargetLevel(targetLevel: number): void;
    function N_0x5702b917b99db1cd(targetLevel: number): void;
    function SetPlayerTargetingMode(targetMode: number): void;
    function SetPlayerTcmodifierTransition(value: number): void;
    function N_0xbdeb86f4d5809204(value: number): void;
    function SetPlayerTeam(player: number, team: number): void;
    function SetPlayerUnderwaterTimeRemaining(player: number, percentage: number): number;
    function N_0xa0d3e4f7aafb7e78(player: number, percentage: number): number;
    function SetPlayerVehicleDamageModifier(player: number, modifier: number): void;
    function SetPlayerVehicleDefenseModifier(player: number, modifier: number): void;
    function SetPlayerVisibleLocally(player: number, toggle: boolean): void;
    function SetPlayerWantedCentrePosition(player: number, p2: boolean, p3: boolean): Vector3;
    function SetPlayerWantedLevel(player: number, wantedLevel: number, delayedResponse: boolean): void;
    function SetPlayerWantedLevelNoDrop(player: number, wantedLevel: number, delayedResponse: boolean): void;
    function SetPlayerWantedLevelNow(player: number, p1: boolean): void;
    function SetPlayerWeaponDamageModifier(player: number, modifier: number): void;
    function SetPlayerWeaponDefenseModifier(player: number, modifier: number): void;
    function SetPlayerWeaponDefenseModifier_2(player: number, modifier: number): void;
    function N_0xbcfde9ede4cf27dc(player: number, modifier: number): void;
    function SetPlayerpadShakesWhenControllerDisabled(toggle: boolean): void;
    function SetPlayersLastVehicle(vehicle: number): void;
    function SetPoliceFocusWillTrackVehicle(vehicle: number, p1: boolean): void;
    function N_0x4e74e62e0a97e901(vehicle: number, p1: boolean): void;
    function SetPoliceIgnorePlayer(player: number, toggle: boolean): void;
    function SetPoliceRadarBlips(toggle: boolean): void;
    function SetPopControlSphereThisFrame(x: number, y: number, z: number, min: number, max: number): void;
    function N_0xd8c3be3ee94caf2d(x: number, y: number, z: number, min: number, max: number): void;
    function SetPortalSettingsOverride(p0: string, p1: string): void;
    function N_0x044dbad7a7fa2be5(p0: string, p1: string): void;
    function SetProfileSettingPrologueComplete(): void;
    function N_0xb475f27c6a994d65(): void;
    function SetRaceTrackRender(toggle: boolean): void;
    function N_0x1eac5f91bcbc5073(toggle: boolean): void;
    function SetRadarAsExteriorThisFrame(): void;
    function SetRadarAsInteriorThisFrame(interior: number, x: number, y: number, heading: number, zoom: number): void;
    function SetRadarZoom(zoomLevel: number): void;
    function SetRadarZoomPrecise(zoom: number): void;
    function RespondingAsTemp(zoom: number): void;
    function SetRadarZoomToBlip(blip: number, zoom: number): void;
    function N_0xf98e4b3e56afc7b1(blip: number, zoom: number): void;
    function SetRadarZoomToDistance(zoom: number): void;
    function SetRadarZoomLevelThisFrame(zoom: number): void;
    function SetRadioAutoUnfreeze(toggle: boolean): void;
    function SetRadioFrontendFadeTime(fadeTime: number): void;
    function N_0x2c96cdb04fca358e(fadeTime: number): void;
    function SetRadioStationIsVisible(radioStation: string, toggle: boolean): void;
    function SetRadioStationMusicOnly(radioStation: string, toggle: boolean): void;
    function N_0x774bd811f656a122(radioStation: string, toggle: boolean): void;
    function SetRadioToStationIndex(radioStation: number): void;
    function SetRadioToStationName(stationName: string): void;
    function SetRadioTrack(radioStation: string, radioTrack: string): void;
    function SetRadioTrackMix(radioStationName: string, mixName: string, p2: number): void;
    function SetRadiusBlipEdge(blip: number, toggle: boolean): void;
    function N_0x25615540d894b814(blip: number, toggle: boolean): void;
    function SetRagdollBlockingFlags(ped: number, flags: number): void;
    function N_0x26695ec767728d84(ped: number, flags: number): void;
    function SetPedRagdollBlockingFlags(ped: number, flags: number): void;
    function SetRainLevel(level: number): void;
    function SetRainFxIntensity(level: number): void;
    function SetRandomBoats(toggle: boolean): void;
    function SetRandomBoatsInMp(toggle: boolean): void;
    function SetRandomEventFlag(toggle: boolean): void;
    function SetRandomSeed(seed: number): void;
    function SetRandomTrains(toggle: boolean): void;
    function SetRandomVehicleDensityMultiplierThisFrame(multiplier: number): void;
    function SetRandomWeatherType(): void;
    function SetReduceDriftVehicleSuspension(vehicle: number, enable: boolean): void;
    function SetReducePedModelBudget(toggle: boolean): void;
    function SetReduceVehicleModelBudget(toggle: boolean): void;
    function SetRelationshipBetweenGroups(relationship: number, group1: number, group2: number): void;
    function SetRelationshipGroupDontAffectWantedLevel(group: number, p1: boolean): void;
    function N_0x5615e0c5eb2bc6e2(group: number, p1: boolean): void;
    function SetRelationshipToPlayer(player: number, p1: boolean): void;
    function N_0xa7c511fa1c5bda38(player: number, p1: boolean): void;
    function SetRenderHdOnly(toggle: boolean): void;
    function N_0x40aefd1a244741f2(toggle: boolean): void;
    function SetRenderTrainAsDerailed(train: number, toggle: boolean): void;
    function SetResourceKvp(key: string, value: string): void;
    function SetResourceKvpFloat(key: string, value: number): void;
    function SetResourceKvpInt(key: string, value: number): void;
    function SetRestartCustomPosition(x: number, y: number, z: number, heading: number): void;
    function N_0x706b5edcaa7fa663(x: number, y: number, z: number, heading: number): void;
    function SetCustomRespawnPosition(x: number, y: number, z: number, heading: number): void;
    function SetRichPresence(presenceState: string): void;
    function SetRiotModeEnabled(toggle: boolean): void;
    function N_0x2587a48bc88dfadf(toggle: boolean): void;
    function SetRoadsBackToOriginal(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
    function SetRoadsBackToOriginalInAngledArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number
    ): void;
    function SetRoadsInAngledArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        width: number,
        unknown1: boolean,
        unknown2: boolean,
        unknown3: boolean
    ): void;
    function SetRoadsInArea(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        nodeEnabled: boolean,
        unknown2: boolean
    ): void;
    function SetRopeLengthChangeRate(rope: number, lengthChangeRate: number): void;
    function SetRopesCreateNetworkWorldState(shouldCreate: boolean): void;
    function SetRunSprintMultiplierForPlayer(player: number, multiplier: number): void;
    function SetRuntimeTextureArgbData(tex: number, buffer: string, length: number): boolean;
    function SetRuntimeTextureImage(tex: number, fileName: string): boolean;
    function SetRuntimeTexturePixel(
        tex: number,
        x: number,
        y: number,
        r: number,
        g: number,
        b: number,
        a: number
    ): void;
    function SetSaveHouse(p0: number, p1: boolean, p2: boolean): void;
    function SetSaveMenuActive(ignoreVehicle: boolean): void;
    function SetSaveMigrationTransactionId(transactionId: number): void;
    function N_0xf6792800ac95350d(transactionId: number): void;
    function SetScaleformFitRendertarget(scaleformHandle: number, toggle: boolean): void;
    function N_0xe6a9f00d4240b519(scaleformHandle: number, toggle: boolean): void;
    function SetScaleformMovieAsNoLongerNeeded(scaleformHandle: number): void;
    function SetScaleformMovieToUseSystemTime(scaleform: number, toggle: boolean): void;
    function SetScenarioGroupEnabled(scenarioGroup: string, p1: boolean): void;
    function SetScenarioPedDensityMultiplierThisFrame(p0: number, p1: number): void;
    function SetScenarioPedsSpawnInSphereArea(x: number, y: number, z: number, range: number, p4: number): void;
    function SetScenarioPedsToBeReturnedByNextCommand(value: boolean): void;
    function SetScenarioTypeEnabled(scenarioType: string, toggle: boolean): void;
    function SetScriptAsNoLongerNeeded(scriptName: string): void;
    function SetScriptGfxAlign(horizontalAlign: number, verticalAlign: number): void;
    function SetScreenDrawPosition(horizontalAlign: number, verticalAlign: number): void;
    function ScreenDrawPositionBegin(horizontalAlign: number, verticalAlign: number): void;
    function SetScriptGfxAlignParams(x: number, y: number, w: number, h: number): void;
    function N_0xf5a2c681787e579d(x: number, y: number, w: number, h: number): void;
    function ScreenDrawPositionRatio(x: number, y: number, w: number, h: number): void;
    function SetScriptGfxDrawBehindPausemenu(flag: boolean): void;
    function N_0xc6372ecd45d73bcd(flag: boolean): void;
    function SetScriptGfxDrawOrder(order: number): void;
    function N_0x61bb1d9b3a95d802(order: number): void;
    function Set_2dLayer(order: number): void;
    function SetUiLayer(order: number): void;
    function SetScriptUpdateDoorAudio(doorHash: number, toggle: boolean): void;
    function N_0x06c0023bed16dd6b(doorHash: number, toggle: boolean): void;
    function SetScriptVariableHudColour(r: number, g: number, b: number, a: number): void;
    function N_0xd68a5ff8a3a89874(r: number, g: number, b: number, a: number): void;
    function SetScriptVariable_2HudColour(r: number, g: number, b: number, a: number): void;
    function N_0x16a304e6cb2bfab9(r: number, g: number, b: number, a: number): void;
    function SetScriptVehicleGenerator(vehicleGenerator: number, enabled: boolean): void;
    function SetScriptWithNameHashAsNoLongerNeeded(scriptHash: number): void;
    function SetStreamedScriptAsNoLongerNeeded(scriptHash: number): void;
    function SetScriptedAnimSeatOffset(ped: number, p1: number): void;
    function SetScriptedConversionCoordThisFrame(x: number, y: number, z: number): void;
    function SetSeethrough(toggle: boolean): void;
    function SetSequenceToRepeat(taskSequenceId: number, _repeat: boolean): void;
    function SetSirenKeepOn(vehicle: number, toggle: boolean): void;
    function N_0xf584cf8529b51434(vehicle: number, toggle: boolean): void;
    function SetSirenWithNoDriver(vehicle: number, toggle: boolean): void;
    function SetSnakeoilForEntry(name: string, path: string, data: string): void;
    function SetSnowLevel(level: number): void;
    function SetSocialClubTour(name: string): void;
    function N_0x9e778248d6685fe0(name: string): void;
    function SetSpecialAbility(player: number, p1: number): void;
    function N_0xb214d570ead7f81a(player: number, p1: number): void;
    function SetSpecialAbilityMultiplier(multiplier: number): void;
    function SetSpecialFlightModeAllowed(vehicle: number, toggle: boolean): void;
    function N_0xf1211889df15a763(vehicle: number, toggle: boolean): void;
    function SetVehicleHoverTransformEnabled(vehicle: number, toggle: boolean): void;
    function SetSpecialFlightModeRatio(vehicle: number, ratio: number): void;
    function SetVehicleHoverTransformRatio(vehicle: number, ratio: number): void;
    function SetSpecialFlightModeTargetRatio(vehicle: number, state: number): void;
    function N_0x438b3d7ca026fe91(vehicle: number, state: number): void;
    function SetVehicleTransformState(vehicle: number, state: number): void;
    function SetVehicleHoverTransformPercentage(vehicle: number, state: number): void;
    function SetSrlTime(p0: number): void;
    function SetStateBagValue(
        bagName: string,
        keyName: string,
        valueData: string,
        valueLength: number,
        replicated: boolean
    ): void;
    function SetStateOfClosestDoorOfType(
        _type: number,
        x: number,
        y: number,
        z: number,
        locked: boolean,
        heading: number,
        p6: boolean
    ): void;
    function SetStateOfRayfireMapObject(object: number, state: number): void;
    function N_0x5c29f698d404c5e1(object: number, state: number): void;
    function SetDesObjectState(object: number, state: number): void;
    function SetStaticEmitterEnabled(emitterName: string, toggle: boolean): void;
    function SetStoreEnabled(toggle: boolean): void;
    function SetStreamedTextureDictAsNoLongerNeeded(textureDict: string): void;
    function SetStreaming(toggle: boolean): void;
    function SetStuntJumpsCanTrigger(toggle: boolean): void;
    function N_0xd79185689f8fd5df(toggle: boolean): void;
    function SetSubmarineCrushDepths(
        vehicle: number,
        toggle: boolean,
        depth1: number,
        depth2: number,
        depth3: number
    ): void;
    function JitterVehicle(vehicle: number, toggle: boolean, depth1: number, depth2: number, depth3: number): void;
    function SetSuperJumpThisFrame(player: number): void;
    function SetSwimMultiplierForPlayer(player: number, multiplier: number): void;
    function SetSynchronizedAudioEventPositionThisFrame(p0: string, p1: number): void;
    function N_0x950a154b8dab6185(p0: string, p1: number): void;
    function SetSynchronizedSceneHoldLastFrame(sceneID: number, toggle: boolean): void;
    function N_0x394b9cd12435c981(sceneID: number, toggle: boolean): void;
    function SetSynchronizedSceneOcclusionPortal(sceneID: number, toggle: boolean): void;
    function SetSynchronizedSceneLooped(sceneID: number, toggle: boolean): void;
    function SetSynchronizedSceneOrigin(
        sceneID: number,
        x: number,
        y: number,
        z: number,
        roll: number,
        pitch: number,
        yaw: number,
        p7: boolean
    ): void;
    function SetSynchronizedScenePhase(sceneID: number, phase: number): void;
    function SetSynchronizedSceneRate(sceneID: number, rate: number): void;
    function SetTaskMoveNetworkSignalBool(ped: number, signalName: string, value: boolean): void;
    function N_0xb0a6cfd2c69c1088(ped: number, signalName: string, value: boolean): void;
    function SetTaskPropertyBool(ped: number, signalName: string, value: boolean): void;
    function SetTaskMoveNetworkSignalFloat(ped: number, signalName: string, value: number): void;
    function N_0xd5bb4025ae449a4e(ped: number, signalName: string, value: number): void;
    function SetTaskPropertyFloat(ped: number, signalName: string, value: number): void;
    function SetTaskMoveNetworkSignalFloat_2(ped: number, signalName: string, value: number): void;
    function SetTaskVehicleChaseBehaviorFlag(ped: number, flag: number, _set: boolean): void;
    function SetTaskVehicleChaseIdealPursuitDistance(ped: number, distance: number): void;
    function SetTaskVehicleGotoPlaneMinHeightAboveTerrain(plane: number, height: number): void;
    function N_0xb893215d8d4c015b(plane: number, height: number): void;
    function SetPlaneMinHeightAboveGround(plane: number, height: number): void;
    function SetPlaneMinHeightAboveTerrain(plane: number, height: number): void;
    function SetTaxiLights(vehicle: number, state: boolean): void;
    function SetTeamPickupObject(object: number, p1: number, p2: boolean): void;
    function SetTextCentre(align: boolean): void;
    function SetTextChatEnabled(enabled: boolean): boolean;
    function SetTextColour(red: number, green: number, blue: number, alpha: number): void;
    function SetTextDropShadow(): void;
    function SetTextDropshadow(distance: number, r: number, g: number, b: number, a: number): void;
    function SetTextEdge(p0: number, r: number, g: number, b: number, a: number): void;
    function SetTextFont(fontType: number): void;
    function SetTextJustification(justifyType: number): void;
    function N_0x4e096588b13ffeca(justifyType: number): void;
    function SetTextLeading(p0: number): void;
    function SetTextOutline(): void;
    function SetTextProportional(p0: boolean): void;
    function SetTextRenderId(renderId: number): void;
    function SetTextRightJustify(toggle: boolean): void;
    function SetTextScale(scale: number, size: number): void;
    function SetTextWrap(start: number, _end: number): void;
    function SetTextureVariationOfClosestObjectOfType(
        x: number,
        y: number,
        z: number,
        radius: number,
        modelHash: number,
        textureVariation: number
    ): boolean;
    function N_0xf12e33034d887f66(
        x: number,
        y: number,
        z: number,
        radius: number,
        modelHash: number,
        textureVariation: number
    ): boolean;
    function SetThirdPersonAimCamNearClipThisUpdate(distance: number): void;
    function N_0x42156508606de65e(distance: number): void;
    function SetThirdPersonAimCamNearClip(distance: number): void;
    function SetThisScriptCanBePaused(toggle: boolean): void;
    function SetThisScriptCanRemoveBlipsCreatedByAnyScript(toggle: boolean): void;
    function SetThreadPriority(priority: number): void;
    function N_0x42b65deef2edf2a1(priority: number): void;
    function SetTimeScale(timeScale: number): void;
    function SetTimecycleModifier(modifierName: string): void;
    function SetTimecycleModifierStrength(strength: number): void;
    function SetTimecycleModifierVar(modifierName: string, varName: string, value1: number, value2: number): void;
    function SetTrackedPointInfo(point: number, x: number, y: number, z: number, radius: number): void;
    function SetTrailerInverseMassScale(vehicle: number, p1: number): void;
    function N_0x2a8f319b392e7b3f(vehicle: number, p1: number): void;
    function SetTrailerLegsLowered(): void;
    function N_0x878c75c09fbdb942(): void;
    function SetTrailerLegsRaised(vehicle: number): void;
    function N_0x95cf53b3d687f9fa(vehicle: number): void;
    function SetTrainCruiseSpeed(train: number, speed: number): void;
    function SetTrainDoorOpenRatio(train: number, doorIndex: number, ratio: number): void;
    function SetTrainSpeed(train: number, speed: number): void;
    function SetTrainTrackSpawnFrequency(trackIndex: number, frequency: number): void;
    function N_0x21973bbf8d17edfa(trackIndex: number, frequency: number): void;
    function SetTrainsForceDoorsOpen(forceOpen: boolean): void;
    function SetTransitionTimecycleModifier(modifierName: string, transition: number): void;
    function SetTvAudioFrontend(toggle: boolean): void;
    function SetTvChannel(channel: number): void;
    function SetTvChannelPlaylist(tvChannel: number, playlistName: string, restart: boolean): void;
    function N_0xf7b38b8305f1fe8b(tvChannel: number, playlistName: string, restart: boolean): void;
    function LoadTvChannelSequence(tvChannel: number, playlistName: string, restart: boolean): void;
    function SetTvChannelPlaylistAtHour(tvChannel: number, playlistName: string, hour: number): void;
    function N_0x2201c576facaebe8(tvChannel: number, playlistName: string, hour: number): void;
    function SetTvVolume(volume: number): void;
    function SetTyreHealth(vehicle: number, wheelIndex: number, health: number): void;
    function SetTyreSoftnessMultiplier(vehicle: number, wheelIndex: number, multiplier: number): void;
    function N_0x392183bb9ea57697(vehicle: number, wheelIndex: number, multiplier: number): void;
    function SetTyreTractionLossMultiplier(vehicle: number, wheelIndex: number, multiplier: number): void;
    function N_0xc970d0e0fc31d768(vehicle: number, wheelIndex: number, multiplier: number): void;
    function SetTyreWearMultiplier(vehicle: number, wheelIndex: number, multiplier: number): void;
    function SetUnkBoolN_0x102ForSubmarineVehicleTask(vehicle: number, value: boolean): void;
    function SetUnkFloatN_0x104ForSubmarineVehicleTask(vehicle: number, value: number): void;
    function SetUnkGlobalBoolRelatedToDamage(value: boolean): void;
    function SetUseHiDof(): void;
    function SetUseHiDofInCutscene(): void;
    function SetUseHigherVehicleJumpForce(vehicle: number, toggle: boolean): void;
    function N_0xf06a16ca55d138d8(vehicle: number, toggle: boolean): void;
    function SetUseIslandMap(toggle: boolean): void;
    function SetToggleMinimapHeistIsland(toggle: boolean): void;
    function SetUseWaypointAsDestination(toggle: boolean): void;
    function N_0x6cdd58146a436083(toggle: boolean): void;
    function SetUserRadioControlEnabled(toggle: boolean): void;
    function SetVariableOnCutsceneAudio(variableName: string, value: number): void;
    function GetPlayerHeadsetSoundAlternate(variableName: string, value: number): void;
    function SetVariableOnSound(soundId: number, variableName: string, value: number): void;
    function SetVariableOnStream(p0: string, p1: number): void;
    function SetVariableOnUnderWaterStream(variableName: string, value: number): void;
    function N_0x733adf241531e5c2(variableName: string, value: number): void;
    function SetVehHasRadioOverride(vehicle: number): void;
    function N_0x3e45765f3fbb582f(vehicle: number): void;
    function SetVehRadioStation(vehicle: number, radioStation: string): void;
    function SetVehicleActAsIfHighSpeedForFragSmashing(vehicle: number, actHighSpeed: boolean): void;
    function N_0x1f9fb66f3a3842d2(vehicle: number, actHighSpeed: boolean): void;
    function SetVehicleActiveDuringPlayback(vehicle: number, toggle: boolean): void;
    function N_0xdffcef48e511db48(vehicle: number, toggle: boolean): void;
    function SetVehicleActiveForPedNavigation(vehicle: number, toggle: boolean): void;
    function N_0x21115bcd6e44656a(vehicle: number, toggle: boolean): void;
    function SetVehicleCloseDoorDeferedAction(vehicle: number, toggle: boolean): void;
    function SetVehicleAlarm(vehicle: number, state: boolean): void;
    function SetVehicleAlarmTimeLeft(vehicle: number, time: number): void;
    function SetVehicleAllowNoPassengersLockon(veh: number, toggle: boolean): void;
    function SetVehicleAsNoLongerNeeded(vehicle: number): void;
    function SetVehicleAudioBodyDamageFactor(vehicle: number, intensity: number): void;
    function N_0x01bb4d577d38bd9e(vehicle: number, intensity: number): void;
    function SetVehicleAudioEngineDamageFactor(vehicle: number, damageFactor: number): void;
    function N_0x59e7b488451f4d3a(vehicle: number, damageFactor: number): void;
    function SetVehicleAutoRepairDisabled(vehicle: number, value: boolean): void;
    function SetVehicleAutomaticallyAttaches(vehicle: number, p1: boolean, p2: number): number;
    function SetVehicleBodyHealth(vehicle: number, value: number): void;
    function SetVehicleBombCount(aircraft: number, bombCount: number): void;
    function N_0xf4b2ed59deb5d774(aircraft: number, bombCount: number): void;
    function SetVehicleBombs(aircraft: number, bombCount: number): void;
    function SetAircraftBombCount(aircraft: number, bombCount: number): void;
    function SetVehicleBoostActive(vehicle: number, toggle: boolean): void;
    function SetVehicleBrake(vehicle: number, toggle: boolean): void;
    function N_0xe4e2fd323574965c(vehicle: number, toggle: boolean): void;
    function SetVehicleBrakeLights(vehicle: number, toggle: boolean): void;
    function SetVehicleBulldozerArmPosition(vehicle: number, position: number, p2: boolean): void;
    function N_0xf8ebccc96adb9fb7(vehicle: number, position: number, p2: boolean): void;
    function SetVehicleBurnout(vehicle: number, toggle: boolean): void;
    function SetVehicleCanBeLockedOn(vehicle: number, canBeLockedOn: boolean, unk: boolean): void;
    function N_0x1dda078d12879eee(vehicle: number, canBeLockedOn: boolean, unk: boolean): void;
    function SetVehicleCanBeTargetted(vehicle: number, state: boolean): void;
    function SetVehicleCanBeUsedByFleeingPeds(vehicle: number, toggle: boolean): void;
    function N_0x300504b23bd3b711(vehicle: number, toggle: boolean): void;
    function SetVehicleCanBeVisiblyDamaged(vehicle: number, state: boolean): void;
    function SetVehicleCanBreak(vehicle: number, toggle: boolean): void;
    function SetVehicleCanDeformWheels(vehicle: number, toggle: boolean): void;
    function N_0x0cdda42f9e360ca6(vehicle: number, toggle: boolean): void;
    function SetVehicleCanEngineOperateOnFire(vehicle: number, toggle: boolean): void;
    function N_0x206bc5dc9d1ac70a(vehicle: number, toggle: boolean): void;
    function SetVehicleCanLeakOil(vehicle: number, toggle: boolean): void;
    function N_0x51bb2d88d31a914b(vehicle: number, toggle: boolean): void;
    function SetVehicleCanLeakPetrol(vehicle: number, toggle: boolean): void;
    function N_0x192547247864dfdd(vehicle: number, toggle: boolean): void;
    function SetVehicleCanSaveInGarage(vehicle: number, toggle: boolean): void;
    function N_0x428baccdf5e26ead(vehicle: number, toggle: boolean): void;
    function SetVehicleCeilingHeight(vehicle: number, height: number): void;
    function GetVehicleDeformationGetTree(vehicle: number, height: number): void;
    function SetVehicleCheatPowerIncrease(vehicle: number, value: number): void;
    function SetVehicleEngineTorqueMultiplier(vehicle: number, value: number): void;
    function SetVehicleClutch(vehicle: number, clutch: number): void;
    function SetVehicleColourCombination(vehicle: number, colorCombination: number): void;
    function SetVehicleColours(vehicle: number, colorPrimary: number, colorSecondary: number): void;
    function SetVehicleControlsInverted(vehicle: number, state: boolean): void;
    function N_0x5b91b229243351a8(vehicle: number, state: boolean): void;
    function SetVehicleCountermeasureCount(aircraft: number, count: number): void;
    function N_0x9bda23bf666f0855(aircraft: number, count: number): void;
    function SetAircraftCountermeasureCount(aircraft: number, count: number): void;
    function SetVehicleCurrentRpm(vehicle: number, rpm: number): void;
    function SetVehicleCustomPrimaryColour(vehicle: number, r: number, g: number, b: number): void;
    function SetVehicleCustomSecondaryColour(vehicle: number, r: number, g: number, b: number): void;
    function SetVehicleDamage(
        vehicle: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        damage: number,
        radius: number,
        focusOnModel: boolean
    ): void;
    function SetVehicleDamageModifier(vehicle: number, p1: number): number;
    function N_0x4e20d2a627011e8e(vehicle: number, p1: number): number;
    function SetVehicleDashboardColor(vehicle: number, color: number): void;
    function SetVehicleDashboardColour(vehicle: number, color: number): void;
    function SetVehicleDeformationFixed(vehicle: number): void;
    function SetVehicleDensityMultiplierThisFrame(multiplier: number): void;
    function SetVehicleDirtLevel(vehicle: number, dirtLevel: number): void;
    function SetVehicleDisableTowing(vehicle: number, toggle: boolean): void;
    function N_0x2b6747faa9db9d6b(vehicle: number, toggle: boolean): void;
    function SetVehicleDoorBroken(vehicle: number, doorIndex: number, deleteDoor: boolean): void;
    function SetVehicleDoorCanBreak(vehicle: number, doorIndex: number, isBreakable: boolean): void;
    function SetVehicleDoorBreakable(vehicle: number, doorIndex: number, isBreakable: boolean): void;
    function SetVehicleDoorControl(vehicle: number, doorIndex: number, speed: number, angle: number): void;
    function SetVehicleDoorLatched(
        vehicle: number,
        doorIndex: number,
        forceClose: boolean,
        lock: boolean,
        p4: boolean
    ): void;
    function SetVehicleDoorOpen(vehicle: number, doorIndex: number, loose: boolean, openInstantly: boolean): void;
    function SetVehicleDoorShut(vehicle: number, doorIndex: number, closeInstantly: boolean): void;
    function SetVehicleDoorsLocked(vehicle: number, doorLockStatus: number): void;
    function SetVehicleDoorsLockedForAllPlayers(vehicle: number, toggle: boolean): void;
    function SetVehicleDoorsLockedForNonScriptPlayers(vehicle: number, toggle: boolean): void;
    function N_0x9737a37136f07e75(vehicle: number, toggle: boolean): void;
    function SetVehicleDoorsLockedForPlayer(vehicle: number, player: number, toggle: boolean): void;
    function SetVehicleDoorsLockedForTeam(vehicle: number, team: number, toggle: boolean): void;
    function SetVehicleDoorsLockedForUnk(vehicle: number, toggle: boolean): void;
    function SetVehicleDoorsShut(vehicle: number, closeInstantly: boolean): void;
    function SetVehicleDropsMoneyWhenBlownUp(vehicle: number, toggle: boolean): void;
    function N_0x068f64f2470f9656(vehicle: number, toggle: boolean): void;
    function SetVehicleCreatesMoneyPickupsWhenExploded(vehicle: number, toggle: boolean): void;
    function SetVehicleEngineCanDegrade(vehicle: number, toggle: boolean): void;
    function SetVehicleEngineHealth(vehicle: number, health: number): void;
    function SetVehicleEngineOn(vehicle: number, value: boolean, instantly: boolean, disableAutoStart: boolean): void;
    function SetVehicleEngineTemperature(vehicle: number, temperature: number): void;
    function SetVehicleEnveffScale(vehicle: number, fade: number): void;
    function SetVehiclePaintFade(vehicle: number, fade: number): void;
    function SetVehicleExclusiveDriver(vehicle: number, toggle: boolean): void;
    function N_0x41062318f23ed854(vehicle: number, toggle: boolean): void;
    function SetVehicleExclusiveDriver_2(vehicle: number, ped: number, index: number): void;
    function N_0xb5c51b5502e85e83(vehicle: number, ped: number, index: number): void;
    function SetVehicleExplodesOnHighExplosionDamage(vehicle: number, toggle: boolean): void;
    function SetVehicleExtendedRemovalRange(vehicle: number, range: number): void;
    function N_0x79df7e806202ce01(vehicle: number, range: number): void;
    function SetVehicleExtra(vehicle: number, extraId: number, disable: boolean): void;
    function SetVehicleExtraColours(vehicle: number, pearlescentColor: number, wheelColor: number): void;
    function SetVehicleFixed(vehicle: number): void;
    function SetVehicleFlightNozzlePosition(vehicle: number, angleRatio: number): void;
    function N_0x30d779de7c4f6dd3(vehicle: number, angleRatio: number): void;
    function SetDesiredVerticalFlightPhase(vehicle: number, angleRatio: number): void;
    function SetPlaneVtolDesiredDirection(vehicle: number, angleRatio: number): void;
    function SetVehicleFlightNozzlePositionImmediate(vehicle: number, angle: number): void;
    function N_0x9aa47fff660cb932(vehicle: number, angle: number): void;
    function SetVerticalFlightPhase(vehicle: number, angle: number): void;
    function SetPlaneVtolDirection(vehicle: number, angle: number): void;
    function SetVehicleForceAfterburner(vehicle: number, toggle: boolean): void;
    function N_0xb055a34527cb8fd7(vehicle: number, toggle: boolean): void;
    function SetVehicleForwardSpeed(vehicle: number, speed: number): void;
    function SetVehicleFrictionOverride(vehicle: number, friction: number): void;
    function SetVehicleFuelLevel(vehicle: number, level: number): void;
    function SetVehicleFullbeam(vehicle: number, toggle: boolean): void;
    function SetVehicleGeneratesEngineShockingEvents(vehicle: number, toggle: boolean): void;
    function N_0x279d50de5652d935(vehicle: number, toggle: boolean): void;
    function SetVehicleGravity(vehicle: number, toggle: boolean): void;
    function SetVehicleGravityAmount(vehicle: number, gravity: number): void;
    function SetVehicleHandbrake(vehicle: number, toggle: boolean): void;
    function SetVehicleHandlingField(vehicle: number, class_: string, fieldName: string, value: number): void;
    function SetVehicleHandlingFloat(vehicle: number, class_: string, fieldName: string, value: number): void;
    function SetVehicleHandlingHashForAi(vehicle: number, hash: number): void;
    function N_0x10655fab9915623d(vehicle: number, hash: number): void;
    function SetVehicleHandlingInt(vehicle: number, class_: string, fieldName: string, value: number): void;
    function SetVehicleHandlingVector(vehicle: number, class_: string, fieldName: string): void;
    function SetVehicleHasBeenDrivenFlag(vehicle: number, toggle: boolean): void;
    function N_0x02398b627547189c(vehicle: number, toggle: boolean): void;
    function SetVehicleHasBeenOwnedByPlayer(vehicle: number, owned: boolean): void;
    function SetVehicleHasMutedSirens(vehicle: number, toggle: boolean): void;
    function DisableVehicleImpactExplosionActivation(vehicle: number, toggle: boolean): void;
    function SetDisableVehicleSirenSound(vehicle: number, toggle: boolean): void;
    function SetVehicleHasStrongAxles(vehicle: number, toggle: boolean): void;
    function SetVehicleHasUnbreakableLights(vehicle: number, p1: boolean): void;
    function N_0x1aa8a837d2169d94(vehicle: number, p1: boolean): void;
    function SetVehicleLightsCanBeVisiblyDamaged(vehicle: number, p1: boolean): void;
    function SetVehicleHighGear(vehicle: number, gear: number): void;
    function SetVehicleHornVariation(vehicle: number, value: number): void;
    function N_0x0350e7e17ba767d0(vehicle: number, value: number): void;
    function N_0xcda42c4bb9bde779(vehicle: number, value: number): void;
    function SetVehicleInactiveDuringPlayback(vehicle: number, toggle: boolean): void;
    function N_0x06582aff74894c75(vehicle: number, toggle: boolean): void;
    function SetVehicleIndicatorLights(vehicle: number, turnSignal: number, toggle: boolean): void;
    function SetVehicleIndividualDoorsLocked(vehicle: number, doorIndex: number, doorLockStatus: number): void;
    function SetPedTargettableVehicleDestroy(vehicle: number, doorIndex: number, doorLockStatus: number): void;
    function SetVehicleDoorDestroyType(vehicle: number, doorIndex: number, doorLockStatus: number): void;
    function SetVehicleInfluencesWantedLevel(vehicle: number, influenceWantedLevel: boolean): void;
    function N_0x0ad9e8f87ff7c16f(vehicle: number, influenceWantedLevel: boolean): void;
    function SetVehicleInteriorColor(vehicle: number, color: number): void;
    function SetVehicleInteriorColour(vehicle: number, color: number): void;
    function SetVehicleInteriorlight(vehicle: number, toggle: boolean): void;
    function SetVehicleIsConsideredByPlayer(vehicle: number, toggle: boolean): void;
    function SetVehicleIsRacing(vehicle: number, toggle: boolean): void;
    function SteerUnlockBias(vehicle: number, toggle: boolean): void;
    function SetVehicleIsStolen(vehicle: number, isStolen: boolean): void;
    function SetVehicleIsWanted(vehicle: number, state: boolean): void;
    function SetVehicleJetEngineOn(vehicle: number, toggle: boolean): void;
    function N_0xb8fbc8b1330ca9b4(vehicle: number, toggle: boolean): void;
    function SetVehicleKersAllowed(vehicle: number, toggle: boolean): void;
    function N_0x99c82f8a139f3e4e(vehicle: number, toggle: boolean): void;
    function SetVehicleHudSpecialAbilityBarActive(vehicle: number, toggle: boolean): void;
    function SetVehicleLightMultiplier(vehicle: number, multiplier: number): void;
    function SetVehicleLights(vehicle: number, state: number): void;
    function SetVehicleLightsMode(vehicle: number, p1: number): void;
    function N_0x1fd09e7390a74d54(vehicle: number, p1: number): void;
    function SetVehicleLivery(vehicle: number, livery: number): void;
    function SetVehicleLodMultiplier(vehicle: number, multiplier: number): void;
    function SetVehicleMaxSpeed(vehicle: number, speed: number): void;
    function N_0xbaa045b4e42f3c06(vehicle: number, speed: number): void;
    function SetVehicleMod(vehicle: number, modType: number, modIndex: number, customTires: boolean): void;
    function SetVehicleModColor_1(vehicle: number, paintType: number, color: number, pearlescentColor: number): void;
    function SetVehicleModColor_2(vehicle: number, paintType: number, color: number): void;
    function SetVehicleModKit(vehicle: number, modKit: number): void;
    function SetVehicleModelIsSuppressed(model: number, suppressed: boolean): void;
    function SetVehicleNameDebug(vehicle: number, name: string): void;
    function SetVehicleNeedsToBeHotwired(vehicle: number, toggle: boolean): void;
    function SetVehicleNeonLightEnabled(vehicle: number, index: number, toggle: boolean): void;
    function SetVehicleNeonLightsColor_2(vehicle: number, color: number): void;
    function SetVehicleNeonLightsColour(vehicle: number, r: number, g: number, b: number): void;
    function SetVehicleNitroEnabled(vehicle: number, toggle: boolean): void;
    function SetVehicleNumberPlateText(vehicle: number, plateText: string): void;
    function SetVehicleNumberPlateTextIndex(vehicle: number, plateIndex: number): void;
    function SetVehicleOilLevel(vehicle: number, level: number): void;
    function SetVehicleOnGroundProperly(vehicle: number): boolean;
    function SetVehicleOutOfControl(vehicle: number, killDriver: boolean, explodeOnImpact: boolean): void;
    function SetVehicleParachuteActive(vehicle: number, active: boolean): void;
    function SetVehicleParachuteModel(vehicle: number, modelHash: number): void;
    function VehicleSetCustomParachuteModel(vehicle: number, modelHash: number): void;
    function SetVehicleParachuteTextureVariation(vehicle: number, textureVariation: number): void;
    function VehicleSetCustomParachuteTexture(vehicle: number, textureVariation: number): void;
    function SetVehicleParachuteTextureVariatiion(vehicle: number, textureVariation: number): void;
    function SetVehiclePetrolTankHealth(vehicle: number, health: number): void;
    function SetVehiclePitchBias(vehicle: number, value: number): void;
    function SetVehiclePopulationBudget(p0: number): void;
    function SetVehicleProvidesCover(vehicle: number, toggle: boolean): void;
    function SetVehicleRadioEnabled(vehicle: number, toggle: boolean): void;
    function SetVehicleRadioLoud(vehicle: number, toggle: boolean): void;
    function SetVehicleRampLaunchModifier(vehicle: number, p1: number): void;
    function N_0xefc13b1ce30d755d(vehicle: number, p1: number): void;
    function SetVehicleRampSidewaysLaunchMotion(vehicle: number, toggle: boolean): void;
    function N_0x1bbac99c0bc53656(vehicle: number, toggle: boolean): void;
    function SetVehicleRampUpwardsLaunchMotion(vehicle: number, toggle: boolean): void;
    function N_0x756ae6e962168a04(vehicle: number, toggle: boolean): void;
    function SetVehicleReceivesRampDamage(vehicle: number, toggle: boolean): void;
    function SetRampVehicleReceivesRampDamage(vehicle: number, toggle: boolean): void;
    function SetVehicleReduceGrip(vehicle: number, toggle: boolean): void;
    function SetVehicleReduceTraction(vehicle: number, val: number): void;
    function N_0x6dee944e1ee90cfb(vehicle: number, val: number): void;
    function SetVehicleRocketBoostActive(vehicle: number, active: boolean): void;
    function SetVehicleRocketBoostPercentage(vehicle: number, percentage: number): void;
    function SetVehicleRocketBoostRefillTime(vehicle: number, time: number): void;
    function SetVehicleRollBias(vehicle: number, value: number): void;
    function SetVehicleRoofLivery(vehicle: number, livery: number): void;
    function N_0xa6d3a8750dc73270(vehicle: number, livery: number): void;
    function SetVehicleRudderBroken(vehicle: number, toggle: boolean): void;
    function SetVehicleSearchlight(heli: number, toggle: boolean, canBeUsedByAI: boolean): void;
    function SetVehicleShadowEffect(vehicle: number, p1: number, p2: number): void;
    function N_0xf0e4ba16d1db546c(vehicle: number, p1: number, p2: number): void;
    function SetVehicleShootAtTarget(
        driver: number,
        entity: number,
        xTarget: number,
        yTarget: number,
        zTarget: number
    ): void;
    function SetVehicleSilent(vehicle: number, toggle: boolean): void;
    function N_0x9d44fcce98450843(vehicle: number, toggle: boolean): void;
    function SetVehicleSiren(vehicle: number, toggle: boolean): void;
    function SetVehicleSt(vehicle: number, toggle: boolean): void;
    function N_0x1cf38d529d7441d9(vehicle: number, toggle: boolean): void;
    function SetVehicleStartupRevSound(vehicle: number, p1: string, p2: string): void;
    function N_0xf1f8157b8c3f171c(vehicle: number, p1: string, p2: string): void;
    function SetVehicleSteerBias(vehicle: number, value: number): void;
    function SetVehicleSteeringAngle(vehicle: number, angle: number): void;
    function SetVehicleSteeringBiasScalar(vehicle: number, scalar: number): void;
    function N_0x9007a2f21dc108d4(vehicle: number, scalar: number): void;
    function SetVehicleSteeringScale(vehicle: number, scale: number): void;
    function SetVehicleStrong(vehicle: number, toggle: boolean): void;
    function SetVehicleSuspensionHeight(vehicle: number, newHeight: number): void;
    function SetVehicleTankTurretPosition(vehicle: number, position: number, p2: boolean): void;
    function N_0x56b94c6d7127dfba(vehicle: number, position: number, p2: boolean): void;
    function SetVehicleTimedExplosion(vehicle: number, ped: number, toggle: boolean): void;
    function SetVehicleTowTruckArmPosition(vehicle: number, position: number): void;
    function SetTowTruckCraneRaised(vehicle: number, position: number): void;
    function SetTowTruckCraneHeight(vehicle: number, position: number): void;
    function SetVehicleTurboPressure(vehicle: number, pressure: number): void;
    function SetVehicleTurretSpeedThisFrame(vehicle: number, speed: number): void;
    function N_0x1093408b4b9d1146(vehicle: number, speed: number): void;
    function SetVehicleTurretUnk(vehicle: number, index: number, toggle: boolean): void;
    function N_0xc60060eb0d8ac7b1(vehicle: number, index: number, toggle: boolean): void;
    function SetVehicleTyreBurst(vehicle: number, index: number, onRim: boolean, p3: number): void;
    function SetVehicleTyreFixed(vehicle: number, tyreIndex: number): void;
    function SetVehicleTyreSmokeColor(vehicle: number, r: number, g: number, b: number): void;
    function SetVehicleTyresCanBurst(vehicle: number, toggle: boolean): void;
    function SetVehicleUndriveable(vehicle: number, toggle: boolean): void;
    function SetVehicleUnkDamageMultiplier(vehicle: number, multiplier: number): void;
    function N_0x45a561a9421ab6ad(vehicle: number, multiplier: number): void;
    function SetVehicleUseAlternateHandling(vehicle: number, toggle: boolean): void;
    function N_0x1d97d1e3a70a649f(vehicle: number, toggle: boolean): void;
    function SetVehicleUseCutsceneWheelCompression(p0: number, p1: boolean, p2: boolean, p3: boolean): number;
    function SetAllVehiclesSpawn(p0: number, p1: boolean, p2: boolean, p3: boolean): number;
    function N_0xe023e8ac4ef7c117(p0: number, p1: boolean, p2: boolean, p3: boolean): number;
    function SetVehicleUsePlayerLightSettings(vehicle: number, toggle: boolean): void;
    function N_0xc45c27ef50f36adc(vehicle: number, toggle: boolean): void;
    function SetVehicleUsesLargeRearRamp(vehicle: number, toggle: boolean): void;
    function N_0xcac66558b944da67(vehicle: number, toggle: boolean): void;
    function SetVehicleWeaponCapacity(vehicle: number, weaponIndex: number, capacity: number): void;
    function N_0x44cd1f493db2a0a6(vehicle: number, weaponIndex: number, capacity: number): void;
    function SetVehicleWeaponsDisabled(vehicle: number, weaponSlot: number): void;
    function N_0x86b4b6212cb8b627(vehicle: number, weaponSlot: number): void;
    function SetVehicleWheelBrakePressure(vehicle: number, wheelIndex: number, pressure: number): void;
    function SetVehicleWheelFlags(vehicle: number, wheelIndex: number, flags: number): void;
    function SetVehicleWheelHealth(vehicle: number, wheelIndex: number, health: number): void;
    function SetVehicleWheelIsPowered(vehicle: number, wheelIndex: number, powered: boolean): void;
    function SetVehicleWheelPower(vehicle: number, wheelIndex: number, power: number): void;
    function SetVehicleWheelRimColliderSize(vehicle: number, wheelIndex: number, value: number): void;
    function SetVehicleWheelRotationSpeed(vehicle: number, wheelIndex: number, speed: number): void;
    function SetVehicleWheelSize(vehicle: number, size: number): boolean;
    function SetVehicleWheelTireColliderSize(vehicle: number, wheelIndex: number, value: number): void;
    function SetVehicleWheelTireColliderWidth(vehicle: number, wheelIndex: number, value: number): void;
    function SetVehicleWheelTractionVectorLength(vehicle: number, wheelIndex: number, length: number): void;
    function SetVehicleWheelType(vehicle: number, wheelType: number): void;
    function SetVehicleWheelWidth(vehicle: number, width: number): boolean;
    function SetVehicleWheelXOffset(vehicle: number, wheelIndex: number, offset: number): void;
    function SetVehicleWheelYRotation(vehicle: number, wheelIndex: number, value: number): void;
    function SetVehicleWheelXrot(vehicle: number, wheelIndex: number, value: number): void;
    function SetVehicleWheelieState(vehicle: number, state: number): void;
    function SetVehicleWheelsCanBreak(vehicle: number, enabled: boolean): void;
    function SetVehicleWheelsCanBreakOffWhenBlowUp(vehicle: number, toggle: boolean): void;
    function SetVehicleMaxStrTrap(vehicle: number, toggle: boolean): void;
    function SetVehicleWheelsDealDamage(vehicle: number, toggle: boolean): void;
    function N_0x2970eaa18fd5e42f(vehicle: number, toggle: boolean): void;
    function SetVehicleWindowTint(vehicle: number, tint: number): void;
    function SetVehicleXenonLightsColor(vehicle: number, color: number): void;
    function N_0xe41033b25d003a07(vehicle: number, color: number): void;
    function SetVehicleHeadlightsColour(vehicle: number, color: number): void;
    function SetVehicleXenonLightsColour(vehicle: number, color: number): void;
    function SetVehicleXenonLightsCustomColor(vehicle: number, red: number, green: number, blue: number): void;
    function SetVisualSettingFloat(name: string, value: number): void;
    function SetWantedLevelDifficulty(player: number, difficulty: number): void;
    function SetWantedLevelHiddenEvasionTime(player: number, wantedLevel: number, lossTime: number): void;
    function N_0x49b856b1360c47c7(player: number, wantedLevel: number, lossTime: number): void;
    function SetWantedLevelMultiplier(multiplier: number): void;
    function SetWarningMessage(
        entryLine1: string,
        instructionalKey: number,
        entryLine2: string,
        p3: boolean,
        p4: number,
        background: string,
        p6: string,
        showBg: boolean,
        errorCode: number
    ): void;
    function SetWarningMessageListRow(
        index: number,
        name: string,
        cash: number,
        rp: number,
        lvl: number,
        colour: number
    ): boolean;
    function N_0x0c5a80a9e096d529(
        index: number,
        name: string,
        cash: number,
        rp: number,
        lvl: number,
        colour: number
    ): boolean;
    function SetWarningMessageWithAlert(
        labelTitle: string,
        labelMsg: string,
        p2: number,
        p3: number,
        labelMsg2: string,
        p5: boolean,
        p6: number,
        p7: number,
        p8: string,
        p9: string,
        background: boolean,
        errorCode: number
    ): void;
    function N_0x15803fec3b9a872b(
        labelTitle: string,
        labelMsg: string,
        p2: number,
        p3: number,
        labelMsg2: string,
        p5: boolean,
        p6: number,
        p7: number,
        p8: string,
        p9: string,
        background: boolean,
        errorCode: number
    ): void;
    function DrawFrontendAlert(
        labelTitle: string,
        labelMsg: string,
        p2: number,
        p3: number,
        labelMsg2: string,
        p5: boolean,
        p6: number,
        p7: number,
        p8: string,
        p9: string,
        background: boolean,
        errorCode: number
    ): void;
    function SetWarningMessageWithHeader(
        titleMsg: string,
        entryLine1: string,
        flags: number,
        promptMsg: string,
        p4: boolean,
        p5: number,
        background: boolean,
        showBg: boolean
    ): number;
    function SetWarningMessage_2(
        titleMsg: string,
        entryLine1: string,
        flags: number,
        promptMsg: string,
        p4: boolean,
        p5: number,
        background: boolean,
        showBg: boolean
    ): number;
    function SetWarningMessageWithHeaderAndSubstringFlags(
        entryHeader: string,
        entryLine1: string,
        instructionalKey: number,
        entryLine2: string,
        p4: boolean,
        p5: number,
        p6: number,
        p9: boolean
    ): LuaMultiReturn<[number, number]>;
    function SetWarningMessage_3(
        entryHeader: string,
        entryLine1: string,
        instructionalKey: number,
        entryLine2: string,
        p4: boolean,
        p5: number,
        p6: number,
        p9: boolean
    ): LuaMultiReturn<[number, number]>;
    function SetWarningMessageWithHeaderUnk(
        entryHeader: string,
        entryLine1: string,
        flags: number,
        entryLine2: string,
        p4: boolean,
        p5: number,
        showBg: boolean,
        p9: number,
        p10: number
    ): LuaMultiReturn<[number, number]>;
    function SetWaterAreaClipRect(minX: number, minY: number, maxX: number, maxY: number): void;
    function SetWaterQuadAlpha(waterQuad: number, a0: number, a1: number, a2: number, a3: number): boolean;
    function SetWaterQuadBounds(waterQuad: number, minX: number, minY: number, maxX: number, maxY: number): boolean;
    function SetWaterQuadHasLimitedDepth(waterQuad: number, hasLimitedDepth: boolean): boolean;
    function SetWaterQuadIsInvisible(waterQuad: number, isInvisible: boolean): boolean;
    function SetWaterQuadLevel(waterQuad: number, level: number): boolean;
    function SetWaterQuadNoStencil(waterQuad: number, noStencil: boolean): boolean;
    function SetWaterQuadType(waterQuad: number, _type: number): boolean;
    function SetWaveQuadAmplitude(waveQuad: number, amplitude: number): boolean;
    function SetWaveQuadBounds(waveQuad: number, minX: number, minY: number, maxX: number, maxY: number): boolean;
    function SetWaveQuadDirection(waveQuad: number, directionX: number, directionY: number): boolean;
    function SetWaypointOff(): void;
    function SetWeaponAnimationOverride(ped: number, animStyle: number): void;
    function SetWeaponDamageModifier(weaponHash: number, damageMultiplier: number): void;
    function N_0x4757f00bc6323cfe(weaponHash: number, damageMultiplier: number): void;
    function SetWeaponDamageModifierThisFrame(weaponHash: number, damageMultiplier: number): void;
    function SetWeaponExplosionRadiusMultiplier(weaponHash: number, multiplier: number): void;
    function SetWeaponObjectLiveryColor(weaponObject: number, camoComponentHash: number, colorIndex: number): void;
    function N_0x5da825a85d0ea6e6(weaponObject: number, camoComponentHash: number, colorIndex: number): void;
    function SetWeaponObjectTintIndex(weapon: number, tintIndex: number): void;
    function SetWeaponRecoilShakeAmplitude(weaponHash: number, amplitude: number): void;
    function SetWeaponsNoAimBlocking(state: boolean): void;
    function SetWeaponsNoAutoreload(state: boolean): void;
    function SetWeaponsNoAutoswap(state: boolean): void;
    function SetWeatherOwnedByNetwork(network: boolean): void;
    function SetWeatherTypeNow(weatherType: string): void;
    function SetWeatherTypeNowPersist(weatherType: string): void;
    function SetWeatherTypeOvertimePersist(weatherType: string, time: number): void;
    function SetWeatherTypeOverTime(weatherType: string, time: number): void;
    function SetWeatherTypePersist(weatherType: string): void;
    function SetWeatherTypeTransition(weatherType1: number, weatherType2: number, percentWeather2: number): void;
    function SetWidescreenBorders(p0: boolean, p1: number): void;
    function SetWidescreenFormat(p0: number): void;
    function SetWind(speed: number): void;
    function SetWindDirection(direction: number): void;
    function SetWindSpeed(speed: number): void;
    function SetZoneEnabled(zoneId: number, toggle: boolean): void;
    function Settimera(value: number): void;
    function Settimerb(value: number): void;
    function SetupShopPedApparelQuery(p0: number, p1: number, p2: number, p3: number): number;
    function N_0x50f457823ce6eb5f(p0: number, p1: number, p2: number, p3: number): number;
    function SetupShopPedApparelQueryTu(
        character: number,
        p1: number,
        p2: number,
        p3: boolean,
        p4: number,
        componentId: number
    ): number;
    function GetNumPropsFromOutfit(
        character: number,
        p1: number,
        p2: number,
        p3: boolean,
        p4: number,
        componentId: number
    ): number;
    function SetupShopPedOutfitQuery(character: number, p1: boolean): number;
    function N_0xf3fbe2d50a6a8c28(character: number, p1: boolean): number;
    function ShakeCam(cam: number, _type: string, amplitude: number): void;
    function ShakeCinematicCam(p0: string, p1: number): void;
    function ShakeGameplayCam(shakeName: string, intensity: number): void;
    function ShakeScriptGlobal(p0: string, p1: number): void;
    function N_0xf4c8cf9e353afeca(p0: string, p1: number): void;
    function ShiftLeft(value: number, bitShift: number): number;
    function ShiftRight(value: number, bitShift: number): number;
    function ShootSingleBulletBetweenCoords(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        damage: number,
        pureAccuracy: boolean,
        weaponHash: number,
        ownerPed: number,
        isAudible: boolean,
        isInvisible: boolean,
        speed: number
    ): void;
    function ShootSingleBulletBetweenCoordsIgnoreEntity(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        damage: number,
        p7: boolean,
        weaponHash: number,
        ownerPed: number,
        isAudible: boolean,
        isInvisible: boolean,
        speed: number,
        entity: number
    ): void;
    function N_0xe3a7742e0b7a2f8b(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        damage: number,
        p7: boolean,
        weaponHash: number,
        ownerPed: number,
        isAudible: boolean,
        isInvisible: boolean,
        speed: number,
        entity: number
    ): void;
    function ShootSingleBulletBetweenCoordsPresetParams(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        damage: number,
        p7: boolean,
        weaponHash: number,
        ownerPed: number,
        isAudible: boolean,
        isInvisible: boolean,
        speed: number,
        entity: number
    ): void;
    function ShootSingleBulletBetweenCoordsIgnoreEntityNew(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        damage: number,
        p7: boolean,
        weaponHash: number,
        ownerPed: number,
        isAudible: boolean,
        isInvisible: boolean,
        speed: number,
        entity: number,
        p14: boolean,
        p15: boolean,
        p16: boolean,
        p17: boolean
    ): void;
    function N_0xbfe5756e7407064a(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        damage: number,
        p7: boolean,
        weaponHash: number,
        ownerPed: number,
        isAudible: boolean,
        isInvisible: boolean,
        speed: number,
        entity: number,
        p14: boolean,
        p15: boolean,
        p16: boolean,
        p17: boolean
    ): void;
    function ShootSingleBulletBetweenCoordsWithExtraParams(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        damage: number,
        p7: boolean,
        weaponHash: number,
        ownerPed: number,
        isAudible: boolean,
        isInvisible: boolean,
        speed: number,
        entity: number,
        p14: boolean,
        p15: boolean,
        p16: boolean,
        p17: boolean
    ): void;
    function ShouldUseMetricMeasurements(): boolean;
    function N_0xd3d15555431ab793(): boolean;
    function IsGameUsingMetricMeasurementSystem(): boolean;
    function ShowCrewIndicatorOnBlip(blip: number, toggle: boolean): void;
    function N_0xdcfb5d4db8bf367e(blip: number, toggle: boolean): void;
    function SetBlipCrew(blip: number, toggle: boolean): void;
    function ShowFriendIndicatorOnBlip(blip: number, toggle: boolean): void;
    function N_0x23c3eb807312f01a(blip: number, toggle: boolean): void;
    function SetBlipFriend(blip: number, toggle: boolean): void;
    function ShowHasCompletedIndicatorOnBlip(blip: number, toggle: boolean): void;
    function ShowHeadingIndicatorOnBlip(blip: number, toggle: boolean): void;
    function N_0x5fbca48327b914df(blip: number, toggle: boolean): void;
    function ShowHeightOnBlip(blip: number, toggle: boolean): void;
    function N_0x75a16c3da34f1245(blip: number, toggle: boolean): void;
    function ShowHudComponentThisFrame(id: number): void;
    function ShowNumberOnBlip(blip: number, _number: number): void;
    function ShowOutlineIndicatorOnBlip(blip: number, toggle: boolean): void;
    function N_0xb81656bc81fe24d1(blip: number, toggle: boolean): void;
    function SetBlipFriendly(blip: number, toggle: boolean): void;
    function ShowScriptedHudComponentThisFrame(id: number): void;
    function ShowSigninUi(): void;
    function N_0x60e892ba4f5bdca4(): void;
    function ShowStartMissionInstructionalButton(p0: boolean): void;
    function N_0xf1a6c18b35bcade6(p0: boolean): void;
    function ShowTickOnBlip(blip: number, toggle: boolean): void;
    function N_0x74513ea3e505181e(blip: number, toggle: boolean): void;
    function SetBlipChecked(blip: number, toggle: boolean): void;
    function ShutdownAndLaunchSinglePlayerGame(): void;
    function ShutdownAndLoadMostRecentSave(): boolean;
    function N_0x9eca15adfe141431(): boolean;
    function ShutdownCreatorBudget(): void;
    function N_0xcce26000e9a6fad7(): void;
    function ShutdownLoadingScreen(): void;
    function ShutdownLoadingScreenNui(): void;
    function SimulatePlayerInputGait(
        player: number,
        amount: number,
        gaitType: number,
        rotationSpeed: number,
        p4: boolean,
        p5: boolean
    ): void;
    function Sin(value: number): number;
    function SkipRadioForward(): void;
    function SkipTimeInPlaybackRecordedVehicle(vehicle: number, time: number): void;
    function SkipToEndAndStopPlaybackRecordedVehicle(vehicle: number): void;
    function SkipToNextScriptedConversationLine(): void;
    function SlerpNearQuaternion(
        t: number,
        x: number,
        y: number,
        z: number,
        w: number,
        x1: number,
        y1: number,
        z1: number,
        w1: number
    ): LuaMultiReturn<[number, number, number, number]>;
    function N_0xf2f6a2fa49278625(
        t: number,
        x: number,
        y: number,
        z: number,
        w: number,
        x1: number,
        y1: number,
        z1: number,
        w1: number
    ): LuaMultiReturn<[number, number, number, number]>;
    function SlideObject(
        object: number,
        toX: number,
        toY: number,
        toZ: number,
        speedX: number,
        speedY: number,
        speedZ: number,
        collision: boolean
    ): boolean;
    function SmashVehicleWindow(vehicle: number, windowIndex: number): void;
    function SoundVehicleHornThisFrame(vehicle: number): void;
    function N_0x9c11908013ea4715(vehicle: number): void;
    function SpawnpointsCancelSearch(): void;
    function N_0xfee4a5459472a9f8(): void;
    function SpawnpointsGetNumSearchResults(): number;
    function N_0xa635c11b8c44afc2(): number;
    function SpawnpointsGetSearchResult(randomInt: number): LuaMultiReturn<[number, number, number]>;
    function N_0x280c7e3ac7f56e90(randomInt: number): LuaMultiReturn<[number, number, number]>;
    function SpawnpointsGetSearchResultFlags(p0: number, p1: number): number;
    function N_0xb782f8238512bad5(p0: number, p1: number): number;
    function SpawnpointsIsSearchActive(): boolean;
    function N_0x3c67506996001f5e(): boolean;
    function SpawnpointsIsSearchComplete(): boolean;
    function N_0xa586fbeb32a53dbb(): boolean;
    function SpawnpointsIsSearchFailed(): boolean;
    function N_0xf445de8da80a1792(): boolean;
    function SpawnpointsStartSearch(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        interiorFlags: number,
        scale: number,
        duration: number
    ): void;
    function N_0x2df9038c90ad5264(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        interiorFlags: number,
        scale: number,
        duration: number
    ): void;
    function SpawnpointsStartSearchInAngledArea(
        x: number,
        y: number,
        z: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        interiorFlags: number,
        scale: number,
        duration: number
    ): void;
    function N_0xb2aff10216defa2f(
        x: number,
        y: number,
        z: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        interiorFlags: number,
        scale: number,
        duration: number
    ): void;
    function SpecialAbilityActivate(player: number): void;
    function N_0x821fdc827d6f4090(player: number): void;
    function SpecialAbilityChargeAbsolute(player: number, p1: number, p2: boolean): void;
    function SpecialAbilityChargeContinuous(player: number, p2: number): void;
    function SpecialAbilityChargeLarge(player: number, p1: boolean, p2: boolean): void;
    function SpecialAbilityChargeMedium(player: number, p1: boolean, p2: boolean): void;
    function SpecialAbilityChargeNormalized(player: number, normalizedValue: number, p2: boolean): void;
    function ResetSpecialAbilityControlsCinematic(player: number, normalizedValue: number, p2: boolean): void;
    function SpecialAbilityChargeOnMissionFailed(player: number): void;
    function N_0xc9a763d8fe87436a(player: number): void;
    function SpecialAbilityChargeSmall(player: number, p1: boolean, p2: boolean): void;
    function SpecialAbilityDeactivate(player: number): void;
    function SpecialAbilityDeactivateFast(player: number): void;
    function SpecialAbilityDeplete(p0: number): void;
    function N_0x17f7471eaca78290(p0: number): void;
    function SpecialAbilityDepleteMeter(player: number, p1: boolean): void;
    function SpecialAbilityFillMeter(player: number, p1: boolean): void;
    function SpecialAbilityLock(playerModel: number): void;
    function SpecialAbilityReset(player: number): void;
    function SpecialAbilityUnlock(playerModel: number): void;
    function Sqrt(value: number): number;
    function StabiliseEntityAttachedToHeli(vehicle: number, entity: number, p2: number): void;
    function N_0x374706271354cb18(vehicle: number, entity: number, p2: number): void;
    function StartAlarm(alarmName: string, p2: boolean): void;
    function StartAudioScene(scene: string): boolean;
    function StartBenchmarkRecording(): void;
    function N_0x92790862e36c2ada(): void;
    function StartCutscene(flags: number): void;
    function StartCutsceneAtCoords(x: number, y: number, z: number, flags: number): void;
    function StartEntityFire(entity: number): number;
    function StartExpensiveSynchronousShapeTestLosProbe(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        flags: number,
        entity: number,
        p8: number
    ): number;
    function CastRayPointToPoint(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        flags: number,
        entity: number,
        p8: number
    ): number;
    function StartShapeTestRay(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        flags: number,
        entity: number,
        p8: number
    ): number;
    function StartFindExternalKvp(resourceName: string, prefix: string): number;
    function StartFindKvp(prefix: string): number;
    function StartFiringAmnesty(duration: number): void;
    function StartGpsCustomRoute(hudColor: number, displayOnFoot: boolean, followPlayer: boolean): void;
    function N_0xdb34e8d56fc13b08(hudColor: number, displayOnFoot: boolean, followPlayer: boolean): void;
    function StartGpsMultiRoute(hudColor: number, routeFromPlayer: boolean, displayOnFoot: boolean): void;
    function N_0x3d3d15af7bcaaf83(hudColor: number, routeFromPlayer: boolean, displayOnFoot: boolean): void;
    function StartNetworkedParticleFxLoopedOnEntity(
        effectName: string,
        entity: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        xRot: number,
        yRot: number,
        zRot: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): number;
    function N_0x6f60e89a7b64ee1d(
        effectName: string,
        entity: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        xRot: number,
        yRot: number,
        zRot: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): number;
    function StartParticleFxLoopedOnEntity_2(
        effectName: string,
        entity: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        xRot: number,
        yRot: number,
        zRot: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): number;
    function StartNetworkedParticleFxLoopedOnEntityBone(
        effectName: string,
        entity: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        xRot: number,
        yRot: number,
        zRot: number,
        boneIndex: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): number;
    function N_0xdde23f30cc5a0f03(
        effectName: string,
        entity: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        xRot: number,
        yRot: number,
        zRot: number,
        boneIndex: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): number;
    function StartParticleFxLoopedOnEntityBone_2(
        effectName: string,
        entity: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        xRot: number,
        yRot: number,
        zRot: number,
        boneIndex: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): number;
    function StartNetworkedParticleFxNonLoopedAtCoord(
        effectName: string,
        xPos: number,
        yPos: number,
        zPos: number,
        xRot: number,
        yRot: number,
        zRot: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): boolean;
    function StartParticleFxNonLoopedAtCoord_2(
        effectName: string,
        xPos: number,
        yPos: number,
        zPos: number,
        xRot: number,
        yRot: number,
        zRot: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): boolean;
    function StartNetworkedParticleFxNonLoopedOnEntity(
        effectName: string,
        entity: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        scale: number,
        axisX: boolean,
        axisY: boolean,
        axisZ: boolean
    ): boolean;
    function StartParticleFxNonLoopedOnEntity_2(
        effectName: string,
        entity: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        scale: number,
        axisX: boolean,
        axisY: boolean,
        axisZ: boolean
    ): boolean;
    function StartNetworkedParticleFxNonLoopedOnEntityBone(
        effectName: string,
        entity: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        boneIndex: number,
        scale: number,
        axisX: boolean,
        axisY: boolean,
        axisZ: boolean
    ): boolean;
    function StartNetworkedParticleFxNonLoopedOnPedBone(
        effectName: string,
        ped: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        boneIndex: number,
        scale: number,
        axisX: boolean,
        axisY: boolean,
        axisZ: boolean
    ): boolean;
    function StartParticleFxNonLoopedOnPedBone_2(
        effectName: string,
        ped: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        boneIndex: number,
        scale: number,
        axisX: boolean,
        axisY: boolean,
        axisZ: boolean
    ): boolean;
    function StartNewScript(scriptName: string, stackSize: number): number;
    function StartNewScriptWithArgs(
        scriptName: string,
        argCount: number,
        stackSize: number
    ): LuaMultiReturn<[number, number]>;
    function StartNewScriptWithNameHash(scriptHash: number, stackSize: number): number;
    function StartNewStreamedScript(scriptHash: number, stackSize: number): number;
    function StartNewScriptWithNameHashAndArgs(
        scriptHash: number,
        argCount: number,
        stackSize: number
    ): LuaMultiReturn<[number, number]>;
    function StartNewStreamedScriptWithArgs(
        scriptHash: number,
        argCount: number,
        stackSize: number
    ): LuaMultiReturn<[number, number]>;
    function StartParticleFxLoopedAtCoord(
        effectName: string,
        x: number,
        y: number,
        z: number,
        xRot: number,
        yRot: number,
        zRot: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean,
        p11: boolean
    ): number;
    function StartParticleFxLoopedOnEntity(
        effectName: string,
        entity: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        xRot: number,
        yRot: number,
        zRot: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): number;
    function StartParticleFxLoopedOnEntityBone(
        effectName: string,
        entity: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        xRot: number,
        yRot: number,
        zRot: number,
        boneIndex: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): number;
    function StartParticleFxLoopedOnPedBone(
        effectName: string,
        ped: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        xRot: number,
        yRot: number,
        zRot: number,
        boneIndex: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): number;
    function StartParticleFxNonLoopedAtCoord(
        effectName: string,
        xPos: number,
        yPos: number,
        zPos: number,
        xRot: number,
        yRot: number,
        zRot: number,
        scale: number,
        xAxis: boolean,
        yAxis: boolean,
        zAxis: boolean
    ): number;
    function StartParticleFxNonLoopedOnEntity(
        effectName: string,
        entity: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        scale: number,
        axisX: boolean,
        axisY: boolean,
        axisZ: boolean
    ): boolean;
    function StartParticleFxNonLoopedOnPedBone(
        effectName: string,
        ped: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        boneIndex: number,
        scale: number,
        axisX: boolean,
        axisY: boolean,
        axisZ: boolean
    ): boolean;
    function StartPetrolTrailDecals(p0: number): void;
    function N_0x99ac7f0d8b9c893d(p0: number): void;
    function StartPlaybackRecordedVehicle(vehicle: number, recording: number, script: string, p3: boolean): void;
    function StartPlaybackRecordedVehicleUsingAi(
        vehicle: number,
        recording: number,
        script: string,
        speed: number,
        drivingStyle: number
    ): void;
    function StartPlaybackRecordedVehicleWithFlags(
        vehicle: number,
        recording: number,
        script: string,
        flags: number,
        time: number,
        drivingStyle: number
    ): void;
    function StartPlayerSwitch(_from: number, to: number, flags: number, switchType: number): void;
    function StartPlayerTeleport(
        player: number,
        x: number,
        y: number,
        z: number,
        heading: number,
        teleportWithVehicle: boolean,
        findCollisionLand: boolean,
        p7: boolean
    ): void;
    function StartPreloadedConversation(): void;
    function StartRecording(mode: number): void;
    function N_0xc3ac2fff9612ac81(mode: number): void;
    function StartRopeUnwindingFront(ropeId: number): void;
    function StartRopeWinding(ropeId: number): void;
    function StartSaveArrayWithSize(size: number, arrayName: string): number;
    function StartSaveArray(size: number, arrayName: string): number;
    function StartSaveData(p1: number, p2: boolean): number;
    function StartSaveStructWithSize(size: number, structName: string): number;
    function StartSaveStruct(size: number, structName: string): number;
    function StartScriptConversation(p0: boolean, p1: boolean, p2: boolean, p3: boolean): void;
    function StartScriptFire(X: number, Y: number, Z: number, maxChildren: number, isGasFire: boolean): number;
    function StartScriptPhoneConversation(p0: boolean, p1: boolean): void;
    function StartShapeTestBound(entity: number, flags1: number, flags2: number): number;
    function N_0x37181417ce7c8900(entity: number, flags1: number, flags2: number): number;
    function StartShapeTestBoundingBox(entity: number, flags1: number, flags2: number): number;
    function N_0x052837721a854ec7(entity: number, flags1: number, flags2: number): number;
    function StartShapeTestBox(
        x: number,
        y: number,
        z: number,
        x1: number,
        y1: number,
        z1: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        p9: number,
        flags: number,
        entity: number,
        p12: number
    ): number;
    function N_0xfe466162c4401d18(
        x: number,
        y: number,
        z: number,
        x1: number,
        y1: number,
        z1: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        p9: number,
        flags: number,
        entity: number,
        p12: number
    ): number;
    function StartShapeTestCapsule(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        radius: number,
        flags: number,
        entity: number,
        p9: number
    ): number;
    function Cast_3dRayPointToPoint(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        radius: number,
        flags: number,
        entity: number,
        p9: number
    ): number;
    function StartShapeTestLosProbe(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        flags: number,
        entity: number,
        p8: number
    ): number;
    function N_0x7ee9f5d83dd4f90e(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        flags: number,
        entity: number,
        p8: number
    ): number;
    function StartShapeTestSurroundingCoords(
        flag: number,
        entity: number,
        flag2: number
    ): LuaMultiReturn<[number, number, Vector3]>;
    function N_0xff6be494c7987f34(
        flag: number,
        entity: number,
        flag2: number
    ): LuaMultiReturn<[number, number, Vector3]>;
    function StartShapeTestSweptSphere(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        radius: number,
        flags: number,
        entity: number,
        p9: number
    ): number;
    function N_0xe6ac6c45fbe83004(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        radius: number,
        flags: number,
        entity: number,
        p9: number
    ): number;
    function StartShapeTestCapsule_2(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        radius: number,
        flags: number,
        entity: number,
        p9: number
    ): number;
    function StartVehicleAlarm(vehicle: number): void;
    function StartVehicleHorn(vehicle: number, duration: number, mode: number, forever: boolean): void;
    function StatClearSlotForReload(statSlot: number): number;
    function StatDeleteSlot(p0: number): number;
    function StatGetBool(statHash: number, p2: number): LuaMultiReturn<[boolean, boolean]>;
    function StatGetBoolMasked(statName: number, mask: number, p2: number): boolean;
    function StatGetCancelSaveMigrationStatus(): number;
    function N_0x567384dfa67029e6(): number;
    function StatGetDate(statHash: number, p2: number, p3: number): LuaMultiReturn<[boolean, number]>;
    function StatGetFloat(statHash: number, p2: number): LuaMultiReturn<[boolean, number]>;
    function StatGetInt(statHash: number, p2: number): LuaMultiReturn<[boolean, number]>;
    function StatGetLicensePlate(statName: number): string;
    function StatGetMaskedInt(p0: number, p2: number, p3: number, p4: number): LuaMultiReturn<[boolean, number]>;
    function StatGetNumberOfDays(statName: number): number;
    function N_0xe0e854f5280fb769(statName: number): number;
    function StatGetNumberOfHours(statName: number): number;
    function N_0xf2d4b2fe415aafc3(statName: number): number;
    function StatGetNumberOfMinutes(statName: number): number;
    function N_0x7583b4be4c5a41b5(statName: number): number;
    function StatGetNumberOfSeconds(statName: number): number;
    function N_0x2ce056ff3723f00b(statName: number): number;
    function StatGetPackedBoolMask(p0: number): number;
    function N_0xf4d8e7ac2a27758c(p0: number): number;
    function StatGetPackedIntMask(p0: number): number;
    function N_0x94f12abf9c79e339(p0: number): number;
    function StatGetPos(p0: number, p4: number): LuaMultiReturn<[boolean, number, number, number]>;
    function StatGetSaveMigrationConsumeContentUnlockStatus(p0: number): LuaMultiReturn<[number, number]>;
    function N_0xce5aa445aba8dee0(p0: number): LuaMultiReturn<[number, number]>;
    function StatGetSaveMigrationStatus(data: number): LuaMultiReturn<[number, number]>;
    function N_0x886913bbeaca68c1(data: number): LuaMultiReturn<[number, number]>;
    function StatGetString(statHash: number, p1: number): string;
    function StatGetUserId(p0: number): string;
    function StatIncrement(statName: number, value: number): void;
    function StatLoad(p0: number): boolean;
    function StatLoadPending(p0: number): boolean;
    function StatMigrateSave(platformName: string): boolean;
    function N_0xa5c80d8e768a9e66(platformName: string): boolean;
    function StatSave(p0: number, p1: boolean, p2: number): boolean;
    function StatSaveMigrationCancel(): boolean;
    function N_0x4fef53183c3c6414(): boolean;
    function StatSaveMigrationConsumeContentUnlock(
        contentId: number,
        srcPlatform: string,
        srcGamerHandle: string
    ): boolean;
    function N_0x3270f67eed31fbc1(contentId: number, srcPlatform: string, srcGamerHandle: string): boolean;
    function StatSaveMigrationStatusStart(): boolean;
    function N_0xc70ddce56d0d3a99(): boolean;
    function StatSavePending(): boolean;
    function StatSavePendingOrRequested(): boolean;
    function StatSetBlockSaves(toggle: boolean): void;
    function N_0xf434a10ba01c37d0(toggle: boolean): void;
    function StatSetBool(statName: number, value: boolean, save: boolean): boolean;
    function StatSetBoolMasked(statName: number, value: boolean, mask: number, save: boolean): boolean;
    function StatSetCheatIsActive(): void;
    function N_0x047cbed6f6f8b63c(): void;
    function StatSetCurrentPosixTime(statName: number, p1: boolean): boolean;
    function StatSetDate(statName: number, numFields: number, save: boolean): LuaMultiReturn<[boolean, number]>;
    function StatSetFloat(statName: number, value: number, save: boolean): boolean;
    function StatSetGxtLabel(statName: number, value: string, save: boolean): boolean;
    function StatSetInt(statName: number, value: number, save: boolean): boolean;
    function StatSetLicensePlate(statName: number, str: string): boolean;
    function StatSetMaskedInt(statName: number, p1: number, p2: number, p3: number, save: boolean): boolean;
    function StatSetPos(statName: number, x: number, y: number, z: number, save: boolean): boolean;
    function StatSetProfileSettingValue(profileSetting: number, value: number): void;
    function N_0x68f01422be1d838f(profileSetting: number, value: number): void;
    function StatSetProfileSetting(profileSetting: number, value: number): void;
    function StatSetString(statName: number, value: string, save: boolean): boolean;
    function StatSetUserId(statName: number, value: string, save: boolean): boolean;
    function StatSlotIsLoaded(p0: number): boolean;
    function StopAlarm(alarmName: string, toggle: boolean): void;
    function StopAllAlarms(stop: boolean): void;
    function StopAllGarageActivity(): void;
    function StopAnimPlayback(ped: number, p1: number, p2: boolean): void;
    function StopAnimTask(ped: number, animDictionary: string, animationName: string, animExitSpeed: number): void;
    function StopAnyPedModelBeingSuppressed(): void;
    function StopAudioScene(scene: string): void;
    function StopAudioScenes(): void;
    function StopBenchmarkRecording(): void;
    function N_0xc7db36c24634f52b(): void;
    function StopBinkMovie(binkMovie: number): void;
    function StopBringVehicleToHalt(vehicle: number): void;
    function N_0x7c06330bfdda182e(vehicle: number): void;
    function StopCamPointing(cam: number): void;
    function StopCamShaking(cam: number, p1: boolean): void;
    function StopCinematicCamShaking(p0: boolean): void;
    function StopCinematicShot(p0: number): void;
    function StopCurrentPlayingAmbientSpeech(ped: number): void;
    function StopCurrentPlayingSpeech(ped: number): void;
    function N_0x7a73d05a607734c7(ped: number): void;
    function SetPedMute(ped: number): void;
    function StopCutscene(p0: boolean): void;
    function StopCutsceneAudio(): void;
    function N_0x806058bbdc136e06(): void;
    function StopCutsceneCamShaking(): void;
    function StopCutsceneImmediately(): void;
    function StopEntityAnim(entity: number, animation: string, animGroup: string, p3: number): number;
    function StopEntityFire(entity: number): void;
    function StopFireInRange(x: number, y: number, z: number, radius: number): void;
    function StopGameplayCamShaking(bStopImmediately: boolean): void;
    function StopGameplayHint(p0: boolean): void;
    function StopPadShake(padIndex: number): void;
    function StopParticleFxLooped(ptfxHandle: number, p1: boolean): void;
    function StopPedRingtone(ped: number): void;
    function StopPedSpeaking(ped: number, shaking: boolean): void;
    function StopPedWeaponFiringWhenDropped(ped: number): void;
    function StopPlaybackRecordedVehicle(vehicle: number): void;
    function StopPlayerSwitch(): void;
    function StopPlayerTeleport(): void;
    function StopRecordingAndDiscardClip(): void;
    function N_0x88bb3507ed41a240(): void;
    function StopRecordingAndSaveClip(): void;
    function StopRecording(): void;
    function StopRecordingThisFrame(): void;
    function N_0xeb2d525b57f42b40(): void;
    function StopRenderingScriptCamsUsingCatchUp(render: boolean, p1: number, p2: number): void;
    function N_0xc819f3cbb62bf692(render: boolean, p1: number, p2: number): void;
    function RenderFirstPersonCam(render: boolean, p1: number, p2: number): void;
    function StopRopeUnwindingFront(ropeId: number): void;
    function StopRopeWinding(ropeId: number): void;
    function StopSaveArray(): void;
    function StopSaveData(): void;
    function StopSaveStruct(): void;
    function StopScriptGlobalShaking(p0: boolean): void;
    function N_0x1c9d7949fa533490(p0: boolean): void;
    function StopScriptedConversation(p0: boolean): number;
    function StopSound(soundId: number): void;
    function StopStream(): void;
    function StopSynchronizedAudioEvent(p0: number): boolean;
    function StopSynchronizedEntityAnim(entity: number, p1: number, p2: boolean): boolean;
    function StopSynchronizedMapEntityAnim(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number
    ): boolean;
    function StreamvolCreateFrustum(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): number;
    function N_0x1f3f018bc3afa77c(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): number;
    function StreamvolCreateLine(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): number;
    function N_0x0ad9710cee2f590f(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): number;
    function StreamvolCreateSphere(x: number, y: number, z: number, rad: number, p4: number, p5: number): number;
    function N_0x219c7b8d53e429fd(x: number, y: number, z: number, rad: number, p4: number, p5: number): number;
    function FormatFocusHeading(x: number, y: number, z: number, rad: number, p4: number, p5: number): number;
    function StreamvolDelete(unused: number): void;
    function N_0x1ee7d8df4425f053(unused: number): void;
    function StreamvolHasLoaded(unused: number): boolean;
    function N_0x7d41e9d2d17c5b2d(unused: number): boolean;
    function StreamvolIsValid(unused: number): boolean;
    function N_0x07c313f94746702c(unused: number): boolean;
    function StringToInt(_string: string, outInteger: number): LuaMultiReturn<[boolean, number]>;
    function SuppressAgitationEventsNextFrame(): void;
    function SuppressFrontendRenderingThisFrame(): void;
    function N_0xba751764f0821256(): void;
    function SuppressShockingEventTypeNextFrame(eventType: number): void;
    function SuppressShockingEventsNextFrame(): void;
    function SwitchCrimeType(player: number, p1: number): void;
    function N_0x9a987297ed8bd838(player: number, p1: number): void;
    function SwitchToInputMappingScheme(name: string): boolean;
    function N_0x3d42b92563939375(name: string): boolean;
    function SwitchToInputMappingScheme_2(name: string): boolean;
    function N_0x4683149ed1dde7a1(name: string): boolean;
    function SwitchToMultiFirstpart(ped: number, flags: number, switchType: number): void;
    function N_0xaab3200ed59016bc(ped: number, flags: number, switchType: number): void;
    function SwitchOutPlayer(ped: number, flags: number, switchType: number): void;
    function SwitchToMultiSecondpart(ped: number): void;
    function N_0xd8295af639fd9cb8(ped: number): void;
    function SwitchInPlayer(ped: number): void;
    function SwitchTrainTrack(trackId: number, state: boolean): void;
    function TakeControlOfFrontend(): void;
    function N_0xec9264727eec0f28(): void;
    function Tan(p0: number): number;
    function TaskAchieveHeading(ped: number, heading: number, timeout: number): void;
    function TaskAgitatedAction(ped: number, ped2: number): void;
    function N_0x19d1b791cb3670fe(ped: number, ped2: number): void;
    function TaskAimGunAtCoord(
        ped: number,
        x: number,
        y: number,
        z: number,
        time: number,
        p5: boolean,
        p6: boolean
    ): void;
    function TaskAimGunAtEntity(ped: number, entity: number, duration: number, p3: boolean): void;
    function TaskAimGunScripted(ped: number, scriptTask: number, p2: boolean, p3: boolean): void;
    function TaskAimGunScriptedWithTarget(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: boolean,
        p7: boolean
    ): void;
    function TaskArrestPed(ped: number, target: number): void;
    function TaskBoatMission(
        pedDriver: number,
        boat: number,
        p2: number,
        p3: number,
        x: number,
        y: number,
        z: number,
        p7: number,
        maxSpeed: number,
        drivingStyle: number,
        p10: number,
        p11: number
    ): void;
    function TaskChatToPed(
        ped: number,
        target: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number
    ): void;
    function TaskClearDefensiveArea(p0: number): void;
    function TaskClearLookAt(ped: number): void;
    function TaskClimb(ped: number, unused: boolean): void;
    function TaskClimbLadder(ped: number, p1: number): void;
    function TaskCombatHatedTargetsAroundPed(ped: number, radius: number, p2: number): void;
    function TaskCombatHatedTargetsAroundPedTimed(p0: number, p1: number, p2: number, p3: number): void;
    function TaskCombatHatedTargetsInArea(
        ped: number,
        x: number,
        y: number,
        z: number,
        radius: number,
        p5: number
    ): void;
    function TaskCombatPed(ped: number, targetPed: number, p2: number, p3: number): void;
    function TaskCombatPedTimed(p0: number, ped: number, p2: number, p3: number): void;
    function TaskCower(ped: number, duration: number): void;
    function TaskDriveBy(
        driverPed: number,
        targetPed: number,
        targetVehicle: number,
        targetX: number,
        targetY: number,
        targetZ: number,
        distanceToShoot: number,
        pedAccuracy: number,
        p8: boolean,
        firingPattern: number
    ): void;
    function TaskEnterVehicle(
        ped: number,
        vehicle: number,
        timeout: number,
        seatIndex: number,
        speed: number,
        flag: number,
        p6: number
    ): void;
    function TaskEveryoneLeaveVehicle(vehicle: number): void;
    function TaskExitCover(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function TaskExtendRoute(x: number, y: number, z: number): void;
    function TaskFlushRoute(): void;
    function TaskFollowNavMeshToCoord(
        ped: number,
        x: number,
        y: number,
        z: number,
        speed: number,
        timeout: number,
        stoppingRange: number,
        persistFollowing: boolean,
        unk: number
    ): void;
    function TaskFollowNavMeshToCoordAdvanced(
        ped: number,
        x: number,
        y: number,
        z: number,
        speed: number,
        timeout: number,
        unkFloat: number,
        unkInt: number,
        unkX: number,
        unkY: number,
        unkZ: number,
        unk_40000f: number
    ): void;
    function TaskFollowPointRoute(ped: number, speed: number, unknown: number): void;
    function TaskFollowToOffsetOfEntity(
        ped: number,
        entity: number,
        offsetX: number,
        offsetY: number,
        offsetZ: number,
        movementSpeed: number,
        timeout: number,
        stoppingRange: number,
        persistFollowing: boolean
    ): void;
    function TaskFollowWaypointRecording(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function TaskForceMotionState(ped: number, state: number, p2: boolean): void;
    function TaskGetOffBoat(ped: number, boat: number): void;
    function TaskGoStraightToCoord(
        ped: number,
        x: number,
        y: number,
        z: number,
        speed: number,
        timeout: number,
        targetHeading: number,
        distanceToSlide: number
    ): void;
    function TaskGoStraightToCoordRelativeToEntity(
        entity1: number,
        entity2: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function TaskGoToCoordAndAimAtHatedEntitiesNearCoord(
        pedHandle: number,
        goToLocationX: number,
        goToLocationY: number,
        goToLocationZ: number,
        focusLocationX: number,
        focusLocationY: number,
        focusLocationZ: number,
        speed: number,
        shootAtEnemies: boolean,
        distanceToStopAt: number,
        noRoadsDistance: number,
        unkTrue: boolean,
        unkFlag: number,
        aimingFlag: number,
        firingPattern: number
    ): void;
    function TaskGoToCoordAnyMeans(
        ped: number,
        x: number,
        y: number,
        z: number,
        speed: number,
        p5: number,
        p6: boolean,
        walkingStyle: number,
        p8: number
    ): void;
    function TaskGoToCoordAnyMeansExtraParams(
        ped: number,
        x: number,
        y: number,
        z: number,
        speed: number,
        p5: number,
        p6: boolean,
        walkingStyle: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number
    ): void;
    function TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(
        ped: number,
        x: number,
        y: number,
        z: number,
        speed: number,
        p5: number,
        p6: boolean,
        walkingStyle: number,
        p8: number,
        p9: number,
        p10: number,
        p11: number,
        p12: number
    ): void;
    function TaskGoToCoordWhileAimingAtCoord(
        ped: number,
        x: number,
        y: number,
        z: number,
        aimAtX: number,
        aimAtY: number,
        aimAtZ: number,
        moveSpeed: number,
        shoot: boolean,
        p9: number,
        p10: number,
        p11: boolean,
        flags: number,
        p13: boolean,
        firingPattern: number
    ): void;
    function TaskGoToCoordWhileAimingAtEntity(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: boolean,
        p7: number,
        p8: number,
        p9: boolean,
        p10: number,
        p11: boolean,
        p12: number,
        p13: number
    ): void;
    function TaskGoToEntity(
        entity: number,
        target: number,
        duration: number,
        distance: number,
        speed: number,
        p5: number,
        p6: number
    ): void;
    function TaskGoToEntityWhileAimingAtCoord(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: boolean,
        p7: number,
        p8: number,
        p9: boolean,
        p10: boolean,
        p11: number
    ): void;
    function TaskGoToEntityWhileAimingAtEntity(
        ped: number,
        entityToWalkTo: number,
        entityToAimAt: number,
        speed: number,
        shootatEntity: boolean,
        p5: number,
        p6: number,
        p7: boolean,
        p8: boolean,
        firingPattern: number
    ): void;
    function TaskGotoEntityAiming(ped: number, target: number, distanceToStopAt: number, StartAimingDist: number): void;
    function TaskGotoEntityOffset(
        ped: number,
        p1: number,
        p2: number,
        x: number,
        y: number,
        z: number,
        duration: number
    ): void;
    function TaskGotoEntityOffsetXy(
        ped: number,
        entity: number,
        duration: number,
        xOffset: number,
        yOffset: number,
        zOffset: number,
        moveBlendRatio: number,
        useNavmesh: boolean
    ): void;
    function TaskGuardAssignedDefensiveArea(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function TaskGuardCurrentPosition(p0: number, p1: number, p2: number, p3: boolean): void;
    function TaskGuardSphereDefensiveArea(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number
    ): void;
    function TaskHandsUp(ped: number, duration: number, facingPed: number, p3: number, p4: boolean): void;
    function TaskHeliChase(pilot: number, entityToFollow: number, x: number, y: number, z: number): void;
    function TaskHeliEscortHeli(pilot: number, heli1: number, heli2: number, p3: number, p4: number, p5: number): void;
    function TaskHeliMission(
        pilot: number,
        aircraft: number,
        targetVehicle: number,
        targetPed: number,
        destinationX: number,
        destinationY: number,
        destinationZ: number,
        missionFlag: number,
        maxSpeed: number,
        landingRadius: number,
        targetHeading: number,
        unk1: number,
        unk2: number,
        unk3: number,
        landingFlags: number
    ): void;
    function TaskJump(ped: number, unused: boolean): void;
    function TaskLeaveAnyVehicle(ped: number, p1: number, flags: number): void;
    function TaskLeaveVehicle(ped: number, vehicle: number, flags: number): void;
    function TaskLookAtCoord(
        entity: number,
        x: number,
        y: number,
        z: number,
        duration: number,
        p5: number,
        p6: number
    ): void;
    function TaskLookAtEntity(ped: number, lookAt: number, duration: number, unknown1: number, unknown2: number): void;
    function TaskMoveNetworkAdvancedByName(
        ped: number,
        p1: string,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: boolean,
        animDict: string,
        flags: number
    ): void;
    function N_0xd5b35bea41919acb(
        ped: number,
        p1: string,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: boolean,
        animDict: string,
        flags: number
    ): void;
    function TaskMoveNetworkAdvanced(
        ped: number,
        p1: string,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: boolean,
        animDict: string,
        flags: number
    ): void;
    function TaskMoveNetworkByName(
        ped: number,
        task: string,
        multiplier: number,
        p3: boolean,
        animDict: string,
        flags: number
    ): void;
    function N_0x2d537ba194896636(
        ped: number,
        task: string,
        multiplier: number,
        p3: boolean,
        animDict: string,
        flags: number
    ): void;
    function TaskMoveNetwork(
        ped: number,
        task: string,
        multiplier: number,
        p3: boolean,
        animDict: string,
        flags: number
    ): void;
    function TaskMoveNetworkByNameWithInitParams(
        ped: number,
        p1: string,
        p3: number,
        p4: boolean,
        animDict: string,
        flags: number
    ): number;
    function TaskMoveNetworkScripted(
        ped: number,
        p1: string,
        p3: number,
        p4: boolean,
        animDict: string,
        flags: number
    ): number;
    function TaskOpenVehicleDoor(ped: number, vehicle: number, timeOut: number, seat: number, speed: number): void;
    function TaskParachute(ped: number, p1: boolean): void;
    function TaskParachuteToTarget(ped: number, x: number, y: number, z: number): void;
    function TaskPatrol(ped: number, p1: string, p2: number, p3: boolean, p4: boolean): void;
    function TaskPause(ped: number, ms: number): void;
    function TaskPedSlideToCoord(ped: number, x: number, y: number, z: number, heading: number, duration: number): void;
    function TaskPedSlideToCoordHdgRate(
        ped: number,
        x: number,
        y: number,
        z: number,
        heading: number,
        p5: number,
        p6: number
    ): void;
    function TaskPerformSequence(ped: number, taskSequenceId: number): void;
    function TaskPerformSequenceFromProgress(p0: number, p1: number, p2: number, p3: number): void;
    function TaskPerformSequenceLocally(ped: number, taskSequenceId: number): void;
    function N_0x8c33220c8d78ca0d(ped: number, taskSequenceId: number): void;
    function TaskPlaneChase(pilot: number, entityToFollow: number, x: number, y: number, z: number): void;
    function TaskPlaneGotoPreciseVtol(
        ped: number,
        vehicle: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number
    ): void;
    function TaskPlaneLand(
        pilot: number,
        plane: number,
        runwayStartX: number,
        runwayStartY: number,
        runwayStartZ: number,
        runwayEndX: number,
        runwayEndY: number,
        runwayEndZ: number
    ): void;
    function TaskPlaneMission(
        pilot: number,
        aircraft: number,
        targetVehicle: number,
        targetPed: number,
        destinationX: number,
        destinationY: number,
        destinationZ: number,
        missionFlag: number,
        angularDrag: number,
        unk: number,
        targetHeading: number,
        maxZ: number,
        minZ: number
    ): void;
    function TaskPlaneTaxi(
        pilot: number,
        aircraft: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function N_0x92c360b5f15d2302(
        pilot: number,
        aircraft: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number
    ): void;
    function TaskPlantBomb(ped: number, x: number, y: number, z: number, heading: number): void;
    function TaskPlayAnim(
        ped: number,
        animDictionary: string,
        animationName: string,
        blendInSpeed: number,
        blendOutSpeed: number,
        duration: number,
        flag: number,
        playbackRate: number,
        lockX: boolean,
        lockY: boolean,
        lockZ: boolean
    ): void;
    function TaskPlayAnimAdvanced(
        ped: number,
        animDict: string,
        animName: string,
        posX: number,
        posY: number,
        posZ: number,
        rotX: number,
        rotY: number,
        rotZ: number,
        animEnterSpeed: number,
        animExitSpeed: number,
        duration: number,
        flag: number,
        animTime: number,
        p14: number,
        p15: number
    ): void;
    function TaskPlayPhoneGestureAnimation(
        ped: number,
        animDict: string,
        animation: string,
        boneMaskType: string,
        p4: number,
        p5: number,
        p6: boolean,
        p7: boolean
    ): void;
    function TaskPutPedDirectlyIntoCover(
        ped: number,
        x: number,
        y: number,
        z: number,
        timeout: number,
        p5: boolean,
        p6: number,
        p7: boolean,
        p8: boolean,
        p9: number,
        p10: boolean
    ): void;
    function TaskPutPedDirectlyIntoMelee(
        ped: number,
        meleeTarget: number,
        p2: number,
        p3: number,
        p4: number,
        p5: boolean
    ): void;
    function TaskRappelDownWall(
        ped: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        minZ: number,
        ropeId: number,
        clipset: string,
        p10: number
    ): void;
    function N_0xeaf66acddc794793(
        ped: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        minZ: number,
        ropeId: number,
        clipset: string,
        p10: number
    ): void;
    function TaskRappelFromHeli(ped: number, unused: number): void;
    function TaskReactAndFleePed(ped: number, fleeTarget: number): void;
    function TaskReloadWeapon(ped: number, unused: boolean): void;
    function TaskScriptedAnimation(ped: number, p4: number, p5: number): LuaMultiReturn<[number, number, number]>;
    function TaskSeekCoverFromPed(ped: number, target: number, duration: number, p3: boolean): void;
    function TaskSeekCoverFromPos(ped: number, x: number, y: number, z: number, duration: number, p5: boolean): void;
    function TaskSeekCoverToCoords(
        ped: number,
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        p7: number,
        p8: boolean
    ): void;
    function TaskSeekCoverToCoverPoint(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: boolean
    ): void;
    function TaskSetBlockingOfNonTemporaryEvents(ped: number, toggle: boolean): void;
    function TaskSetDecisionMaker(ped: number, p1: number): void;
    function TaskSetSphereDefensiveArea(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function TaskShockingEventReact(ped: number, eventHandle: number): void;
    function TaskShootAtCoord(
        ped: number,
        x: number,
        y: number,
        z: number,
        duration: number,
        firingPattern: number
    ): void;
    function TaskShootAtEntity(entity: number, target: number, duration: number, firingPattern: number): void;
    function TaskShuffleToNextVehicleSeat(ped: number, vehicle: number): void;
    function TaskSkyDive(ped: number): void;
    function TaskSmartFleeCoord(
        ped: number,
        x: number,
        y: number,
        z: number,
        distance: number,
        time: number,
        p6: boolean,
        p7: boolean
    ): void;
    function TaskSmartFleePed(
        ped: number,
        fleeTarget: number,
        distance: number,
        fleeTime: number,
        p4: boolean,
        p5: boolean
    ): void;
    function TaskStandGuard(ped: number, x: number, y: number, z: number, heading: number, scenarioName: string): void;
    function TaskStandStill(ped: number, time: number): void;
    function TaskStartScenarioAtPosition(
        ped: number,
        scenarioName: string,
        x: number,
        y: number,
        z: number,
        heading: number,
        duration: number,
        sittingScenario: boolean,
        teleport: boolean
    ): void;
    function TaskStartScenarioInPlace(
        ped: number,
        scenarioName: string,
        unkDelay: number,
        playEnterAnim: boolean
    ): void;
    function TaskStayInCover(ped: number): void;
    function TaskStealthKill(killer: number, target: number, actionType: number, p3: number, p4: number): void;
    function TaskStopPhoneGestureAnimation(ped: number): void;
    function TaskSubmarineGotoAndStop(p0: number, submarine: number, x: number, y: number, z: number, p5: number): void;
    function TaskSwapWeapon(ped: number, p1: boolean): void;
    function TaskSweepAimEntity(
        ped: number,
        anim: string,
        p2: string,
        p3: string,
        p4: string,
        p5: number,
        vehicle: number,
        p7: number,
        p8: number
    ): void;
    function TaskSweepAimPosition(
        p0: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        p10: number
    ): LuaMultiReturn<[number, number, number, number]>;
    function TaskSynchronizedScene(
        ped: number,
        scene: number,
        animDictionary: string,
        animationName: string,
        speed: number,
        speedMultiplier: number,
        duration: number,
        flag: number,
        playbackRate: number,
        p9: number
    ): void;
    function TaskThrowProjectile(ped: number, x: number, y: number, z: number): void;
    function TaskToggleDuck(p0: boolean, p1: boolean): void;
    function TaskTurnPedToFaceCoord(ped: number, x: number, y: number, z: number, duration: number): void;
    function TaskTurnPedToFaceEntity(ped: number, entity: number, duration: number): void;
    function TaskUseMobilePhone(ped: number, p1: number): void;
    function TaskUseMobilePhoneTimed(ped: number, duration: number): void;
    function TaskUseNearestScenarioChainToCoord(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number
    ): void;
    function TaskUseNearestScenarioChainToCoordWarp(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number
    ): void;
    function TaskUseNearestScenarioToCoord(
        ped: number,
        x: number,
        y: number,
        z: number,
        distance: number,
        duration: number
    ): void;
    function TaskUseNearestScenarioToCoordWarp(
        ped: number,
        x: number,
        y: number,
        z: number,
        radius: number,
        p5: number
    ): void;
    function TaskVehicleAimAtCoord(ped: number, x: number, y: number, z: number): void;
    function TaskVehicleAimAtPed(ped: number, target: number): void;
    function TaskVehicleChase(driver: number, targetEnt: number): void;
    function TaskVehicleDriveToCoord(
        ped: number,
        vehicle: number,
        x: number,
        y: number,
        z: number,
        speed: number,
        p6: number,
        vehicleModel: number,
        drivingMode: number,
        stopRange: number,
        p10: number
    ): void;
    function TaskVehicleDriveToCoordLongrange(
        ped: number,
        vehicle: number,
        x: number,
        y: number,
        z: number,
        speed: number,
        driveMode: number,
        stopRange: number
    ): void;
    function TaskVehicleDriveWander(ped: number, vehicle: number, speed: number, drivingStyle: number): void;
    function TaskVehicleEscort(
        ped: number,
        vehicle: number,
        targetVehicle: number,
        mode: number,
        speed: number,
        drivingStyle: number,
        minDistance: number,
        p7: number,
        noRoadsDistance: number
    ): void;
    function TaskVehicleFollow(
        driver: number,
        vehicle: number,
        targetEntity: number,
        speed: number,
        drivingStyle: number,
        minDistance: number
    ): void;
    function TaskVehicleFollowWaypointRecording(
        ped: number,
        vehicle: number,
        WPRecording: string,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: boolean,
        p9: number
    ): void;
    function TaskVehicleGotoNavmesh(
        ped: number,
        vehicle: number,
        x: number,
        y: number,
        z: number,
        speed: number,
        behaviorFlag: number,
        stoppingRange: number
    ): void;
    function TaskVehicleHeliProtect(
        pilot: number,
        vehicle: number,
        entityToFollow: number,
        targetSpeed: number,
        p4: number,
        radius: number,
        altitude: number,
        p7: number
    ): void;
    function TaskVehicleMission(
        driver: number,
        vehicle: number,
        vehicleTarget: number,
        missionType: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        DriveAgainstTraffic: boolean
    ): void;
    function TaskVehicleMissionCoorsTarget(
        ped: number,
        vehicle: number,
        x: number,
        y: number,
        z: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number,
        p9: number,
        DriveAgainstTraffic: boolean
    ): void;
    function TaskVehicleMissionPedTarget(
        ped: number,
        vehicle: number,
        pedTarget: number,
        missionType: number,
        maxSpeed: number,
        drivingStyle: number,
        minDistance: number,
        p7: number,
        DriveAgainstTraffic: boolean
    ): void;
    function TaskVehiclePark(
        ped: number,
        vehicle: number,
        x: number,
        y: number,
        z: number,
        heading: number,
        mode: number,
        radius: number,
        keepEngineOn: boolean
    ): void;
    function TaskVehiclePlayAnim(vehicle: number, animationSet: string, animationName: string): void;
    function TaskVehicleShootAtCoord(ped: number, x: number, y: number, z: number, p4: number): void;
    function TaskVehicleShootAtPed(ped: number, target: number, p2: number): void;
    function TaskVehicleTempAction(driver: number, vehicle: number, action: number, time: number): void;
    function TaskWanderInArea(
        ped: number,
        x: number,
        y: number,
        z: number,
        radius: number,
        minimalLength: number,
        timeBetweenWalks: number
    ): void;
    function TaskWanderSpecific(p0: number, p1: number, p2: number, p3: number): void;
    function TaskWanderStandard(ped: number, p1: number, p2: number): void;
    function TaskWarpPedIntoVehicle(ped: number, vehicle: number, seatIndex: number): void;
    function TaskWrithe(ped: number, target: number, time: number, p3: number): void;
    function TerminateAllScriptsWithThisName(scriptName: string): void;
    function TerminateThisThread(): void;
    function TerminateThread(threadId: number): void;
    function TerraingridActivate(toggle: boolean): void;
    function N_0xa356990e161c9e65(toggle: boolean): void;
    function TerraingridSetColours(
        lowR: number,
        lowG: number,
        lowB: number,
        lowAlpha: number,
        R: number,
        G: number,
        B: number,
        Alpha: number,
        highR: number,
        highG: number,
        highB: number,
        highAlpha: number
    ): void;
    function N_0x5ce62918f8d703c7(
        lowR: number,
        lowG: number,
        lowB: number,
        lowAlpha: number,
        R: number,
        G: number,
        B: number,
        Alpha: number,
        highR: number,
        highG: number,
        highB: number,
        highAlpha: number
    ): void;
    function TerraingridSetParams(
        x: number,
        y: number,
        z: number,
        p3: number,
        rotation: number,
        p5: number,
        width: number,
        height: number,
        p8: number,
        scale: number,
        glowIntensity: number,
        normalHeight: number,
        heightDiff: number
    ): void;
    function N_0x1c4fc5752bcd8e48(
        x: number,
        y: number,
        z: number,
        p3: number,
        rotation: number,
        p5: number,
        width: number,
        height: number,
        p8: number,
        scale: number,
        glowIntensity: number,
        normalHeight: number,
        heightDiff: number
    ): void;
    function TestProbeAgainstAllWater(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number,
        flag: number
    ): LuaMultiReturn<[boolean, Vector3]>;
    function TestProbeAgainstWater(
        x1: number,
        y1: number,
        z1: number,
        x2: number,
        y2: number,
        z2: number
    ): LuaMultiReturn<[boolean, Vector3]>;
    function TestVerticalProbeAgainstAllWater(
        x: number,
        y: number,
        z: number,
        flag: number,
        height: number
    ): LuaMultiReturn<[boolean, number]>;
    function TextureDownloadGetName(p0: number): string;
    function TextureDownloadHasFailed(p0: number): boolean;
    function N_0x5776ed562c134687(p0: number): boolean;
    function TextureDownloadRelease(p0: number): void;
    function TextureDownloadRequest(FilePath: string, Name: string, p3: boolean): LuaMultiReturn<[number, number]>;
    function ThefeedClearFrozenPost(): void;
    function N_0x80fe4f3ab4e1b62a(): void;
    function ThefeedFlushPersistent(): void;
    function ThefeedCommentTeleportPoolOff(): void;
    function N_0xaded7f5748acafe6(): void;
    function ThefeedShowGtaoTooltips(): void;
    function ThefeedCommentTeleportPoolOn(): void;
    function N_0x56c8b608cfd49854(): void;
    function ThefeedDisableLoadingScreenTips(): void;
    function N_0x32888337579a5970(): void;
    function ThefeedDisable(): void;
    function ThefeedDisplayLoadingScreenTips(): void;
    function N_0x15cfa549788d35ef(): void;
    function ThefeedEnable(): void;
    function ThefeedFlushQueue(): void;
    function N_0xa8fdb297a8d25fba(): void;
    function ThefeedForceRenderOff(): void;
    function N_0x583049884a2eee3c(): void;
    function ThefeedHideGtaoTooltips(): void;
    function ThefeedForceRenderOn(): void;
    function N_0xa13c11e1b5c06bfc(): void;
    function ThefeedFreezeNextPost(): void;
    function N_0xfdec055ab549e328(): void;
    function ThefeedSetNextPostPersistent(): void;
    function ThefeedGetFirstVisibleDeleteRemaining(): number;
    function N_0x82352748437638ca(): number;
    function GetCurrentNotification(): number;
    function ThefeedGetCurrentNotification(): number;
    function ThefeedHideThisFrame(): void;
    function N_0x25f87b30c382fca7(): void;
    function HideHudNotificationsThisFrame(): void;
    function ThefeedIsPaused(): boolean;
    function N_0xa9cbfd40b3fa3010(): boolean;
    function ThefeedOnlyShowTooltips(toggle: boolean): void;
    function N_0x6f1554b0cc2089fa(toggle: boolean): void;
    function ThefeedPause(): void;
    function N_0xfdb423997fa30340(): void;
    function ThefeedRemoveItem(notificationId: number): void;
    function RemoveNotification(notificationId: number): void;
    function ThefeedResetAllParameters(): void;
    function N_0xfdd85225b2dea55e(): void;
    function ThefeedClearAnimpostfx(): void;
    function ThefeedResume(): void;
    function N_0xe1cd1e48e025e661(): void;
    function ThefeedSetAnimpostfxColor(red: number, green: number, blue: number, alpha: number): void;
    function N_0x17430b918701c342(red: number, green: number, blue: number, alpha: number): void;
    function SetNotificationFlashColor(red: number, green: number, blue: number, alpha: number): void;
    function ThefeedSetAnimpostfxCount(count: number): void;
    function N_0x17ad8c9706bdd88a(count: number): void;
    function ThefeedSetAnimpostfxSound(toggle: boolean): void;
    function N_0x4a0c7c9bb10abb36(toggle: boolean): void;
    function ThefeedSetFlushAnimpostfx(toggle: boolean): void;
    function N_0xbae4f9b97cd43b30(toggle: boolean): void;
    function ThefeedSetNextPostBackgroundColor(hudColorIndex: number): void;
    function N_0x92f0da1e27db96dc(hudColorIndex: number): void;
    function SetNotificationBackgroundColor(hudColorIndex: number): void;
    function ThefeedNextPostBackgroundColor(hudColorIndex: number): void;
    function ThefeedSetScriptedMenuHeight(pos: number): void;
    function N_0x55598d21339cb998(pos: number): void;
    function ClearNotificationsPos(pos: number): void;
    function ThefeedSpsExtendWidescreenOff(): void;
    function N_0xb695e2cd0a2da9ee(): void;
    function ThefeedDisableBaselineOffset(): void;
    function ThefeedSpsExtendWidescreenOn(): void;
    function N_0xd4438c0564490e63(): void;
    function ThefeedEnableBaselineOffset(): void;
    function ThefeedUpdateItemTexture(
        txdString1: string,
        txnString1: string,
        txdString2: string,
        txnString2: string
    ): void;
    function N_0x317eba71d7543f52(txdString1: string, txnString1: string, txdString2: string, txnString2: string): void;
    function ThefeedAddTxdRef(txdString1: string, txnString1: string, txdString2: string, txnString2: string): void;
    function Timera(): number;
    function Timerb(): number;
    function Timestep(): number;
    function TitleTextureDownloadRequest(FilePath: string, Name: string, p2: boolean): number;
    function N_0x0b203b4afde53a4f(FilePath: string, Name: string, p2: boolean): number;
    function ToFloat(value: number): number;
    function TogglePausedRenderphases(toggle: boolean): void;
    function EnableGameplayCam(toggle: boolean): void;
    function SetFrozenRenderingDisabled(toggle: boolean): void;
    function ToggleStealthRadar(toggle: boolean): void;
    function ToggleUsePickupsForPlayer(player: number, pickupHash: number, toggle: boolean): void;
    function N_0x616093ec6b139dd9(player: number, pickupHash: number, toggle: boolean): void;
    function ToggleVehicleMod(vehicle: number, modType: number, toggle: boolean): void;
    function TrackObjectVisibility(object: number): void;
    function TrackVehicleVisibility(vehicle: number): void;
    function TransformToCar(vehicle: number, instantly: boolean): void;
    function N_0x2a69ffd1b42bff9e(vehicle: number, instantly: boolean): void;
    function TransformStormbergToRoadVehicle(vehicle: number, instantly: boolean): void;
    function TransformSubmarineToVehicle(vehicle: number, instantly: boolean): void;
    function TransformToSubmarine(vehicle: number, instantly: boolean): void;
    function N_0xbe4c854ffdb6eebe(vehicle: number, instantly: boolean): void;
    function TransformStormbergToWaterVehicle(vehicle: number, instantly: boolean): void;
    function TransformVehicleToSubmarine(vehicle: number, instantly: boolean): void;
    function TriggerEventInternal(eventName: string, eventPayload: string, payloadLength: number): void;
    function TriggerLatentServerEventInternal(
        eventName: string,
        eventPayload: string,
        payloadLength: number,
        bps: number
    ): void;
    function TriggerMusicEvent(eventName: string): boolean;
    function TriggerScreenblurFadeIn(transitionTime: number): boolean;
    function TransitionToBlurred(transitionTime: number): boolean;
    function TriggerScreenblurFadeOut(transitionTime: number): boolean;
    function TransitionFromBlurred(transitionTime: number): boolean;
    function TriggerScriptCrcCheckOnPlayer(player: number, p1: number, scriptHash: number): boolean;
    function N_0x46fb3ed415c7641c(player: number, p1: number, scriptHash: number): boolean;
    function NetworkIsPlayerInScript(player: number, p1: number, scriptHash: number): boolean;
    function TriggerScriptEvent(eventGroup: number, eventDataSize: number, playerBits: number): number;
    function TriggerScriptEvent_2(eventGroup: number, eventDataSize: number, playerBits: number): number;
    function N_0xa40cc53df8e50837(eventGroup: number, eventDataSize: number, playerBits: number): number;
    function TriggerServerEventInternal(eventName: string, eventPayload: string, payloadLength: number): void;
    function TriggerSiren(vehicle: number): void;
    function N_0x66c3fb05206041ba(vehicle: number): void;
    function TriggerSonarBlip(posX: number, posY: number, posZ: number, radius: number, p4: number): void;
    function N_0x72dd432f3cdfc0ee(posX: number, posY: number, posZ: number, radius: number, p4: number): void;
    function UgcCancelQuery(): void;
    function N_0xe9b99b6853181409(): void;
    function UgcClearCreateResult(): void;
    function N_0x17440aa15d1d3739(): void;
    function UgcClearModifyResult(): void;
    function N_0xa1e5e0204a6fcc70(): void;
    function UgcClearOfflineQuery(): void;
    function N_0x61a885d3f7cfee9a(): void;
    function UgcClearQueryResults(): void;
    function N_0xba96394a0eecfa65(): void;
    function UgcCopyContent(): LuaMultiReturn<[boolean, number, number]>;
    function N_0x152d90e4c1b4738a(): LuaMultiReturn<[boolean, number, number]>;
    function UgcCreateContent(
        data: string,
        dataCount: number,
        contentName: string,
        description: string,
        tagsCsv: string,
        contentTypeName: string,
        publish: boolean
    ): boolean;
    function N_0xc84527e235fca219(
        data: string,
        dataCount: number,
        contentName: string,
        description: string,
        tagsCsv: string,
        contentTypeName: string,
        publish: boolean
    ): boolean;
    function UgcCreateMission(
        contentName: string,
        description: string,
        tagsCsv: string,
        contentTypeName: string,
        publish: boolean
    ): boolean;
    function N_0xa5efc3e847d60507(
        contentName: string,
        description: string,
        tagsCsv: string,
        contentTypeName: string,
        publish: boolean
    ): boolean;
    function UgcDidGetSucceed(): number;
    function N_0x941e5306bcd7c2c7(): number;
    function UgcGetBookmarkedContent(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0xd5a4b59980401588(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
    function UgcGetCachedDescription(p0: number, p1: number): string;
    function N_0x40f7e66472df3e5c(p0: number, p1: number): string;
    function UgcGetContentCategory(p0: number): number;
    function N_0xa7bab11e7c9c6c5a(p0: number): number;
    function GetContentCategory(p0: number): number;
    function UgcGetContentDescriptionHash(p0: number): number;
    function N_0x7cf0448787b23758(p0: number): number;
    function GetContentDescriptionHash(p0: number): number;
    function UgcGetContentFileVersion(p0: number, p1: number): number;
    function N_0x37025b27d9b658b1(p0: number, p1: number): number;
    function GetContentFileVersion(p0: number, p1: number): number;
    function UgcGetContentHasPlayerBookmarked(p0: number): boolean;
    function N_0x993cbe59d350d225(p0: number): boolean;
    function UgcGetContentHasPlayerRecord(p0: number): boolean;
    function N_0x70ea8da57840f9be(p0: number): boolean;
    function UgcGetContentHash(): number;
    function N_0x3a17a27d75c74887(): number;
    function UgcGetContentId(p0: number): string;
    function N_0x55aa95f481d694d2(p0: number): string;
    function GetContentId(p0: number): string;
    function UgcGetContentIsPublished(p0: number): boolean;
    function N_0x3054f114121c21ea(p0: number): boolean;
    function UgcGetContentIsVerified(p0: number): boolean;
    function N_0xa9240a96c74cca13(p0: number): boolean;
    function UgcGetContentLanguage(p0: number): number;
    function N_0x32dd916f3f7c9672(p0: number): number;
    function UgcGetContentName(p0: number): string;
    function N_0xbf09786a7fcab582(p0: number): string;
    function UgcGetContentNum(): number;
    function N_0xe0a6138401bcb837(): number;
    function UgcGetContentPath(p0: number, p1: number): string;
    function N_0xbaf6babf9e7ccc13(p0: number, p1: number): string;
    function UgcGetCloudPath(p0: number, p1: number): string;
    function UgcGetContentRating(p0: number, p1: number): number;
    function N_0x1accfba3d8dab2ee(p0: number, p1: number): number;
    function UgcGetContentRatingCount(p0: number, p1: number): number;
    function N_0x759299c5bb31d2a9(p0: number, p1: number): number;
    function UgcGetContentRatingNegativeCount(p0: number, p1: number): number;
    function N_0x4e548c0d7ae39ff9(p0: number, p1: number): number;
    function UgcGetContentRatingPositiveCount(p0: number, p1: number): number;
    function N_0x87e5c46c187fe0ae(p0: number, p1: number): number;
    function UgcGetContentTotal(): number;
    function N_0x769951e2455e2eb5(): number;
    function UgcGetContentUpdatedDate(p0: number, p1: number): number;
    function N_0xcfd115b373c0df63(p0: number, p1: number): number;
    function UgcGetContentUserId(p0: number): string;
    function N_0xcd67ad041a394c9c(p0: number): string;
    function GetContentUserId(p0: number): string;
    function GetPlayerAdvancedModifierPrivileges(p0: number): string;
    function UgcGetContentUserName(p0: number): string;
    function N_0x703f12425eca8bf5(p0: number): string;
    function UgcGetCreateContentId(): string;
    function N_0xc55a0b40ffb1ed23(): string;
    function UgcGetCreateResult(): number;
    function N_0xfbc5e768c7a77a6a(): number;
    function UgcGetCreatorNum(): number;
    function N_0x597f8dba9b206fc7(): number;
    function UgcGetCrewContent(p0: number, p1: number, p2: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0x9f6e2821885caee2(p0: number, p1: number, p2: number): LuaMultiReturn<[boolean, number, number]>;
    function UgcGetFriendContent(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0xf9e1ccae8ba4c281(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
    function UgcGetGetByCategory(p0: number, p1: number, p2: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0x678bb03c1a3bd51e(p0: number, p1: number, p2: number): LuaMultiReturn<[boolean, number, number]>;
    function UgcGetModifyResult(): number;
    function N_0x5a0a3d1a186a5508(): number;
    function UgcGetMyContent(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
    function N_0x3195f8dd0d531052(p0: number, p1: number): LuaMultiReturn<[boolean, number, number]>;
    function UgcGetQueryResult(): number;
    function N_0xedf7f927136c224b(): number;
    function UgcGetRootContentId(p0: number): string;
    function N_0xc0173d6bff4e0348(p0: number): string;
    function GetRootContentId(p0: number): string;
    function UgcHasCreateFinished(): boolean;
    function N_0x5e24341a7f92a74b(): boolean;
    function UgcHasGetFinished(): boolean;
    function N_0x02ada21ea2f6918f(): boolean;
    function UgcHasModifyFinished(): boolean;
    function N_0x299ef3c576773506(): boolean;
    function UgcIsGetting(): boolean;
    function N_0xd53acdbef24a46e8(): boolean;
    function UgcIsLanguageSupported(p0: number): boolean;
    function N_0xf53e48461b71eecb(p0: number): boolean;
    function UgcPoliciesMakePrivate(p0: number): boolean;
    function N_0x5cae833b0ee0c500(p0: number): boolean;
    function UgcPublish(contentId: string, baseContentId: string, contentTypeName: string): boolean;
    function N_0x1de0f5f50d723caa(contentId: string, baseContentId: string, contentTypeName: string): boolean;
    function UgcQueryByContentId(contentId: string, latestVersion: boolean, contentTypeName: string): boolean;
    function N_0x158ec424f35ec469(contentId: string, latestVersion: boolean, contentTypeName: string): boolean;
    function UgcQueryByContentIds(
        count: number,
        latestVersion: boolean,
        contentTypeName: string
    ): LuaMultiReturn<[boolean, number]>;
    function N_0xc7397a83f7a2a462(
        count: number,
        latestVersion: boolean,
        contentTypeName: string
    ): LuaMultiReturn<[boolean, number]>;
    function UgcQueryMyContent(
        p0: number,
        p1: number,
        p3: number,
        p4: number,
        p5: number
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x9bf438815f5d96ea(
        p0: number,
        p1: number,
        p3: number,
        p4: number,
        p5: number
    ): LuaMultiReturn<[boolean, number]>;
    function UgcQueryRecentlyCreatedContent(
        offset: number,
        count: number,
        contentTypeName: string,
        p3: number
    ): boolean;
    function N_0x6d4cb481fac835e8(offset: number, count: number, contentTypeName: string, p3: number): boolean;
    function UgcRequestCachedDescription(p0: number): number;
    function N_0x5e0165278f6339ee(p0: number): number;
    function UgcRequestContentDataFromIndex(p0: number, p1: number): number;
    function N_0x171df6a0c07fb3dc(p0: number, p1: number): number;
    function UgcRequestContentDataFromParams(
        contentTypeName: string,
        contentId: string,
        p2: number,
        p3: number,
        p4: number
    ): number;
    function N_0x7fd2990af016795e(
        contentTypeName: string,
        contentId: string,
        p2: number,
        p3: number,
        p4: number
    ): number;
    function UgcSetBookmarked(contentId: string, bookmarked: boolean, contentTypeName: string): boolean;
    function N_0x274a1519dfc1094f(contentId: string, bookmarked: boolean, contentTypeName: string): boolean;
    function UgcSetDeleted(p1: boolean): LuaMultiReturn<[boolean, number, number]>;
    function N_0xd05d1a6c74da3498(p1: boolean): LuaMultiReturn<[boolean, number, number]>;
    function UgcSetPlayerData(contentId: string, rating: number, contentTypeName: string): boolean;
    function N_0x692d808c34a82143(contentId: string, rating: number, contentTypeName: string): boolean;
    function UgcSetQueryDataFromOffline(p0: boolean): void;
    function N_0xf98dde0a8ed09323(p0: boolean): void;
    function UgcTextureDownloadRequest(
        p1: number,
        p2: number,
        p3: number,
        p5: boolean
    ): LuaMultiReturn<[number, number, number]>;
    function N_0x308f96458b7087cc(
        p1: number,
        p2: number,
        p3: number,
        p5: boolean
    ): LuaMultiReturn<[number, number, number]>;
    function UgcUpdateContent(
        contentId: string,
        dataCount: number,
        contentName: string,
        description: string,
        tagsCsv: string,
        contentTypeName: string
    ): LuaMultiReturn<[boolean, number]>;
    function N_0x648e7a5434af7969(
        contentId: string,
        dataCount: number,
        contentName: string,
        description: string,
        tagsCsv: string,
        contentTypeName: string
    ): LuaMultiReturn<[boolean, number]>;
    function UgcUpdateMission(
        contentId: string,
        contentName: string,
        description: string,
        tagsCsv: string,
        contentTypeName: string
    ): boolean;
    function N_0x4645de9980999e93(
        contentId: string,
        contentName: string,
        description: string,
        tagsCsv: string,
        contentTypeName: string
    ): boolean;
    function Ui3dsceneIsAvailable(): boolean;
    function N_0xd3a10fc7fd8d98cd(): boolean;
    function Ui3dscenePushPreset(presetName: string): boolean;
    function N_0xf1cea8a4198d8e9a(presetName: string): boolean;
    function UiIsSingleplayerPauseMenuActive(): boolean;
    function N_0xea2f2061875eed90(): boolean;
    function UnblockDecisionMakerEvent(name: number, eventType: number): void;
    function UncuffPed(ped: number): void;
    function UnfreezeRadioStation(radioStation: string): void;
    function UnloadCloudHat(name: string, p1: number): void;
    function N_0xa74802fb8d0b7814(name: string, p1: number): void;
    function UnloadContentChangeSetGroup(hash: number): void;
    function UnlockMinimapAngle(): void;
    function UnlockMinimapPosition(): void;
    function UnlockMissionNewsStory(newsStory: number): void;
    function UnlockRadioStationTrackList(radioStation: string, trackListName: string): void;
    function N_0x031acb6aba18c729(radioStation: string, trackListName: string): void;
    function UnpatchDecalDiffuseMap(decalType: number): void;
    function N_0xb7ed70c49521a61d(decalType: number): void;
    function UndoDecalTextureOverride(decalType: number): void;
    function UnpausePlaybackRecordedVehicle(vehicle: number): void;
    function UnpinInterior(interior: number): void;
    function UnpinRopeVertex(ropeId: number, vertex: number): void;
    function UnregisterPedheadshot(id: number): void;
    function UnregisterRawNuiCallback(callbackType: string): void;
    function UnregisterScriptWithAudio(): void;
    function UpdateLightsOnEntity(entity: number): void;
    function N_0xdeadc0dedeadc0de(entity: number): void;
    function EntityDescriptionText(entity: number): void;
    function UpdateLsur(enableMixes: boolean): void;
    function UpdateMapdataEntity(mapdata: number, entity: number, entityDef: any): void;
    function UpdateNavmeshBlockingObject(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: number,
        p6: number,
        p7: number,
        p8: number
    ): void;
    function UpdateOnscreenKeyboard(): number;
    function UpdatePedHeadBlendData(ped: number, shapeMix: number, skinMix: number, thirdMix: number): void;
    function UpdatePlayerTeleport(player: number): boolean;
    function N_0xe23d5873c2394c61(player: number): boolean;
    function HasPlayerTeleportFinished(player: number): boolean;
    function UpdateTaskAimGunScriptedTarget(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: number,
        p5: boolean
    ): void;
    function UpdateTaskHandsUpDuration(ped: number, duration: number): void;
    function UpdateTaskSweepAimEntity(ped: number, entity: number): void;
    function UpdateTaskSweepAimPosition(p0: number, p1: number, p2: number, p3: number): void;
    function UseFakeMpCash(p0: boolean): void;
    function N_0x170f541e1cadd1de(p0: boolean): void;
    function UseParticleFxAsset(name: string): void;
    function SetPtfxAssetNextCall(name: string): void;
    function UseParticleFxAssetNextCall(name: string): void;
    function UsePlayerColourInsteadOfTeamColour(toggle: boolean): void;
    function UseSirenAsHorn(vehicle: number, toggle: boolean): void;
    function UseStuntCameraThisFrame(): void;
    function N_0x6493cf69859b116a(): void;
    function UseWaypointRecordingAsAssistedMovementRoute(name: string, p1: boolean, p2: number, p3: number): void;
    function UsingMissionCreator(toggle: boolean): void;
    function Vdist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    function Vdist2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    function VehToNet(vehicle: number): number;
    function VehicleWaypointPlaybackOverrideSpeed(vehicle: number, speed: number): void;
    function VehicleWaypointPlaybackPause(vehicle: number): void;
    function VehicleWaypointPlaybackResume(vehicle: number): void;
    function VehicleWaypointPlaybackUseDefaultSpeed(vehicle: number): void;
    function Vmag(x: number, y: number, z: number): number;
    function Vmag2(x: number, y: number, z: number): number;
    function Wait(ms: number): void;
    function WasCutsceneSkipped(): boolean;
    function WasEventCanceled(): boolean;
    function WasPedKilledByStealth(ped: number): boolean;
    function WasPedKilledByTakedown(ped: number): boolean;
    function WasPedKnockedOut(ped: number): boolean;
    function N_0x61767f73eaceed21(ped: number): boolean;
    function WasPedSkeletonUpdated(ped: number): boolean;
    function WashDecalsFromVehicle(vehicle: number, p1: number): void;
    function WashDecalsInRange(p0: number, p1: number, p2: number, p3: number, p4: number): void;
    function WaterOverrideFadeIn(p0: number): void;
    function N_0xa8434f1dff41d6e7(p0: number): void;
    function WaterOverrideFadeOut(p0: number): void;
    function N_0xc3c221addde31a11(p0: number): void;
    function WaterOverrideSetOceannoiseminamplitude(minAmplitude: number): void;
    function N_0x31727907b2c43c55(minAmplitude: number): void;
    function WaterOverrideSetOceanwaveamplitude(amplitude: number): void;
    function N_0x405591ec8fd9096d(amplitude: number): void;
    function WaterOverrideSetOceanwavemaxamplitude(maxAmplitude: number): void;
    function N_0xb3e6360dde733e82(maxAmplitude: number): void;
    function WaterOverrideSetOceanwaveminamplitude(minAmplitude: number): void;
    function N_0xf751b16fb32abc1d(minAmplitude: number): void;
    function WaterOverrideSetRipplebumpiness(bumpiness: number): void;
    function N_0x7c9c0b1eeb1f9072(bumpiness: number): void;
    function WaterOverrideSetRippledisturb(disturb: number): void;
    function N_0xb9854dfde0d833d6(disturb: number): void;
    function WaterOverrideSetRipplemaxbumpiness(maxBumpiness: number): void;
    function N_0x9f5e6bb6b34540da(maxBumpiness: number): void;
    function WaterOverrideSetRippleminbumpiness(minBumpiness: number): void;
    function N_0x6216b116083a7cb4(minBumpiness: number): void;
    function WaterOverrideSetShorewaveamplitude(amplitude: number): void;
    function N_0xb8f87ead7533b176(amplitude: number): void;
    function WaterOverrideSetShorewavemaxamplitude(maxAmplitude: number): void;
    function N_0xa7a1127490312c36(maxAmplitude: number): void;
    function WaterOverrideSetShorewaveminamplitude(minAmplitude: number): void;
    function N_0xc3ead29ab273ece8(minAmplitude: number): void;
    function WaterOverrideSetStrength(strength: number): void;
    function N_0xc54a08c85ae4d410(strength: number): void;
    function WaypointPlaybackGetIsPaused(p0: number): boolean;
    function WaypointPlaybackOverrideSpeed(p0: number, p1: number, p2: boolean): void;
    function WaypointPlaybackPause(p0: number, p1: boolean, p2: boolean): void;
    function WaypointPlaybackResume(p0: number, p1: boolean, p2: number, p3: number): void;
    function WaypointPlaybackStartAimingAtCoord(p0: number, p1: number, p2: number, p3: number, p4: boolean): void;
    function WaypointPlaybackStartAimingAtPed(p0: number, p1: number, p2: boolean): void;
    function WaypointPlaybackStartShootingAtCoord(
        p0: number,
        p1: number,
        p2: number,
        p3: number,
        p4: boolean,
        p5: number
    ): void;
    function WaypointPlaybackStartShootingAtPed(p0: number, p1: number, p2: boolean, p3: number): void;
    function N_0xe70ba7b90f8390dc(p0: number, p1: number, p2: boolean, p3: number): void;
    function WaypointPlaybackStopAimingOrShooting(p0: number): void;
    function WaypointPlaybackUseDefaultSpeed(p0: number): void;
    function WaypointRecordingGetClosestWaypoint(
        name: string,
        x: number,
        y: number,
        z: number,
        point: number
    ): LuaMultiReturn<[boolean, number]>;
    function WaypointRecordingGetCoord(name: string, point: number): LuaMultiReturn<[boolean, Vector3]>;
    function WaypointRecordingGetNumPoints(name: string, points: number): LuaMultiReturn<[boolean, number]>;
    function WaypointRecordingGetSpeedAtPoint(name: string, point: number): number;
    function WithdrawVc(amount: number): number;
    function N_0xf70efa14fe091429(amount: number): number;
    function WouldEntityBeOccluded(entityModelHash: number, x: number, y: number, z: number, p4: boolean): boolean;
}
